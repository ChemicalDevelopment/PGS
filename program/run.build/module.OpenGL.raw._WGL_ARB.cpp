/* Generated code for Python source for module 'OpenGL.raw._WGL_ARB'
 * created by Nuitka version 0.5.22
 *
 * This code is in part copyright 2016 Kay Hayen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "nuitka/prelude.hpp"

#include "__helpers.hpp"

/* The _module_OpenGL$raw$_WGL_ARB is a Python object pointer of module type. */

/* Note: For full compatibility with CPython, every module variable access
 * needs to go through it except for cases where the module cannot possibly
 * have changed in the mean time.
 */

PyObject *module_OpenGL$raw$_WGL_ARB;
PyDictObject *moduledict_OpenGL$raw$_WGL_ARB;

/* The module constants used, if any. */
extern PyObject *const_str_plain_wglGetGenlockSampleRateI3D;
extern PyObject *const_tuple_str_plain_WGL_NO_ACCELERATION_EXT_int_pos_8229_tuple;
extern PyObject *const_str_plain_LPVOID;
extern PyObject *const_str_plain_WGL_ALPHA_SHIFT_ARB;
extern PyObject *const_int_pos_8229;
extern PyObject *const_tuple_str_chr_42_tuple;
extern PyObject *const_tuple_str_plain_WGL_ARB_multisample_int_pos_1_tuple;
extern PyObject *const_str_plain_WGL_AUX0_ARB;
extern PyObject *const_str_plain_wglReleasePbufferDCARB;
extern PyObject *const_str_plain_PFNWGLGETFRAMEUSAGEI3DPROC;
extern PyObject *const_str_plain_PFNWGLFREEMEMORYNVPROC;
extern PyObject *const_str_plain_PFNWGLBEGINFRAMETRACKINGI3DPROC;
extern PyObject *const_str_digest_910d441ded1723734fe2a6311f3ac35c;
extern PyObject *const_tuple_str_plain_WGL_ARB_pbuffer_int_pos_1_tuple;
extern PyObject *const_int_pos_8226;
extern PyObject *const_str_plain_PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC;
extern PyObject *const_str_plain_WGL_ATI_pixel_format_float;
extern PyObject *const_str_plain_WGL_MAX_PBUFFER_PIXELS_ARB;
extern PyObject *const_str_plain_WGL_GENLOCK_SOURCE_MULTIVIEW_I3D;
extern PyObject *const_str_plain_WGL_DRAW_TO_PBUFFER_ARB;
extern PyObject *const_tuple_str_plain_platform_str_plain_constant_tuple;
extern PyObject *const_tuple_str_plain_wglDestroyPbufferARB_tuple;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB_int_pos_8319_tuple;
extern PyObject *const_str_digest_3567921037b9a6b20e27b42204f2cbbe;
extern PyObject *const_tuple_str_plain_wglGetGenlockSourceEdgeI3D_tuple;
extern PyObject *const_str_plain_WGL_MAX_PBUFFER_HEIGHT_EXT;
extern PyObject *const_str_plain_HPBUFFEREXT;
extern PyObject *const_tuple_str_plain_WGL_TRANSPARENT_EXT_int_pos_8202_tuple;
extern PyObject *const_str_plain_POINTER;
extern PyObject *const_str_plain_PFNWGLGETGENLOCKSOURCEDELAYI3DPROC;
extern PyObject *const_str_plain_WGL_TYPE_RGBA_EXT;
extern PyObject *const_str_plain_wglAllocateMemoryNV;
extern PyObject *const_tuple_str_plain_GLAPI_int_0_tuple;
extern PyObject *const_tuple_str_plain_WGL_NO_TEXTURE_ARB_int_pos_8311_tuple;
extern PyObject *const_str_digest_6b956dd3df480220bcf8ee2ae4fdaa68;
extern PyObject *const_tuple_str_plain_WGL_COLOR_BITS_ARB_int_pos_8212_tuple;
extern PyObject *const_str_plain_WGL_GAMMA_EXCLUDE_DESKTOP_I3D;
extern PyObject *const_str_digest_35e0f985ccd66d7f81162a05c95c3832;
extern PyObject *const_str_plain_PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC;
extern PyObject *const_str_digest_5babe4ef3433ca50e8557f8dcaaf50b6;
extern PyObject *const_str_plain_WGL_DRAW_TO_WINDOW_ARB;
extern PyObject *const_str_plain_WGL_ARB_pixel_format_float;
extern PyObject *const_str_plain_WGL_DEPTH_COMPONENT_NV;
extern PyObject *const_str_plain_WGL_I3D_swap_frame_lock;
extern PyObject *const_str_plain_WGL_GREEN_SHIFT_EXT;
extern PyObject *const_str_plain_WGL_GENERIC_ACCELERATION_ARB;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB_int_pos_8322_tuple;
extern PyObject *const_str_digest_47836e5a0b8ae4195bbd9a5fb0b76173;
extern PyObject *const_str_digest_2602a38ebd0a1bbfd146859406841520;
extern PyObject *const_tuple_str_plain_wglDestroyDisplayColorTableEXT_tuple;
extern PyObject *const_int_pos_8216;
extern PyObject *const_str_plain_c_uint;
extern PyObject *const_str_plain_WGL_PBUFFER_HEIGHT_EXT;
extern PyObject *const_str_plain_WGL_SAMPLE_BUFFERS_EXT;
extern PyObject *const_int_pos_8212;
extern PyObject *const_int_pos_8213;
extern PyObject *const_int_pos_8355;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_GREEN_BITS_EXT_int_pos_8223_tuple;
extern PyObject *const_int_pos_8357;
extern PyObject *const_int_pos_8204;
extern PyObject *const_tuple_str_plain_WGL_ALPHA_BITS_ARB_int_pos_8219_tuple;
extern PyObject *const_str_plain_PFNWGLSWAPINTERVALEXTPROC;
extern PyObject *const_int_pos_8353;
extern PyObject *const_int_pos_8352;
extern PyObject *const_tuple_str_plain_WGL_STENCIL_BITS_ARB_int_pos_8227_tuple;
extern PyObject *const_tuple_str_plain_WGL_SWAP_LAYER_BUFFERS_EXT_int_pos_8198_tuple;
extern PyObject *const_str_plain_wglGetMscRateOML;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_DEPTH_COMPONENT_NV_int_pos_8358_tuple;
extern PyObject *const_str_plain_WGL_I3D_digital_video_control;
extern PyObject *const_tuple_str_plain_WGL_NUMBER_PIXEL_FORMATS_EXT_int_pos_8192_tuple;
extern PyObject *const_tuple_str_plain_WGL_SHARE_DEPTH_ARB_int_pos_8204_tuple;
extern PyObject *const_tuple_str_plain_WGL_GREEN_BITS_ARB_int_pos_8215_tuple;
extern PyObject *const_str_plain_PFNWGLSETPBUFFERATTRIBARBPROC;
extern PyObject *const_str_plain_PFNWGLGETPIXELFORMATATTRIBIVARBPROC;
extern PyObject *const_str_plain_WGL_WGLEXT_VERSION;
extern PyObject *const_int_neg_1;
extern PyObject *const_tuple_str_plain_WGL_EXT_pbuffer_int_pos_1_tuple;
extern PyObject *const_int_pos_8608;
extern PyObject *const_tuple_str_plain_WGL_BIND_TO_TEXTURE_RGB_ARB_int_pos_8304_tuple;
extern PyObject *const_tuple_str_plain_wglGenlockSourceDelayI3D_tuple;
extern PyObject *const_str_plain_HANDLE;
extern PyObject *const_str_plain_WGL_TEXTURE_FLOAT_R_NV;
extern PyObject *const_str_plain_WGL_BLUE_SHIFT_EXT;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_ALPHA_BITS_EXT_int_pos_8225_tuple;
extern PyObject *const_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB;
extern PyObject *const_str_plain_WGL_TEXTURE_RECTANGLE_NV;
extern PyObject *const_str_digest_b6f5c191c5bbafc6849d65a12c19e5a8;
extern PyObject *const_str_plain_wglGetSyncValuesOML;
extern PyObject *const_str_digest_71367b36dac5210f05e4a2df92679eca;
extern PyObject *const_str_plain_PFNWGLALLOCATEMEMORYNVPROC;
extern PyObject *const_list_18800e1d879c57822e1bb41e51915893_list;
extern PyObject *const_str_plain_WGL_NUMBER_UNDERLAYS_EXT;
extern PyObject *const_str_plain_wglIsEnabledFrameLockI3D;
extern PyObject *const_tuple_str_plain_wglWaitForSbcOML_tuple;
extern PyObject *const_str_plain_WGL_MAX_PBUFFER_PIXELS_EXT;
extern PyObject *const_str_plain_WGL_AUX4_ARB;
extern PyObject *const_str_digest_0e0a6e889f304be9faaaf4c9c58e53e6;
extern PyObject *const_int_pos_2;
extern PyObject *const_tuple_str_plain_WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D_int_pos_8275_tuple;
extern PyObject *const_str_plain_WGL_ARB_buffer_region;
extern PyObject *const_str_plain_wglGenlockSourceDelayI3D;
extern PyObject *const_tuple_str_plain_wglSetGammaTableParametersI3D_tuple;
extern PyObject *const_str_plain_wglDestroyDisplayColorTableEXT;
extern PyObject *const_tuple_str_plain_wglGetSwapIntervalEXT_tuple;
extern PyObject *const_str_plain_PFNWGLBINDTEXIMAGEARBPROC;
extern PyObject *const_tuple_str_plain_WGL_DRAW_TO_PBUFFER_EXT_int_pos_8237_tuple;
extern PyObject *const_str_plain_WGL_SAMPLES_EXT;
extern PyObject *const_str_plain_WGL_SWAP_EXCHANGE_EXT;
extern PyObject *const_str_plain_WGL_TEXTURE_TARGET_ARB;
extern PyObject *const_str_digest_9eca954cc82dac3f9b07200e94e97ef6;
extern PyObject *const_str_digest_4eb319abd39deea1349f0c8bd70f2489;
extern PyObject *const_int_pos_8336;
extern PyObject *const_str_digest_4e68b11602a579fdb5256a8e4b2525d7;
extern PyObject *const_str_plain_wglQueryFrameLockMasterI3D;
extern PyObject *const_tuple_str_plain_WGL_MIPMAP_LEVEL_ARB_int_pos_8315_tuple;
extern PyObject *const_str_plain_wglSwapLayerBuffersMscOML;
extern PyObject *const_tuple_str_plain_WGL_PBUFFER_HEIGHT_EXT_int_pos_8245_tuple;
extern PyObject *const_str_plain_WGL_ALPHA_BITS_EXT;
extern PyObject *const_tuple_str_plain_WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D_int_pos_8264_tuple;
extern PyObject *const_str_plain_WGL_DEPTH_BITS_EXT;
extern PyObject *const_str_plain_ERROR_INVALID_PIXEL_TYPE_ARB;
extern PyObject *const_str_plain_PFNWGLGETMSCRATEOMLPROC;
extern PyObject *const_tuple_str_plain_WGL_SHARE_STENCIL_ARB_int_pos_8205_tuple;
extern PyObject *const_str_plain_WGL_TYPE_RGBA_FLOAT_ARB;
extern PyObject *const_str_plain_WGL_TRANSPARENT_GREEN_VALUE_ARB;
extern PyObject *const_str_plain_WGL_AUX7_ARB;
extern PyObject *const_str_plain_PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC;
extern PyObject *const_str_plain_PFNWGLENABLEGENLOCKI3DPROC;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_BLUE_BITS_ARB_int_pos_8224_tuple;
extern PyObject *const_str_plain_WGL_TRANSPARENT_BLUE_VALUE_ARB;
extern PyObject *const_tuple_str_plain_WGL_GREEN_SHIFT_EXT_int_pos_8216_tuple;
extern PyObject *const_str_plain_WGL_ACCUM_BLUE_BITS_ARB;
extern PyObject *const_str_digest_51651ca322fac6e00bbf0f5bc3c999e5;
extern PyObject *const_str_digest_caa18e96dad7d983b003c96eb46b0606;
extern PyObject *const_str_plain_ctypes;
extern PyObject *const_str_plain_createBaseFunction;
extern PyObject *const_str_plain_wglRestoreBufferRegionARB;
extern PyObject *const_str_plain_wglChoosePixelFormatARB;
extern PyObject *const_tuple_str_plain_wglIsEnabledFrameLockI3D_tuple;
extern PyObject *const_str_plain_WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D;
extern PyObject *const_str_plain_WGL_DOUBLE_BUFFER_EXT;
extern PyObject *const_str_plain_PFNWGLGETGENLOCKSOURCEEDGEI3DPROC;
extern PyObject *const_str_plain_WGL_NEED_PALETTE_EXT;
extern PyObject *const_tuple_str_plain_wglGetExtensionsStringARB_tuple;
extern PyObject *const_str_plain_HPBUFFERARB;
extern PyObject *const_tuple_str_plain_WGL_SWAP_UNDEFINED_ARB_int_pos_8234_tuple;
extern PyObject *const_str_plain_UINT;
extern PyObject *const_int_pos_8274;
extern PyObject *const_str_plain_INT64;
extern PyObject *const_str_plain_c_void;
extern PyObject *const_tuple_str_plain_WGL_AUX0_ARB_int_pos_8327_tuple;
extern PyObject *const_str_plain_WGL_EXT_swap_control;
extern PyObject *const_str_plain_wglGetFrameUsageI3D;
extern PyObject *const_tuple_str_plain_WGL_I3D_genlock_int_pos_1_tuple;
extern PyObject *const_int_pos_8256;
extern PyObject *const_tuple_str_plain_WGL_FRONT_COLOR_BUFFER_BIT_ARB_int_pos_1_tuple;
extern PyObject *const_str_plain_PFNWGLISENABLEDFRAMELOCKI3DPROC;
extern PyObject *const_int_pos_8259;
extern PyObject *const_str_plain_WGL_TEXTURE_FLOAT_RGB_NV;
extern PyObject *const_tuple_str_plain_wglEndFrameTrackingI3D_tuple;
extern PyObject *const_tuple_str_plain_WGL_DRAW_TO_WINDOW_EXT_int_pos_8193_tuple;
extern PyObject *const_str_digest_06f56d0c656db6de2d78febff909077b;
extern PyObject *const_int_pos_8275;
extern PyObject *const_str_plain_FLOAT;
extern PyObject *const_tuple_str_plain_wglDeleteBufferRegionARB_tuple;
extern PyObject *const_str_plain_c_long;
extern PyObject *const_str_plain_WGL_GREEN_BITS_ARB;
extern PyObject *const_str_plain_ERROR_INVALID_PIXEL_TYPE_EXT;
extern PyObject *const_tuple_str_plain_WGL_SHARE_ACCUM_EXT_int_pos_8206_tuple;
extern PyObject *const_str_plain_PFNWGLDESTROYPBUFFEREXTPROC;
extern PyObject *const_str_plain_WGL_TEXTURE_DEPTH_COMPONENT_NV;
extern PyObject *const_str_plain_wglCreateImageBufferI3D;
extern PyObject *const_str_digest_7d1601f8ef4eae27b26000dafed4d3ff;
extern PyObject *const_str_plain_wglQueryPbufferEXT;
extern PyObject *const_tuple_str_plain_wglGetSyncValuesOML_tuple;
extern PyObject *const_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB;
extern PyObject *const_str_plain_argTypes;
extern PyObject *const_tuple_str_plain_wglQueryFrameLockMasterI3D_tuple;
extern PyObject *const_str_digest_9218e564c09403cf3bd4116428af775b;
extern PyObject *const_str_plain_WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D;
extern PyObject *const_str_plain_WGL_TEXTURE_FLOAT_RGBA_NV;
extern PyObject *const_list_str_plain_None_str_empty_str_empty_str_empty_str_plain_None_list;
extern PyObject *const_str_plain_WGL_AUX8_ARB;
extern PyObject *const_str_plain_PFNWGLGETEXTENSIONSSTRINGEXTPROC;
extern PyObject *const_tuple_af092cc91f9073b91bba71bb57441e20_tuple;
extern PyObject *const_int_pos_8260;
extern PyObject *const_list_str_plain_None_list;
extern PyObject *const_int_pos_8324;
extern PyObject *const_int_pos_8325;
extern PyObject *const_str_plain_PFNWGLGETGAMMATABLEPARAMETERSI3DPROC;
extern PyObject *const_int_pos_8327;
extern PyObject *const_int_pos_8320;
extern PyObject *const_int_pos_8321;
extern PyObject *const_int_pos_8322;
extern PyObject *const_int_pos_8323;
extern PyObject *const_str_plain_wglSetPbufferAttribARB;
extern PyObject *const_tuple_str_plain_wglGetPixelFormatAttribfvEXT_tuple;
extern PyObject *const_str_plain_WGL_ACCUM_BITS_ARB;
extern PyObject *const_tuple_str_plain_WGL_EXT_display_color_table_int_pos_1_tuple;
extern PyObject *const_str_plain_wglGetGammaTableI3D;
extern PyObject *const_str_plain_wglEnableFrameLockI3D;
extern PyObject *const_tuple_str_plain_WGL_SWAP_COPY_ARB_int_pos_8233_tuple;
extern PyObject *const_tuple_str_plain_WGL_AUX4_ARB_int_pos_8331_tuple;
extern PyObject *const_str_digest_fd972fd0bb7e774f747da8f00829ad38;
extern PyObject *const_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D;
extern PyObject *const_tuple_str_plain_WGL_MIPMAP_TEXTURE_ARB_int_pos_8308_tuple;
extern PyObject *const_tuple_str_plain_wglReleaseImageBufferEventsI3D_tuple;
extern PyObject *const_str_plain_WGL_ACCELERATION_ARB;
extern PyObject *const_str_plain_WGL_AUX3_ARB;
extern PyObject *const_int_pos_8306;
extern PyObject *const_str_plain_WGL_DEPTH_FLOAT_EXT;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_FLOAT_RG_NV_int_pos_8374_tuple;
extern PyObject *const_str_plain_WGL_TRANSPARENT_ALPHA_VALUE_ARB;
extern PyObject *const_str_plain_PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC;
extern PyObject *const_tuple_str_plain_wglGetGammaTableI3D_tuple;
extern PyObject *const_tuple_str_plain_WGL_PIXEL_TYPE_ARB_int_pos_8211_tuple;
extern PyObject *const_str_plain_WGL_MIPMAP_LEVEL_ARB;
extern PyObject *const_str_plain_WGL_SHARE_DEPTH_EXT;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB_int_pos_8318_tuple;
extern PyObject *const_tuple_str_plain_WGL_IMAGE_BUFFER_MIN_ACCESS_I3D_int_pos_1_tuple;
extern PyObject *const_str_plain_WGL_EXT_display_color_table;
extern PyObject *const_str_digest_a7288785cad162ee066e757eb0fb8231;
extern PyObject *const_int_pos_8199;
extern PyObject *const_list_str_plain_None_str_plain_None_str_plain_None_list;
extern PyObject *const_int_pos_8234;
static PyObject *const_str_digest_25a1e35ae2bbba7e6fcf795ae9c7fe60;
extern PyObject *const_str_plain_WGL_SWAP_EXCHANGE_ARB;
extern PyObject *const_str_plain_GLAPI;
extern PyObject *const_int_pos_8218;
extern PyObject *const_str_plain_WGL_NEED_SYSTEM_PALETTE_ARB;
extern PyObject *const_int_pos_8231;
extern PyObject *const_tuple_str_plain_WGL_GREEN_SHIFT_ARB_int_pos_8216_tuple;
extern PyObject *const_str_plain_PFNWGLCREATEIMAGEBUFFERI3DPROC;
extern PyObject *const_tuple_str_plain_wglGetGammaTableParametersI3D_tuple;
extern PyObject *const_tuple_str_plain_WGL_EXT_make_current_read_int_pos_1_tuple;
extern PyObject *const_int_pos_8326;
extern PyObject *const_list_str_plain_None_str_plain_None_str_empty_str_empty_str_empty_list;
extern PyObject *const_tuple_str_plain_wglGetCurrentReadDCARB_tuple;
extern PyObject *const_tuple_str_plain_WGL_MAX_PBUFFER_WIDTH_EXT_int_pos_8239_tuple;
extern PyObject *const_str_plain_None;
extern PyObject *const_str_plain_wglGetGenlockSourceEdgeI3D;
extern PyObject *const_tuple_str_plain_WGL_IMAGE_BUFFER_LOCK_I3D_int_pos_2_tuple;
extern PyObject *const_str_digest_ea4d73112d8315d78b1cc35366f55d8b;
extern PyObject *const_tuple_str_plain_wglSetGammaTableI3D_tuple;
extern PyObject *const_str_plain_WGL_TYPE_COLORINDEX_ARB;
extern PyObject *const_str_plain_platform;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_BITS_EXT_int_pos_8221_tuple;
extern PyObject *const_str_plain_GLuint;
extern PyObject *const_str_plain_WGL_STEREO_EXT;
extern PyObject *const_tuple_str_plain_WGL_TYPE_COLORINDEX_EXT_int_pos_8236_tuple;
extern PyObject *const_str_digest_e1b035e816f7751d5ec02c0bc4a3e9a4;
extern PyObject *const_tuple_str_digest_47836e5a0b8ae4195bbd9a5fb0b76173_int_pos_8372_tuple;
extern PyObject *const_str_digest_ac53c5eb533d138ddfa18088ceca426a;
extern PyObject *const_tuple_empty;
extern PyObject *const_tuple_str_plain_WGL_TYPE_RGBA_ARB_int_pos_8235_tuple;
extern PyObject *const_str_plain_wglCreatePbufferEXT;
extern PyObject *const_str_plain_WGL_IMAGE_BUFFER_LOCK_I3D;
extern PyObject *const_tuple_str_plain_WGL_SHARE_DEPTH_EXT_int_pos_8204_tuple;
extern PyObject *const_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB;
extern PyObject *const_int_pos_8328;
extern PyObject *const_str_plain_dll;
extern PyObject *const_int_pos_8329;
extern PyObject *const_str_plain_WGL_ALPHA_BITS_ARB;
extern PyObject *const_str_plain_PFNWGLSETGAMMATABLEI3DPROC;
extern PyObject *const_str_plain_WGL_ACCUM_BLUE_BITS_EXT;
extern PyObject *const_str_plain_WGL_TRANSPARENT_EXT;
extern PyObject *const_tuple_str_plain_WGL_SAMPLE_BUFFERS_EXT_int_pos_8257_tuple;
extern PyObject *const_str_plain_PFNWGLQUERYFRAMETRACKINGI3DPROC;
extern PyObject *const_tuple_str_plain_WGL_ALPHA_SHIFT_ARB_int_pos_8220_tuple;
extern PyObject *const_tuple_str_plain_WGL_STEREO_ARB_int_pos_8210_tuple;
extern PyObject *const_int_pos_8368;
extern PyObject *const_int_pos_8369;
extern PyObject *const_str_plain_WGL_RED_SHIFT_EXT;
extern PyObject *const_str_plain_WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D;
extern PyObject *const_int_pos_8330;
extern PyObject *const_str_plain_WGL_AUX9_ARB;
extern PyObject *const_str_plain_WGL_ACCUM_RED_BITS_ARB;
extern PyObject *const_str_plain_WGL_NUMBER_PIXEL_FORMATS_ARB;
extern PyObject *const_str_plain_WGL_STENCIL_BUFFER_BIT_ARB;
extern PyObject *const_str_plain_wglGetPixelFormatAttribivEXT;
extern PyObject *const_int_pos_8215;
extern PyObject *const_str_plain_WGL_AUX1_ARB;
extern PyObject *const_tuple_str_plain_wglGetCurrentReadDCEXT_tuple;
extern PyObject *const_str_plain_WGL_ARB_extensions_string;
extern PyObject *const_int_pos_8209;
extern PyObject *const_int_pos_8217;
extern PyObject *const_tuple_str_plain_WGL_I3D_swap_frame_lock_int_pos_1_tuple;
extern PyObject *const_tuple_str_plain_WGL_AUX_BUFFERS_EXT_int_pos_8228_tuple;
static PyObject *const_str_plain__WGL_ARB;
extern PyObject *const_int_pos_8202;
extern PyObject *const_list_d8a0444503e8b298f461aa47ef746043_list;
extern PyObject *const_str_plain_PFNWGLRELEASEPBUFFERDCARBPROC;
extern PyObject *const_int_pos_8207;
extern PyObject *const_int_pos_8206;
extern PyObject *const_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB;
extern PyObject *const_int_pos_8358;
extern PyObject *const_str_plain_wglDisableGenlockI3D;
extern PyObject *const_tuple_str_plain_WGL_PBUFFER_WIDTH_EXT_int_pos_8244_tuple;
extern PyObject *const_str_plain_WGL_ARB_pixel_format;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_RECTANGLE_NV_int_pos_8354_tuple;
extern PyObject *const_tuple_str_plain_WGL_GENLOCK_SOURCE_MULTIVIEW_I3D_int_pos_8260_tuple;
extern PyObject *const_str_plain___file__;
extern PyObject *const_str_plain_WGL_CUBE_MAP_FACE_ARB;
extern PyObject *const_tuple_str_plain_WGL_FLOAT_COMPONENTS_NV_int_pos_8368_tuple;
extern PyObject *const_str_plain_GL;
extern PyObject *const_tuple_str_plain_WGL_TRANSPARENT_RED_VALUE_ARB_int_pos_8247_tuple;
extern PyObject *const_tuple_str_plain_WGL_TYPE_RGBA_FLOAT_ARB_int_pos_8608_tuple;
extern PyObject *const_int_pos_8208;
extern PyObject *const_int_pos_8354;
extern PyObject *const_str_plain_WGL_NEED_SYSTEM_PALETTE_EXT;
extern PyObject *const_tuple_str_plain_WGL_SAMPLES_EXT_int_pos_8258_tuple;
extern PyObject *const_tuple_str_plain_WGL_DRAW_TO_WINDOW_ARB_int_pos_8193_tuple;
extern PyObject *const_tuple_str_plain_wglCreatePbufferARB_tuple;
extern PyObject *const_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV;
extern PyObject *const_tuple_str_plain_WGL_NUMBER_UNDERLAYS_EXT_int_pos_8201_tuple;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_ALPHA_BITS_ARB_int_pos_8225_tuple;
extern PyObject *const_str_plain_WGL_TRANSPARENT_INDEX_VALUE_ARB;
extern PyObject *const_str_plain_WGL_SHARE_ACCUM_EXT;
extern PyObject *const_str_plain_PFNWGLGENLOCKSOURCEEDGEI3DPROC;
extern PyObject *const_int_pos_8219;
extern PyObject *const_tuple_str_plain_WGL_FULL_ACCELERATION_ARB_int_pos_8231_tuple;
extern PyObject *const_tuple_str_plain_WGL_NV_float_buffer_int_pos_1_tuple;
extern PyObject *const_str_plain_WGL_OPTIMAL_PBUFFER_WIDTH_EXT;
extern PyObject *const_str_plain_WGL_GREEN_BITS_EXT;
extern PyObject *const_str_digest_f28c51a73c7e8b93a01de57cca19fd5f;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_RED_BITS_ARB_int_pos_8222_tuple;
extern PyObject *const_tuple_str_plain_WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D_int_pos_8266_tuple;
extern PyObject *const_str_digest_141f64f90b69d759fbe10ddbb51496a4;
extern PyObject *const_tuple_str_plain_WGL_GREEN_BITS_EXT_int_pos_8215_tuple;
extern PyObject *const_str_chr_42;
extern PyObject *const_list_ad648f6db8e6027a0d59f72015f83cb6_list;
extern PyObject *const_tuple_str_plain_wglGetDigitalVideoParametersI3D_tuple;
extern PyObject *const_tuple_str_plain_wglGenlockSourceEdgeI3D_tuple;
extern PyObject *const_tuple_str_plain_wglDisableFrameLockI3D_tuple;
extern PyObject *const_tuple_623fcb4092987ca96ff644a39cd644f3_tuple;
extern PyObject *const_str_digest_ffa6fb29db073fbbe133e85f2fc03304;
extern PyObject *const_str_plain_WGL_BLUE_SHIFT_ARB;
extern PyObject *const_str_plain_WGL_SAMPLE_BUFFERS_ARB;
extern PyObject *const_str_plain_WGL_GAMMA_TABLE_SIZE_I3D;
extern PyObject *const_tuple_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV_int_pos_8353_tuple;
extern PyObject *const_tuple_str_plain_wglRestoreBufferRegionARB_tuple;
extern PyObject *const_tuple_str_plain_WGL_PIXEL_TYPE_EXT_int_pos_8211_tuple;
extern PyObject *const_tuple_str_digest_2380c6d01ac5844ca6988b0ad90cfda4_int_pos_8272_tuple;
extern PyObject *const_int_pos_8314;
extern PyObject *const_tuple_str_plain_wglBindDisplayColorTableEXT_tuple;
extern PyObject *const_tuple_str_plain_WGL_BACK_RIGHT_ARB_int_pos_8326_tuple;
extern PyObject *const_tuple_str_plain_WGL_PBUFFER_LOST_ARB_int_pos_8246_tuple;
extern PyObject *const_str_plain_argNames;
extern PyObject *const_str_plain_wglGetPixelFormatAttribivARB;
extern PyObject *const_str_digest_eda57e0b5504ccdf89da57e718f4c91a;
extern PyObject *const_tuple_str_plain_WGL_DRAW_TO_PBUFFER_ARB_int_pos_8237_tuple;
extern PyObject *const_tuple_str_plain_WGL_MAX_PBUFFER_HEIGHT_ARB_int_pos_8240_tuple;
extern PyObject *const_str_plain_wglQueryGenlockMaxSourceDelayI3D;
extern PyObject *const_int_pos_8246;
extern PyObject *const_str_plain_WGL_NO_ACCELERATION_ARB;
extern PyObject *const_str_plain_PFNWGLGETSWAPINTERVALEXTPROC;
extern PyObject *const_str_plain_Constant;
extern PyObject *const_tuple_str_plain_WGL_CUBE_MAP_FACE_ARB_int_pos_8316_tuple;
extern PyObject *const_tuple_str_plain_WGL_I3D_swap_frame_usage_int_pos_1_tuple;
static PyObject *const_list_7e8083d75b3017217439ee4916f4e482_list;
extern PyObject *const_str_plain_WGL_AUX6_ARB;
extern PyObject *const_str_plain_PFNWGLDISABLEGENLOCKI3DPROC;
extern PyObject *const_str_plain_WGL_ARB_render_texture;
extern PyObject *const_int_pos_8265;
extern PyObject *const_str_digest_9de82e7dfc50f53dbba63c180550aaa0;
extern PyObject *const_str_empty;
extern PyObject *const_list_str_plain_None_str_plain_None_str_empty_list;
extern PyObject *const_int_pos_8264;
extern PyObject *const_str_digest_7499980c93da7a563ff037747b161db0;
extern PyObject *const_tuple_str_plain_WGL_BIND_TO_TEXTURE_RGBA_ARB_int_pos_8305_tuple;
extern PyObject *const_str_plain_WGL_SAMPLES_3DFX;
extern PyObject *const_int_pos_8245;
extern PyObject *const_str_plain_WGL_SUPPORT_OPENGL_EXT;
extern PyObject *const_str_plain_WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D;
extern PyObject *const_str_plain_WGL_TYPE_COLORINDEX_EXT;
extern PyObject *const_str_plain_WGL_TYPE_RGBA_FLOAT_ATI;
extern PyObject *const_str_digest_31980cbe9d14ac108582cc7ea19b870d;
extern PyObject *const_int_pos_8271;
extern PyObject *const_str_plain_doc;
extern PyObject *const_tuple_str_plain_WGL_GENERIC_ACCELERATION_EXT_int_pos_8230_tuple;
extern PyObject *const_int_pos_8203;
extern PyObject *const_str_plain_HGLRC;
extern PyObject *const_tuple_str_plain_WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D_int_pos_8274_tuple;
extern PyObject *const_list_str_plain_None_str_empty_list;
extern PyObject *const_tuple_str_plain_WGL_BACK_LEFT_ARB_int_pos_8325_tuple;
extern PyObject *const_str_plain_wglGenlockSourceI3D;
extern PyObject *const_str_digest_71f0e641563f516f91c12581a1c6716a;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_RED_BITS_EXT_int_pos_8222_tuple;
extern PyObject *const_int_pos_8262;
extern PyObject *const_str_plain_CFUNCTYPE;
extern PyObject *const_str_plain_PFNWGLDISABLEFRAMELOCKI3DPROC;
extern PyObject *const_tuple_str_plain_WGL_DOUBLE_BUFFER_EXT_int_pos_8209_tuple;
extern PyObject *const_tuple_str_plain_wglReleasePbufferDCEXT_tuple;
extern PyObject *const_int_pos_8244;
extern PyObject *const_int_pos_8243;
extern PyObject *const_int_pos_8242;
extern PyObject *const_int_pos_8241;
extern PyObject *const_int_pos_8240;
extern PyObject *const_str_plain_PFNWGLCREATEPBUFFEREXTPROC;
extern PyObject *const_str_plain_wglGetGenlockSourceDelayI3D;
extern PyObject *const_str_digest_c79d15590a491407c93d639cdfea7567;
extern PyObject *const_int_pos_8248;
extern PyObject *const_tuple_str_plain_wglBeginFrameTrackingI3D_tuple;
extern PyObject *const_str_plain_wglBindTexImageARB;
extern PyObject *const_str_plain_PFNWGLGETSYNCVALUESOMLPROC;
extern PyObject *const_str_digest_135f509eb5212c158ec600e2a4ff13b0;
extern PyObject *const_str_plain_WGL_NUMBER_OVERLAYS_EXT;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_RGB_ARB_int_pos_8309_tuple;
extern PyObject *const_str_plain_c_ulong;
extern PyObject *const_str_plain_WGL_EXT_make_current_read;
extern PyObject *const_str_plain_WGL_TEXTURE_FORMAT_ARB;
extern PyObject *const_int_pos_8288;
extern PyObject *const_str_plain_wglReleasePbufferDCEXT;
extern PyObject *const_str_plain_WGL_SHARE_STENCIL_ARB;
extern PyObject *const_str_plain_WGL_ALPHA_SHIFT_EXT;
extern PyObject *const_str_digest_62f10c8ecf2475a2f7641cffcfafbff5;
extern PyObject *const_str_plain_wglEndFrameTrackingI3D;
extern PyObject *const_tuple_str_plain_WGL_NV_vertex_array_range_int_pos_1_tuple;
extern PyObject *const_str_plain_c_ubyte;
extern PyObject *const_str_plain_WGL_ACCUM_GREEN_BITS_EXT;
extern PyObject *const_str_plain_PFNWGLENDFRAMETRACKINGI3DPROC;
extern PyObject *const_str_plain_PFNWGLCHOOSEPIXELFORMATARBPROC;
extern PyObject *const_str_plain_PFNWGLDESTROYIMAGEBUFFERI3DPROC;
extern PyObject *const_tuple_str_plain_wglGetFrameUsageI3D_tuple;
extern PyObject *const_int_pos_8200;
extern PyObject *const_str_digest_bad1d3eb1208e57f824628a06f4ae8aa;
extern PyObject *const_str_plain_PFNWGLQUERYPBUFFEREXTPROC;
extern PyObject *const_str_plain_WGL_PIXEL_TYPE_EXT;
extern PyObject *const_str_plain_WGL_RED_BITS_ARB;
extern PyObject *const_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D;
extern PyObject *const_str_plain_WGL_DRAW_TO_PBUFFER_EXT;
extern PyObject *const_tuple_str_plain_wglQueryPbufferARB_tuple;
extern PyObject *const_tuple_str_plain_wglBindTexImageARB_tuple;
extern PyObject *const_tuple_str_plain_WGL_TRANSPARENT_GREEN_VALUE_ARB_int_pos_8248_tuple;
extern PyObject *const_tuple_str_plain_WGL_FRONT_RIGHT_ARB_int_pos_8324_tuple;
extern PyObject *const_tuple_str_plain_WGL_SAMPLES_ARB_int_pos_8258_tuple;
extern PyObject *const_str_plain_WGL_SWAP_UNDEFINED_ARB;
extern PyObject *const_str_plain_PFNWGLBINDDISPLAYCOLORTABLEEXTPROC;
extern PyObject *const_tuple_str_plain_WGL_OML_sync_control_int_pos_1_tuple;
extern PyObject *const_tuple_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV_int_pos_8352_tuple;
extern PyObject *const_tuple_str_plain_WGL_DEPTH_BITS_EXT_int_pos_8226_tuple;
extern PyObject *const_str_digest_98e23d8e13999d149b91ab1746cbd2c3;
extern PyObject *const_str_plain_PFNWGLISENABLEDGENLOCKI3DPROC;
extern PyObject *const_int_pos_8233;
extern PyObject *const_int_pos_8230;
extern PyObject *const_str_plain_WGL_TRANSPARENT_RED_VALUE_ARB;
extern PyObject *const_str_digest_1e29b8fb5b60340bf9dcc6018b7b2220;
extern PyObject *const_str_plain_wglGetSwapIntervalEXT;
extern PyObject *const_tuple_str_plain_WGL_SWAP_EXCHANGE_EXT_int_pos_8232_tuple;
extern PyObject *const_int_pos_8235;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_BITS_ARB_int_pos_8221_tuple;
extern PyObject *const_str_plain_PFNWGLGETEXTENSIONSSTRINGARBPROC;
extern PyObject *const_int_pos_8331;
extern PyObject *const_tuple_str_plain_wglGetGenlockSourceDelayI3D_tuple;
extern PyObject *const_str_plain_wglGetExtensionsStringEXT;
extern PyObject *const_str_plain_WGL_NUMBER_PIXEL_FORMATS_EXT;
extern PyObject *const_tuple_str_plain_WGL_I3D_gamma_int_pos_1_tuple;
extern PyObject *const_int_pos_8334;
extern PyObject *const_str_plain_PFNWGLGETPBUFFERDCARBPROC;
extern PyObject *const_tuple_str_plain_WGL_NUMBER_OVERLAYS_EXT_int_pos_8200_tuple;
extern PyObject *const_tuple_str_plain_wglSaveBufferRegionARB_tuple;
extern PyObject *const_int_pos_8194;
extern PyObject *const_tuple_str_plain_WGL_PBUFFER_LARGEST_ARB_int_pos_8243_tuple;
extern PyObject *const_tuple_str_plain_WGL_TRANSPARENT_ALPHA_VALUE_ARB_int_pos_8250_tuple;
extern PyObject *const_tuple_str_plain_WGL_NEED_PALETTE_ARB_int_pos_8196_tuple;
extern PyObject *const_str_plain_WGL_NUMBER_OVERLAYS_ARB;
extern PyObject *const_str_plain_PFNWGLWAITFORMSCOMLPROC;
extern PyObject *const_str_plain_PFNWGLSWAPBUFFERSMSCOMLPROC;
extern PyObject *const_str_plain_wglGenlockSampleRateI3D;
extern PyObject *const_int_pos_8205;
extern PyObject *const_str_digest_4339572a741c7cae882de0e8c773b25b;
extern PyObject *const_str_plain_WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D;
extern PyObject *const_tuple_str_plain_wglSetPbufferAttribARB_tuple;
extern PyObject *const_str_plain_wglIsEnabledGenlockI3D;
extern PyObject *const_str_plain_WGL_TEXTURE_CUBE_MAP_ARB;
extern PyObject *const_tuple_str_plain_wglGetPbufferDCEXT_tuple;
extern PyObject *const_str_plain_WGL_IMAGE_BUFFER_MIN_ACCESS_I3D;
extern PyObject *const_tuple_str_plain_WGL_RED_BITS_ARB_int_pos_8213_tuple;
extern PyObject *const_tuple_str_plain_WGL_STENCIL_BITS_EXT_int_pos_8227_tuple;
extern PyObject *const_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV;
extern PyObject *const_tuple_str_plain_WGL_AUX2_ARB_int_pos_8329_tuple;
extern PyObject *const_str_plain_WGL_MAX_PBUFFER_WIDTH_ARB;
extern PyObject *const_tuple_str_plain_WGL_ACCELERATION_EXT_int_pos_8195_tuple;
extern PyObject *const_str_plain_WGL_SWAP_COPY_ARB;
extern PyObject *const_str_digest_ec500bbfcb661568c2982ed87e10d7d2;
extern PyObject *const_str_plain_PFNWGLCHOOSEPIXELFORMATEXTPROC;
extern PyObject *const_str_plain_HDC;
extern PyObject *const_str_plain_WGL_GREEN_SHIFT_ARB;
extern PyObject *const_str_plain_WGL_PBUFFER_LARGEST_EXT;
extern PyObject *const_tuple_str_plain_WGL_TRANSPARENT_ARB_int_pos_8202_tuple;
extern PyObject *const_str_plain_wglCreatePbufferARB;
extern PyObject *const_str_plain_wglReleaseTexImageARB;
extern PyObject *const_str_digest_ec551b33dfa847324c632cf0ef0bb850;
extern PyObject *const_tuple_str_plain_WGL_AUX6_ARB_int_pos_8333_tuple;
extern PyObject *const_int_pos_8198;
extern PyObject *const_int_pos_8197;
extern PyObject *const_int_pos_8196;
extern PyObject *const_int_pos_8195;
extern PyObject *const_str_plain_wglGetPixelFormatAttribfvEXT;
extern PyObject *const_int_pos_8193;
extern PyObject *const_int_pos_8192;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_1D_ARB_int_pos_8313_tuple;
extern PyObject *const_str_digest_ac38933d8c1b72110119b40120acaf7c;
extern PyObject *const_str_plain_WGL_NO_ACCELERATION_EXT;
extern PyObject *const_tuple_str_plain_WGL_SUPPORT_GDI_ARB_int_pos_8207_tuple;
extern PyObject *const_tuple_str_plain_WGL_EXT_swap_control_int_pos_1_tuple;
extern PyObject *const_str_digest_67357c0934da8901ac85bf0174bdca3a;
extern PyObject *const_str_plain_PFNWGLRESTOREBUFFERREGIONARBPROC;
extern PyObject *const_tuple_str_plain_WGL_SHARE_STENCIL_EXT_int_pos_8205_tuple;
extern PyObject *const_tuple_str_plain_WGL_GAMMA_EXCLUDE_DESKTOP_I3D_int_pos_8271_tuple;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_FLOAT_RGB_NV_int_pos_8375_tuple;
extern PyObject *const_tuple_319bcfba869469211ee3db92c32e6cb2_tuple;
extern PyObject *const_str_plain_WGL_MIPMAP_TEXTURE_ARB;
extern PyObject *const_str_plain_PFNWGLGETPBUFFERDCEXTPROC;
extern PyObject *const_str_plain_c_ushort;
extern PyObject *const_str_plain_PFNWGLGENLOCKSAMPLERATEI3DPROC;
extern PyObject *const_str_plain_PFNWGLGETPIXELFORMATATTRIBIVEXTPROC;
extern PyObject *const_list_str_empty_str_empty_str_empty_list;
extern PyObject *const_tuple_str_plain_WGL_NO_ACCELERATION_ARB_int_pos_8229_tuple;
extern PyObject *const_str_plain_PFNWGLGETGAMMATABLEI3DPROC;
extern PyObject *const_int_pos_8374;
extern PyObject *const_tuple_str_plain_WGL_SHARE_ACCUM_ARB_int_pos_8206_tuple;
extern PyObject *const_tuple_str_plain_wglGenlockSourceI3D_tuple;
extern PyObject *const_str_plain_VOID;
extern PyObject *const_int_pos_8289;
extern PyObject *const_str_plain_WGL_DOUBLE_BUFFER_ARB;
extern PyObject *const_str_plain_WGL_EXT_multisample;
extern PyObject *const_int_pos_8333;
extern PyObject *const_str_plain_GLfloat;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_GREEN_BITS_ARB_int_pos_8223_tuple;
extern PyObject *const_str_plain_WGL_SAMPLES_ARB;
extern PyObject *const_str_plain_WGL_OPTIMAL_PBUFFER_HEIGHT_EXT;
extern PyObject *const_tuple_str_plain_WGL_DRAW_TO_BITMAP_EXT_int_pos_8194_tuple;
extern PyObject *const_str_plain_WGL_ARB_multisample;
extern PyObject *const_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D;
extern PyObject *const_str_plain_PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC;
extern PyObject *const_str_plain_WGL_BIND_TO_TEXTURE_DEPTH_NV;
extern PyObject *const_str_plain_WGL_TEXTURE_RGB_ARB;
extern PyObject *const_tuple_str_plain_wglDestroyPbufferEXT_tuple;
extern PyObject *const_str_digest_364869fbdd74d965cc9e885225e2fd3f;
extern PyObject *const_str_plain_WGL_FLOAT_COMPONENTS_NV;
extern PyObject *const_tuple_str_plain_WGL_DEPTH_COMPONENT_NV_int_pos_8359_tuple;
extern PyObject *const_str_plain_WGL_SAMPLE_BUFFERS_3DFX;
extern PyObject *const_str_plain_WGL_SWAP_COPY_EXT;
extern PyObject *const_int_pos_8376;
extern PyObject *const_int_pos_8375;
extern PyObject *const_str_plain_PFNWGLRELEASEPBUFFERDCEXTPROC;
extern PyObject *const_int_pos_8373;
extern PyObject *const_int_pos_8372;
extern PyObject *const_int_pos_8371;
extern PyObject *const_str_plain_c_longlong;
extern PyObject *const_tuple_str_plain_wglMakeContextCurrentEXT_tuple;
extern PyObject *const_str_plain_PFNWGLRELEASETEXIMAGEARBPROC;
extern PyObject *const_tuple_str_plain_WGL_GENLOCK_SOURCE_EDGE_RISING_I3D_int_pos_8267_tuple;
extern PyObject *const_str_plain_PFNWGLMAKECONTEXTCURRENTARBPROC;
extern PyObject *const_int_pos_6;
extern PyObject *const_str_plain_WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D;
extern PyObject *const_tuple_str_plain_WGL_COLOR_BITS_EXT_int_pos_8212_tuple;
extern PyObject *const_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB;
extern PyObject *const_str_plain_WGL_DRAW_TO_BITMAP_ARB;
extern PyObject *const_tuple_str_plain_WGL_TYPE_COLORINDEX_ARB_int_pos_8236_tuple;
extern PyObject *const_tuple_str_plain_WGL_SWAP_METHOD_EXT_int_pos_8199_tuple;
extern PyObject *const_str_plain_wglFreeMemoryNV;
extern PyObject *const_tuple_str_plain_wglReleaseTexImageARB_tuple;
extern PyObject *const_tuple_str_plain_WGL_NEED_SYSTEM_PALETTE_EXT_int_pos_8197_tuple;
extern PyObject *const_int_pos_8;
extern PyObject *const_int_pos_8359;
extern PyObject *const_str_plain_wglMakeContextCurrentARB;
extern PyObject *const_str_digest_d114361d99cea6390880c82cea64b077;
extern PyObject *const_tuple_str_plain_WGL_ARB_buffer_region_int_pos_1_tuple;
extern PyObject *const_str_plain_OpenGL;
extern PyObject *const_int_pos_8214;
extern PyObject *const_str_plain_WGL_TRANSPARENT_VALUE_EXT;
extern PyObject *const_str_plain_PFNWGLDELETEBUFFERREGIONARBPROC;
extern PyObject *const_int_pos_4;
extern PyObject *const_str_digest_de4cbd2d74eda817beda27f6c601015d;
extern PyObject *const_str_plain_wglLoadDisplayColorTableEXT;
extern PyObject *const_str_plain_BOOL;
extern PyObject *const_str_plain_wglGetCurrentReadDCEXT;
extern PyObject *const_tuple_str_plain_wglCreateBufferRegionARB_tuple;
extern PyObject *const_str_plain_GLsizei;
extern PyObject *const_str_plain_c_int;
extern PyObject *const_tuple_str_plain_wglGetPbufferDCARB_tuple;
extern PyObject *const_str_plain_WGL_SHARE_ACCUM_ARB;
extern PyObject *const_int_pos_8273;
extern PyObject *const_str_plain_WGL_NEED_PALETTE_ARB;
extern PyObject *const_tuple_str_digest_0ea0c287cb926398b38e259bc92907fa_int_pos_8371_tuple;
extern PyObject *const_int_pos_8247;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_RGBA_ARB_int_pos_8310_tuple;
extern PyObject *const_str_plain_WGL_SWAP_LAYER_BUFFERS_ARB;
extern PyObject *const_str_plain_wglSaveBufferRegionARB;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB_int_pos_8317_tuple;
extern PyObject *const_int_pos_1;
extern PyObject *const_tuple_str_plain_WGL_DEPTH_BITS_ARB_int_pos_8226_tuple;
extern PyObject *const_str_plain_WGL_I3D_gamma;
extern PyObject *const_tuple_str_plain_wglAssociateImageBufferEventsI3D_tuple;
extern PyObject *const_str_plain_WGL_PBUFFER_WIDTH_ARB;
extern PyObject *const_str_plain_WGL_NUMBER_UNDERLAYS_ARB;
extern PyObject *const_str_plain_WGL_TYPE_RGBA_ARB;
extern PyObject *const_str_plain_c_float;
extern PyObject *const_list_str_empty_str_plain_None_list;
extern PyObject *const_str_plain_wglSwapIntervalEXT;
extern PyObject *const_str_plain_WGL_TEXTURE_1D_ARB;
extern PyObject *const_list_ff8e1460aff9a2a091ff1bd4618c4db3_list;
extern PyObject *const_str_digest_3f5c079e1cfa650332befe7263e74a49;
extern PyObject *const_tuple_str_plain_WGL_I3D_digital_video_control_int_pos_1_tuple;
extern PyObject *const_str_plain_wglGenlockSourceEdgeI3D;
extern PyObject *const_tuple_str_plain_wglQueryPbufferEXT_tuple;
extern PyObject *const_str_digest_7e7da976e66ca0e95a65ad89bba5170d;
extern PyObject *const_tuple_str_plain_WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D_int_pos_8268_tuple;
extern PyObject *const_int_pos_8307;
extern PyObject *const_tuple_str_plain_WGL_SWAP_UNDEFINED_EXT_int_pos_8234_tuple;
extern PyObject *const_tuple_str_plain_wglSetDigitalVideoParametersI3D_tuple;
extern PyObject *const_int_pos_8225;
extern PyObject *const_int_pos_8308;
extern PyObject *const_int_pos_8309;
extern PyObject *const_int_pos_8224;
extern PyObject *const_str_plain_WGL_STENCIL_BITS_ARB;
extern PyObject *const_tuple_str_plain_WGL_AUX7_ARB_int_pos_8334_tuple;
extern PyObject *const_tuple_str_plain_WGL_SAMPLE_BUFFERS_ARB_int_pos_8257_tuple;
extern PyObject *const_str_plain_WGL_SHARE_DEPTH_ARB;
extern PyObject *const_str_plain_wglGetGenlockSourceI3D;
extern PyObject *const_str_plain_wglGetExtensionsStringARB;
extern PyObject *const_int_pos_8319;
extern PyObject *const_str_plain_c_char_p;
extern PyObject *const_str_plain_INT32;
extern PyObject *const_tuple_str_plain_WGL_BLUE_SHIFT_ARB_int_pos_8218_tuple;
extern PyObject *const_int_pos_8249;
extern PyObject *const_tuple_str_plain_WGL_FRONT_LEFT_ARB_int_pos_8323_tuple;
extern PyObject *const_tuple_str_plain_WGL_ALPHA_SHIFT_EXT_int_pos_8220_tuple;
extern PyObject *const_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB;
extern PyObject *const_int_pos_8210;
extern PyObject *const_str_plain_WGL_FULL_ACCELERATION_EXT;
extern PyObject *const_str_digest_c38b5c4bc9a259186dd9eb36b45293e0;
extern PyObject *const_str_plain_WGL_AUX5_ARB;
extern PyObject *const_str_plain_WGL_ARB_make_current_read;
extern PyObject *const_str_plain_wglDestroyPbufferARB;
extern PyObject *const_str_plain_PFNWGLMAKECONTEXTCURRENTEXTPROC;
extern PyObject *const_str_plain_wglCreateBufferRegionARB;
extern PyObject *const_tuple_str_plain_WGL_OPTIMAL_PBUFFER_HEIGHT_EXT_int_pos_8242_tuple;
extern PyObject *const_tuple_str_plain_WGL_EXT_multisample_int_pos_1_tuple;
extern PyObject *const_tuple_str_plain_wglGetGenlockSourceI3D_tuple;
extern PyObject *const_str_plain_PFNWGLGETCURRENTREADDCEXTPROC;
extern PyObject *const_tuple_str_plain_WGL_DEPTH_BUFFER_BIT_ARB_int_pos_4_tuple;
extern PyObject *const_int_pos_8211;
extern PyObject *const_str_plain_WGL_SHARE_STENCIL_EXT;
extern PyObject *const_str_plain_WGL_SWAP_UNDEFINED_EXT;
extern PyObject *const_str_digest_7f6c875a77fad266116bdda1c3cd8a52;
extern PyObject *const_str_digest_3d02eaa31fc0b35def39b0021d5de279;
extern PyObject *const_str_plain_PFNWGLSAVEBUFFERREGIONARBPROC;
extern PyObject *const_str_digest_80c000664d191c25c3e4e1e5f9ac6c28;
extern PyObject *const_list_str_plain_None_str_empty_str_empty_list;
extern PyObject *const_int_pos_8250;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_FLOAT_RGBA_NV_int_pos_8376_tuple;
extern PyObject *const_tuple_str_plain_WGL_MAX_PBUFFER_PIXELS_ARB_int_pos_8238_tuple;
extern PyObject *const_str_plain_PFNWGLGETGENLOCKSOURCEI3DPROC;
extern PyObject *const_str_plain_wglGetPbufferDCARB;
extern PyObject *const_str_plain_PFNWGLLOADDISPLAYCOLORTABLEEXTPROC;
extern PyObject *const_tuple_str_plain_ERROR_INVALID_PIXEL_TYPE_EXT_int_pos_8259_tuple;
extern PyObject *const_str_digest_096a16069c8cc6eab5f2a120fbf89299;
extern PyObject *const_tuple_str_plain_wglEnableGenlockI3D_tuple;
extern PyObject *const_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV;
extern PyObject *const_tuple_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D_int_pos_8261_tuple;
extern PyObject *const_tuple_str_plain_wglGetPixelFormatAttribivARB_tuple;
extern PyObject *const_tuple_str_plain_wglMakeContextCurrentARB_tuple;
extern PyObject *const_str_plain_GLushort;
extern PyObject *const_str_plain_wglSwapBuffersMscOML;
extern PyObject *const_tuple_str_plain_WGL_ARB_pixel_format_int_pos_1_tuple;
extern PyObject *const_int_pos_8356;
extern PyObject *const_str_plain___all__;
extern PyObject *const_int_0;
extern PyObject *const_str_plain_wglChoosePixelFormatEXT;
extern PyObject *const_str_plain_WGL_COLOR_BITS_ARB;
extern PyObject *const_str_plain_WGL_NO_TEXTURE_ARB;
extern PyObject *const_str_plain_WGL_DEPTH_BITS_ARB;
extern PyObject *const_str_digest_30465bcaf64d1d4b0620be33eab3de61;
extern PyObject *const_int_pos_8318;
extern PyObject *const_str_plain_wglDestroyImageBufferI3D;
extern PyObject *const_str_plain_wglBeginFrameTrackingI3D;
extern PyObject *const_str_plain_WGL_EXT_extensions_string;
extern PyObject *const_tuple_str_plain_WGL_NUMBER_PIXEL_FORMATS_ARB_int_pos_8192_tuple;
extern PyObject *const_str_plain_wglEnableGenlockI3D;
extern PyObject *const_str_plain_WGL_STENCIL_BITS_EXT;
extern PyObject *const_str_digest_738947e2943ba1b41f0001f2126cad64;
extern PyObject *const_tuple_str_plain_wglGetPixelFormatAttribfvARB_tuple;
extern PyObject *const_str_plain_DWORD;
extern PyObject *const_str_plain_WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D;
extern PyObject *const_str_plain_WGL_SUPPORT_GDI_EXT;
extern PyObject *const_str_plain_WGL_AUX2_ARB;
extern PyObject *const_tuple_str_plain_wglDestroyImageBufferI3D_tuple;
extern PyObject *const_str_plain_WGL_STEREO_ARB;
extern PyObject *const_str_digest_20f7b7d9baf1d09693842dbcf2e735d8;
extern PyObject *const_str_plain_PFNWGLCREATEPBUFFERARBPROC;
extern PyObject *const_str_plain_constant;
extern PyObject *const_int_pos_8272;
extern PyObject *const_tuple_str_plain_WGL_MAX_PBUFFER_PIXELS_EXT_int_pos_8238_tuple;
extern PyObject *const_str_digest_78b8bb21b539a15d2b3ea1194255bf7d;
extern PyObject *const_tuple_str_plain_WGL_BACK_COLOR_BUFFER_BIT_ARB_int_pos_2_tuple;
extern PyObject *const_list_3044af3252a87779e3d9d7fbce1e073b_list;
extern PyObject *const_int_pos_8270;
extern PyObject *const_tuple_str_plain_WGL_AUX8_ARB_int_pos_8335_tuple;
extern PyObject *const_tuple_str_plain_WGL_STENCIL_BUFFER_BIT_ARB_int_pos_8_tuple;
extern PyObject *const_str_digest_52ef08e094b17fa3f03e1d8ae595b01d;
extern PyObject *const_str_plain_PFNWGLDESTROYPBUFFERARBPROC;
extern PyObject *const_str_plain_USHORT;
extern PyObject *const_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV;
extern PyObject *const_tuple_str_plain_wglChoosePixelFormatARB_tuple;
extern PyObject *const_str_plain_wglAssociateImageBufferEventsI3D;
extern PyObject *const_str_plain_wglWaitForSbcOML;
extern PyObject *const_str_plain_WGL_COLOR_BITS_EXT;
extern PyObject *const_int_pos_8236;
extern PyObject *const_str_plain_wglGetPixelFormatAttribfvARB;
extern PyObject *const_tuple_str_plain_WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D_int_pos_8265_tuple;
extern PyObject *const_str_plain_WGL_TEXTURE_2D_ARB;
extern PyObject *const_str_plain_WGL_MAX_PBUFFER_WIDTH_EXT;
extern PyObject *const_str_plain_WGL_I3D_genlock;
extern PyObject *const_tuple_str_plain_WGL_EXT_pixel_format_int_pos_1_tuple;
extern PyObject *const_tuple_str_plain_WGL_EXT_depth_float_int_pos_1_tuple;
extern PyObject *const_str_plain_WGL_BIND_TO_TEXTURE_RGB_ARB;
extern PyObject *const_tuple_str_plain_WGL_NUMBER_UNDERLAYS_ARB_int_pos_8201_tuple;
extern PyObject *const_str_plain_PFNWGLGETPIXELFORMATATTRIBFVEXTPROC;
extern PyObject *const_tuple_str_plain_WGL_SWAP_COPY_EXT_int_pos_8233_tuple;
extern PyObject *const_tuple_str_plain_WGL_STEREO_EXT_int_pos_8210_tuple;
extern PyObject *const_int_pos_8220;
extern PyObject *const_str_plain_wglReleaseImageBufferEventsI3D;
extern PyObject *const_int_pos_8222;
extern PyObject *const_str_plain_WGL_NV_vertex_array_range;
extern PyObject *const_list_fd90a4c5cb8370fe56e71dd0a27664ad_list;
extern PyObject *const_int_pos_8227;
extern PyObject *const_str_plain_wglGetPbufferDCEXT;
extern PyObject *const_str_plain_WGL_DRAW_TO_BITMAP_EXT;
extern PyObject *const_int_pos_8228;
extern PyObject *const_str_digest_dc3fd7ed3b18a23122072bd198c7c93b;
extern PyObject *const_tuple_str_plain_wglEnableFrameLockI3D_tuple;
extern PyObject *const_str_plain_WGL_BACK_RIGHT_ARB;
extern PyObject *const_str_plain_wglQueryFrameTrackingI3D;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_FLOAT_R_NV_int_pos_8373_tuple;
extern PyObject *const_list_str_empty_list;
extern PyObject *const_str_plain_WGL_SUPPORT_GDI_ARB;
extern PyObject *const_str_plain_WGL_ACCUM_BITS_EXT;
extern PyObject *const_tuple_str_plain_WGL_GENERIC_ACCELERATION_ARB_int_pos_8230_tuple;
extern PyObject *const_str_plain_wglGetDigitalVideoParametersI3D;
extern PyObject *const_int_pos_8201;
extern PyObject *const_str_plain_WGL_MAX_PBUFFER_HEIGHT_ARB;
extern PyObject *const_tuple_str_plain_WGL_BLUE_BITS_ARB_int_pos_8217_tuple;
extern PyObject *const_str_plain_resultType;
extern PyObject *const_list_str_plain_None_str_empty_str_empty_str_empty_list;
extern PyObject *const_int_pos_8313;
extern PyObject *const_tuple_str_plain_wglCreatePbufferEXT_tuple;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_TARGET_ARB_int_pos_8307_tuple;
extern PyObject *const_str_plain_WGL_AUX_BUFFERS_ARB;
extern PyObject *const_str_plain_WGL_EXT_pixel_format;
extern PyObject *const_list_str_plain_None_str_plain_None_list;
extern PyObject *const_tuple_str_plain_WGL_AUX5_ARB_int_pos_8332_tuple;
extern PyObject *const_str_plain_WGL_SWAP_LAYER_BUFFERS_EXT;
extern PyObject *const_str_plain_WGL_ACCELERATION_EXT;
extern PyObject *const_tuple_str_plain_wglChoosePixelFormatEXT_tuple;
extern PyObject *const_tuple_str_plain_ERROR_INVALID_PIXEL_TYPE_ARB_int_pos_8259_tuple;
extern PyObject *const_str_plain_wglSetGammaTableI3D;
extern PyObject *const_tuple_str_plain_wglWaitForMscOML_tuple;
extern PyObject *const_tuple_str_plain_WGL_SUPPORT_OPENGL_EXT_int_pos_8208_tuple;
extern PyObject *const_str_digest_8cbdd1ae4c928f811777d058dc2f1aa4;
extern PyObject *const_int_pos_8258;
extern PyObject *const_tuple_str_plain_WGL_EXT_extensions_string_int_pos_1_tuple;
extern PyObject *const_tuple_str_plain_WGL_AUX_BUFFERS_ARB_int_pos_8228_tuple;
extern PyObject *const_str_plain_wglMakeContextCurrentEXT;
extern PyObject *const_tuple_str_plain_WGL_TRANSPARENT_INDEX_VALUE_ARB_int_pos_8251_tuple;
extern PyObject *const_int_pos_8370;
extern PyObject *const_str_digest_eacb4c9338febb98cc581bf4d92ada57;
extern PyObject *const_tuple_str_plain_WGL_ARB_pixel_format_float_int_pos_1_tuple;
extern PyObject *const_str_plain_WGL_DEPTH_BUFFER_BIT_ARB;
extern PyObject *const_tuple_str_plain_wglDisableGenlockI3D_tuple;
extern PyObject *const_tuple_str_plain_WGL_BIND_TO_TEXTURE_DEPTH_NV_int_pos_8355_tuple;
extern PyObject *const_str_digest_2380c6d01ac5844ca6988b0ad90cfda4;
extern PyObject *const_tuple_str_plain_wglGetExtensionsStringEXT_tuple;
extern PyObject *const_str_plain_PFNWGLGENLOCKSOURCEI3DPROC;
extern PyObject *const_tuple_str_plain_WGL_SUPPORT_OPENGL_ARB_int_pos_8208_tuple;
extern PyObject *const_tuple_str_digest_30465bcaf64d1d4b0620be33eab3de61_int_pos_8370_tuple;
extern PyObject *const_str_plain_wglBindDisplayColorTableEXT;
extern PyObject *const_tuple_str_plain_WGL_OPTIMAL_PBUFFER_WIDTH_EXT_int_pos_8241_tuple;
extern PyObject *const_str_plain_WGL_TEXTURE_RGBA_ARB;
extern PyObject *const_tuple_str_plain_WGL_RED_BITS_EXT_int_pos_8213_tuple;
extern PyObject *const_tuple_str_plain_wglSwapIntervalEXT_tuple;
extern PyObject *const_str_plain_ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB;
extern PyObject *const_str_plain_wglGetGammaTableParametersI3D;
extern PyObject *const_str_plain_PFNWGLGETGENLOCKSAMPLERATEI3DPROC;
extern PyObject *const_str_plain_wglCreateDisplayColorTableEXT;
extern PyObject *const_tuple_str_plain_WGL_ATI_pixel_format_float_int_pos_1_tuple;
extern PyObject *const_tuple_str_plain_WGL_ARB_make_current_read_int_pos_1_tuple;
extern PyObject *const_str_digest_0ea0c287cb926398b38e259bc92907fa;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_FORMAT_ARB_int_pos_8306_tuple;
extern PyObject *const_str_plain_PFNWGLENABLEFRAMELOCKI3DPROC;
extern PyObject *const_tuple_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D_int_pos_8263_tuple;
extern PyObject *const_tuple_str_plain_WGL_PBUFFER_LARGEST_EXT_int_pos_8243_tuple;
extern PyObject *const_str_plain_WGL_ACCUM_ALPHA_BITS_ARB;
extern PyObject *const_str_digest_6f79139e4033338ada508ab2955f4bda;
extern PyObject *const_int_pos_8267;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_ARB_int_pos_8312_tuple;
extern PyObject *const_str_plain_WGL_FRONT_COLOR_BUFFER_BIT_ARB;
extern PyObject *const_tuple_str_plain_WGL_MAX_PBUFFER_HEIGHT_EXT_int_pos_8240_tuple;
extern PyObject *const_str_plain_WGL_BACK_LEFT_ARB;
extern PyObject *const_tuple_str_plain_wglGetPixelFormatAttribivEXT_tuple;
extern PyObject *const_str_digest_1f5e2488f0453511dc4ee04440decf00;
extern PyObject *const_tuple_str_plain_WGL_SUPPORT_GDI_EXT_int_pos_8207_tuple;
extern PyObject *const_str_plain_WGL_BACK_COLOR_BUFFER_BIT_ARB;
extern PyObject *const_str_digest_57a4dac7a81a37d797657617390058fb;
extern PyObject *const_str_plain_WGL_DEPTH_TEXTURE_FORMAT_NV;
extern PyObject *const_tuple_str_plain_WGL_SAMPLE_BUFFERS_3DFX_int_pos_8288_tuple;
extern PyObject *const_str_plain_PFNWGLSWAPLAYERBUFFERSMSCOMLPROC;
extern PyObject *const_tuple_str_plain_WGL_SWAP_METHOD_ARB_int_pos_8199_tuple;
extern PyObject *const_tuple_str_plain_WGL_BLUE_BITS_EXT_int_pos_8217_tuple;
extern PyObject *const_int_pos_8276;
extern PyObject *const_tuple_str_plain_WGL_SWAP_LAYER_BUFFERS_ARB_int_pos_8198_tuple;
extern PyObject *const_str_digest_54b5330bc1479df8d7d826db27cfe8cb;
extern PyObject *const_tuple_str_plain_wglAllocateMemoryNV_tuple;
extern PyObject *const_str_plain_wglDeleteBufferRegionARB;
extern PyObject *const_int_pos_8316;
extern PyObject *const_str_plain_WGL_PIXEL_TYPE_ARB;
extern PyObject *const_str_digest_3b95da83452663614ad2fe45a53d28f4;
extern PyObject *const_str_plain_PFNWGLSETGAMMATABLEPARAMETERSI3DPROC;
extern PyObject *const_str_plain_PFNWGLQUERYFRAMELOCKMASTERI3DPROC;
extern PyObject *const_str_plain_WGL_RED_SHIFT_ARB;
extern PyObject *const_tuple_str_plain_WGL_DOUBLE_BUFFER_ARB_int_pos_8209_tuple;
extern PyObject *const_str_plain_WGL_NV_float_buffer;
extern PyObject *const_str_plain_PFNWGLGETCURRENTREADDCARBPROC;
extern PyObject *const_tuple_str_plain_wglLoadDisplayColorTableEXT_tuple;
extern PyObject *const_tuple_str_plain_WGL_TRANSPARENT_BLUE_VALUE_ARB_int_pos_8249_tuple;
extern PyObject *const_str_plain_WGL_SUPPORT_OPENGL_ARB;
extern PyObject *const_tuple_3cc1ca03b3e49c077d8c227b09bee168_tuple;
extern PyObject *const_str_plain_WGL_FULL_ACCELERATION_ARB;
extern PyObject *const_str_plain_WGL_AUX_BUFFERS_EXT;
extern PyObject *const_str_plain_WGL_ARB_pbuffer;
extern PyObject *const_tuple_str_plain_wglCreateDisplayColorTableEXT_tuple;
extern PyObject *const_str_plain_WGL_I3D_swap_frame_usage;
extern PyObject *const_str_digest_c765e6673d0ed12472ad1338b822fdcc;
extern PyObject *const_tuple_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D_int_pos_8262_tuple;
extern PyObject *const_tuple_str_plain_WGL_GAMMA_TABLE_SIZE_I3D_int_pos_8270_tuple;
extern PyObject *const_str_plain_GLboolean;
extern PyObject *const_tuple_str_plain_wglSwapLayerBuffersMscOML_tuple;
extern PyObject *const_str_digest_4d9dd2c7f0d4ef419d757bc9f8f1a8fd;
extern PyObject *const_str_plain_WGL_ACCUM_RED_BITS_EXT;
extern PyObject *const_tuple_str_plain_WGL_AUX1_ARB_int_pos_8328_tuple;
extern PyObject *const_str_plain_WGL_FRONT_LEFT_ARB;
extern PyObject *const_str_plain_WGL_BIND_TO_TEXTURE_RGBA_ARB;
extern PyObject *const_str_plain_PFNWGLCREATEBUFFERREGIONARBPROC;
extern PyObject *const_str_plain_wglDisableFrameLockI3D;
extern PyObject *const_int_pos_8268;
extern PyObject *const_tuple_str_plain_WGL_TRANSPARENT_VALUE_EXT_int_pos_8203_tuple;
extern PyObject *const_str_plain_PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC;
extern PyObject *const_tuple_str_plain_wglGetMscRateOML_tuple;
extern PyObject *const_str_plain_WGL_RED_BITS_EXT;
extern PyObject *const_int_pos_8266;
extern PyObject *const_int_pos_8261;
extern PyObject *const_str_plain_WGL_EXT_depth_float;
extern PyObject *const_int_pos_8263;
extern PyObject *const_tuple_str_plain_wglGenlockSampleRateI3D_tuple;
extern PyObject *const_str_digest_a3e7125d39ba6bab41ed154fac3fd39b;
extern PyObject *const_str_plain_WGL_SWAP_METHOD_ARB;
extern PyObject *const_str_plain_WGL_TRANSPARENT_ARB;
extern PyObject *const_list_str_plain_None_str_plain_None_str_plain_None_str_plain_None_list;
extern PyObject *const_int_pos_8304;
extern PyObject *const_str_plain_WGL_ACCUM_ALPHA_BITS_EXT;
extern PyObject *const_str_plain_PFNWGLGETPIXELFORMATATTRIBFVARBPROC;
extern PyObject *const_int_pos_8305;
extern PyObject *const_tuple_str_plain_WGL_PBUFFER_HEIGHT_ARB_int_pos_8245_tuple;
extern PyObject *const_list_str_plain_None_str_empty_str_plain_None_list;
extern PyObject *const_int_pos_8221;
extern PyObject *const_tuple_str_plain_WGL_RED_SHIFT_EXT_int_pos_8214_tuple;
extern PyObject *const_str_plain_WGL_BLUE_BITS_ARB;
extern PyObject *const_tuple_str_plain_wglSwapBuffersMscOML_tuple;
extern PyObject *const_tuple_str_plain_WGL_3DFX_multisample_int_pos_1_tuple;
extern PyObject *const_int_pos_8311;
extern PyObject *const_int_pos_8310;
extern PyObject *const_str_plain_WGL_ACCUM_GREEN_BITS_ARB;
extern PyObject *const_int_pos_8312;
extern PyObject *const_int_pos_8315;
extern PyObject *const_tuple_str_plain_WGL_NUMBER_OVERLAYS_ARB_int_pos_8200_tuple;
extern PyObject *const_int_pos_8317;
extern PyObject *const_tuple_str_plain_wglIsEnabledGenlockI3D_tuple;
extern PyObject *const_tuple_str_plain_WGL_WGLEXT_VERSION_int_pos_6_tuple;
extern PyObject *const_tuple_str_plain_WGL_I3D_image_buffer_int_pos_1_tuple;
extern PyObject *const_tuple_str_plain_WGL_ARB_extensions_string_int_pos_1_tuple;
extern PyObject *const_tuple_str_plain_WGL_DRAW_TO_BITMAP_ARB_int_pos_8194_tuple;
extern PyObject *const_str_plain_WGL_PBUFFER_LARGEST_ARB;
extern PyObject *const_str_digest_0b022b670f275c3db7cb43e5478c173b;
extern PyObject *const_int_pos_8335;
extern PyObject *const_int_pos_8251;
extern PyObject *const_str_plain_WGL_OML_sync_control;
extern PyObject *const_tuple_str_plain_WGL_TYPE_RGBA_EXT_int_pos_8235_tuple;
extern PyObject *const_tuple_str_plain_wglGetGenlockSampleRateI3D_tuple;
extern PyObject *const_tuple_str_plain_WGL_ARB_render_texture_int_pos_1_tuple;
extern PyObject *const_str_plain_WGL_TEXTURE_FLOAT_RG_NV;
extern PyObject *const_str_digest_93c3b4ad7f5f415025ca921a3868e336;
extern PyObject *const_tuple_str_plain_WGL_ALPHA_BITS_EXT_int_pos_8219_tuple;
extern PyObject *const_str_plain_WGL_PBUFFER_WIDTH_EXT;
extern PyObject *const_tuple_str_plain_WGL_AUX9_ARB_int_pos_8336_tuple;
extern PyObject *const_int_pos_8223;
extern PyObject *const_tuple_str_plain_wglReleasePbufferDCARB_tuple;
extern PyObject *const_str_digest_9a7b5d54fa234dd0a72afb574ed98839;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_2D_ARB_int_pos_8314_tuple;
extern PyObject *const_str_plain_PFNWGLQUERYPBUFFERARBPROC;
extern PyObject *const_tuple_str_plain_wglFreeMemoryNV_tuple;
extern PyObject *const_str_plain_PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC;
extern PyObject *const_int_pos_8232;
extern PyObject *const_tuple_str_plain_WGL_FULL_ACCELERATION_EXT_int_pos_8231_tuple;
extern PyObject *const_str_plain_PFNWGLGENLOCKSOURCEDELAYI3DPROC;
extern PyObject *const_str_digest_10745aeb8a92445a48f6895be439976f;
extern PyObject *const_tuple_str_plain_WGL_NEED_PALETTE_EXT_int_pos_8196_tuple;
extern PyObject *const_int_pos_8257;
extern PyObject *const_tuple_str_plain_WGL_ACCELERATION_ARB_int_pos_8195_tuple;
extern PyObject *const_tuple_str_plain_WGL_NEED_SYSTEM_PALETTE_ARB_int_pos_8197_tuple;
extern PyObject *const_str_digest_67702bb336b9da66d71c400c912f5922;
extern PyObject *const_tuple_str_plain_WGL_RED_SHIFT_ARB_int_pos_8214_tuple;
extern PyObject *const_str_plain_WGL_PBUFFER_HEIGHT_ARB;
extern PyObject *const_tuple_str_plain_WGL_ACCUM_BLUE_BITS_EXT_int_pos_8224_tuple;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB_int_pos_8320_tuple;
extern PyObject *const_tuple_str_plain_WGL_DEPTH_FLOAT_EXT_int_pos_8256_tuple;
extern PyObject *const_str_plain___doc__;
extern PyObject *const_str_plain_WGL_3DFX_multisample;
extern PyObject *const_str_plain_WGL_EXT_pbuffer;
extern PyObject *const_str_digest_422c1f843d5161b96b6709d931880f5c;
extern PyObject *const_tuple_str_plain_WGL_AUX3_ARB_int_pos_8330_tuple;
extern PyObject *const_int_pos_8237;
extern PyObject *const_str_plain_WGL_SWAP_METHOD_EXT;
extern PyObject *const_tuple_str_plain_wglCreateImageBufferI3D_tuple;
extern PyObject *const_str_digest_a9691bd88ff051a659ae20c74f9ded69;
extern PyObject *const_str_plain_WGL_PBUFFER_LOST_ARB;
extern PyObject *const_tuple_str_plain_wglQueryGenlockMaxSourceDelayI3D_tuple;
extern PyObject *const_tuple_str_plain_wglQueryFrameTrackingI3D_tuple;
extern PyObject *const_str_plain_WGL_DRAW_TO_WINDOW_EXT;
extern PyObject *const_str_plain_wglDestroyPbufferEXT;
extern PyObject *const_str_plain_WGL_GENLOCK_SOURCE_EDGE_RISING_I3D;
extern PyObject *const_int_pos_8332;
extern PyObject *const_str_plain_wglWaitForMscOML;
extern PyObject *const_int_pos_8238;
extern PyObject *const_str_plain_WGL_BLUE_BITS_EXT;
extern PyObject *const_str_plain_wglSetGammaTableParametersI3D;
extern PyObject *const_str_plain_wglGetCurrentReadDCARB;
extern PyObject *const_int_pos_8239;
extern PyObject *const_tuple_str_plain_WGL_MAX_PBUFFER_WIDTH_ARB_int_pos_8239_tuple;
extern PyObject *const_str_plain_wglSetDigitalVideoParametersI3D;
extern PyObject *const_str_plain_wglQueryPbufferARB;
extern PyObject *const_str_plain_PFNWGLWAITFORSBCOMLPROC;
extern PyObject *const_tuple_str_plain_WGL_PBUFFER_WIDTH_ARB_int_pos_8244_tuple;
extern PyObject *const_tuple_str_plain_WGL_BLUE_SHIFT_EXT_int_pos_8218_tuple;
extern PyObject *const_tuple_str_plain_WGL_DEPTH_TEXTURE_FORMAT_NV_int_pos_8357_tuple;
extern PyObject *const_tuple_str_plain_WGL_SWAP_EXCHANGE_ARB_int_pos_8232_tuple;
extern PyObject *const_str_plain_WGL_FRONT_RIGHT_ARB;
extern PyObject *const_str_plain_WGL_GENERIC_ACCELERATION_EXT;
extern PyObject *const_str_plain_WGL_I3D_image_buffer;
extern PyObject *const_tuple_str_plain_WGL_TYPE_RGBA_FLOAT_ATI_int_pos_8608_tuple;
extern PyObject *const_tuple_str_plain_WGL_SAMPLES_3DFX_int_pos_8289_tuple;
extern PyObject *const_tuple_none_tuple;
extern PyObject *const_str_digest_6b6ebd8fd99913bd76f45252271f4694;
extern PyObject *const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB_int_pos_8321_tuple;
static PyObject *module_filename_obj;

static bool constants_created = false;

static void createModuleConstants( void )
{
    const_str_digest_25a1e35ae2bbba7e6fcf795ae9c7fe60 = UNSTREAM_STRING( &constant_bin[ 40059 ], 55, 0 );
    const_str_plain__WGL_ARB = UNSTREAM_STRING( &constant_bin[ 40103 ], 8, 1 );
    const_list_7e8083d75b3017217439ee4916f4e482_list = PyMarshal_ReadObjectFromString( (char *)&constant_bin[ 40114 ], 10920 );

    constants_created = true;
}

#ifndef __NUITKA_NO_ASSERT__
void checkModuleConstants_OpenGL$raw$_WGL_ARB( void )
{
    // The module may not have been used at all.
    if (constants_created == false) return;


}
#endif

// The module code objects.
static PyCodeObject *codeobj_1076240570b1a61adfabceddbf35020f;

static void createModuleCodeObjects(void)
{
    module_filename_obj = const_str_digest_25a1e35ae2bbba7e6fcf795ae9c7fe60;
    codeobj_1076240570b1a61adfabceddbf35020f = MAKE_CODEOBJ( module_filename_obj, const_str_plain__WGL_ARB, 1, const_tuple_empty, 0, CO_NOFREE );
}

// The module function declarations.


// The module function definitions.



#if PYTHON_VERSION >= 300
static struct PyModuleDef mdef_OpenGL$raw$_WGL_ARB =
{
    PyModuleDef_HEAD_INIT,
    "OpenGL.raw._WGL_ARB",   /* m_name */
    NULL,                /* m_doc */
    -1,                  /* m_size */
    NULL,                /* m_methods */
    NULL,                /* m_reload */
    NULL,                /* m_traverse */
    NULL,                /* m_clear */
    NULL,                /* m_free */
  };
#endif

#if PYTHON_VERSION >= 300
extern PyObject *metapath_based_loader;
#endif

// The exported interface to CPython. On import of the module, this function
// gets called. It has to have an exact function name, in cases it's a shared
// library export. This is hidden behind the MOD_INIT_DECL.

MOD_INIT_DECL( OpenGL$raw$_WGL_ARB )
{
#if defined(_NUITKA_EXE) || PYTHON_VERSION >= 300
    static bool _init_done = false;

    // Modules might be imported repeatedly, which is to be ignored.
    if ( _init_done )
    {
        return MOD_RETURN_VALUE( module_OpenGL$raw$_WGL_ARB );
    }
    else
    {
        _init_done = true;
    }
#endif

#ifdef _NUITKA_MODULE
    // In case of a stand alone extension module, need to call initialization
    // the init here because that's the first and only time we are going to get
    // called here.

    // Initialize the constant values used.
    _initBuiltinModule();
    createGlobalConstants();

    // Initialize the compiled types of Nuitka.
    PyType_Ready( &Nuitka_Generator_Type );
    PyType_Ready( &Nuitka_Function_Type );
    PyType_Ready( &Nuitka_Method_Type );
    PyType_Ready( &Nuitka_Frame_Type );
#if PYTHON_VERSION >= 350
    PyType_Ready( &Nuitka_Coroutine_Type );
    PyType_Ready( &Nuitka_CoroutineWrapper_Type );
#endif

#if PYTHON_VERSION < 300
    _initSlotCompare();
#endif
#if PYTHON_VERSION >= 270
    _initSlotIternext();
#endif

    patchBuiltinModule();
    patchTypeComparison();

    // Enable meta path based loader if not already done.
    setupMetaPathBasedLoader();

#if PYTHON_VERSION >= 300
    patchInspectModule();
#endif

#endif

    createModuleConstants();
    createModuleCodeObjects();

    // puts( "in initOpenGL$raw$_WGL_ARB" );

    // Create the module object first. There are no methods initially, all are
    // added dynamically in actual code only.  Also no "__doc__" is initially
    // set at this time, as it could not contain NUL characters this way, they
    // are instead set in early module code.  No "self" for modules, we have no
    // use for it.
#if PYTHON_VERSION < 300
    module_OpenGL$raw$_WGL_ARB = Py_InitModule4(
        "OpenGL.raw._WGL_ARB",       // Module Name
        NULL,                    // No methods initially, all are added
                                 // dynamically in actual module code only.
        NULL,                    // No __doc__ is initially set, as it could
                                 // not contain NUL this way, added early in
                                 // actual code.
        NULL,                    // No self for modules, we don't use it.
        PYTHON_API_VERSION
    );
#else
    module_OpenGL$raw$_WGL_ARB = PyModule_Create( &mdef_OpenGL$raw$_WGL_ARB );
#endif

    moduledict_OpenGL$raw$_WGL_ARB = (PyDictObject *)((PyModuleObject *)module_OpenGL$raw$_WGL_ARB)->md_dict;

    CHECK_OBJECT( module_OpenGL$raw$_WGL_ARB );

// Seems to work for Python2.7 out of the box, but for Python3, the module
// doesn't automatically enter "sys.modules", so do it manually.
#if PYTHON_VERSION >= 300
    {
        int r = PyObject_SetItem( PySys_GetObject( (char *)"modules" ), const_str_digest_9a7b5d54fa234dd0a72afb574ed98839, module_OpenGL$raw$_WGL_ARB );

        assert( r != -1 );
    }
#endif

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    PyObject *module_dict = PyModule_GetDict( module_OpenGL$raw$_WGL_ARB );

    if ( PyDict_GetItem( module_dict, const_str_plain___builtins__ ) == NULL )
    {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then.
#if !defined(_NUITKA_EXE) || !0
        value = PyModule_GetDict( value );
#endif

#ifndef __NUITKA_NO_ASSERT__
        int res =
#endif
            PyDict_SetItem( module_dict, const_str_plain___builtins__, value );

        assert( res == 0 );
    }

#if PYTHON_VERSION >= 330
    PyDict_SetItem( module_dict, const_str_plain___loader__, metapath_based_loader );
#endif

    // Temp variables if any
    PyObject *exception_type = NULL, *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = -1;
    PyObject *tmp_args_element_name_1;
    PyObject *tmp_args_element_name_2;
    PyObject *tmp_args_element_name_3;
    PyObject *tmp_args_element_name_4;
    PyObject *tmp_args_element_name_5;
    PyObject *tmp_args_element_name_6;
    PyObject *tmp_args_element_name_7;
    PyObject *tmp_args_element_name_8;
    PyObject *tmp_args_element_name_9;
    PyObject *tmp_args_element_name_10;
    PyObject *tmp_args_element_name_11;
    PyObject *tmp_args_element_name_12;
    PyObject *tmp_args_element_name_13;
    PyObject *tmp_args_element_name_14;
    PyObject *tmp_args_element_name_15;
    PyObject *tmp_args_element_name_16;
    PyObject *tmp_args_element_name_17;
    PyObject *tmp_args_element_name_18;
    PyObject *tmp_args_element_name_19;
    PyObject *tmp_args_element_name_20;
    PyObject *tmp_args_element_name_21;
    PyObject *tmp_args_element_name_22;
    PyObject *tmp_args_element_name_23;
    PyObject *tmp_args_element_name_24;
    PyObject *tmp_args_element_name_25;
    PyObject *tmp_args_element_name_26;
    PyObject *tmp_args_element_name_27;
    PyObject *tmp_args_element_name_28;
    PyObject *tmp_args_element_name_29;
    PyObject *tmp_args_element_name_30;
    PyObject *tmp_args_element_name_31;
    PyObject *tmp_args_element_name_32;
    PyObject *tmp_args_element_name_33;
    PyObject *tmp_args_element_name_34;
    PyObject *tmp_args_element_name_35;
    PyObject *tmp_args_element_name_36;
    PyObject *tmp_args_element_name_37;
    PyObject *tmp_args_element_name_38;
    PyObject *tmp_args_element_name_39;
    PyObject *tmp_args_element_name_40;
    PyObject *tmp_args_element_name_41;
    PyObject *tmp_args_element_name_42;
    PyObject *tmp_args_element_name_43;
    PyObject *tmp_args_element_name_44;
    PyObject *tmp_args_element_name_45;
    PyObject *tmp_args_element_name_46;
    PyObject *tmp_args_element_name_47;
    PyObject *tmp_args_element_name_48;
    PyObject *tmp_args_element_name_49;
    PyObject *tmp_args_element_name_50;
    PyObject *tmp_args_element_name_51;
    PyObject *tmp_args_element_name_52;
    PyObject *tmp_args_element_name_53;
    PyObject *tmp_args_element_name_54;
    PyObject *tmp_args_element_name_55;
    PyObject *tmp_args_element_name_56;
    PyObject *tmp_args_element_name_57;
    PyObject *tmp_args_element_name_58;
    PyObject *tmp_args_element_name_59;
    PyObject *tmp_args_element_name_60;
    PyObject *tmp_args_element_name_61;
    PyObject *tmp_args_element_name_62;
    PyObject *tmp_args_element_name_63;
    PyObject *tmp_args_element_name_64;
    PyObject *tmp_args_element_name_65;
    PyObject *tmp_args_element_name_66;
    PyObject *tmp_args_element_name_67;
    PyObject *tmp_args_element_name_68;
    PyObject *tmp_args_element_name_69;
    PyObject *tmp_args_element_name_70;
    PyObject *tmp_args_element_name_71;
    PyObject *tmp_args_element_name_72;
    PyObject *tmp_args_element_name_73;
    PyObject *tmp_args_element_name_74;
    PyObject *tmp_args_element_name_75;
    PyObject *tmp_args_element_name_76;
    PyObject *tmp_args_element_name_77;
    PyObject *tmp_args_element_name_78;
    PyObject *tmp_args_element_name_79;
    PyObject *tmp_args_element_name_80;
    PyObject *tmp_args_element_name_81;
    PyObject *tmp_args_element_name_82;
    PyObject *tmp_args_element_name_83;
    PyObject *tmp_args_element_name_84;
    PyObject *tmp_args_element_name_85;
    PyObject *tmp_args_element_name_86;
    PyObject *tmp_args_element_name_87;
    PyObject *tmp_args_element_name_88;
    PyObject *tmp_args_element_name_89;
    PyObject *tmp_args_element_name_90;
    PyObject *tmp_args_element_name_91;
    PyObject *tmp_args_element_name_92;
    PyObject *tmp_args_element_name_93;
    PyObject *tmp_args_element_name_94;
    PyObject *tmp_args_element_name_95;
    PyObject *tmp_args_element_name_96;
    PyObject *tmp_args_element_name_97;
    PyObject *tmp_args_element_name_98;
    PyObject *tmp_args_element_name_99;
    PyObject *tmp_args_element_name_100;
    PyObject *tmp_args_element_name_101;
    PyObject *tmp_args_element_name_102;
    PyObject *tmp_args_element_name_103;
    PyObject *tmp_args_element_name_104;
    PyObject *tmp_args_element_name_105;
    PyObject *tmp_args_element_name_106;
    PyObject *tmp_args_element_name_107;
    PyObject *tmp_args_element_name_108;
    PyObject *tmp_args_element_name_109;
    PyObject *tmp_args_element_name_110;
    PyObject *tmp_args_element_name_111;
    PyObject *tmp_args_element_name_112;
    PyObject *tmp_args_element_name_113;
    PyObject *tmp_args_element_name_114;
    PyObject *tmp_args_element_name_115;
    PyObject *tmp_args_element_name_116;
    PyObject *tmp_args_element_name_117;
    PyObject *tmp_args_element_name_118;
    PyObject *tmp_args_element_name_119;
    PyObject *tmp_args_element_name_120;
    PyObject *tmp_args_element_name_121;
    PyObject *tmp_args_element_name_122;
    PyObject *tmp_args_element_name_123;
    PyObject *tmp_args_element_name_124;
    PyObject *tmp_args_element_name_125;
    PyObject *tmp_args_element_name_126;
    PyObject *tmp_args_element_name_127;
    PyObject *tmp_args_element_name_128;
    PyObject *tmp_args_element_name_129;
    PyObject *tmp_args_element_name_130;
    PyObject *tmp_args_element_name_131;
    PyObject *tmp_args_element_name_132;
    PyObject *tmp_args_element_name_133;
    PyObject *tmp_args_element_name_134;
    PyObject *tmp_args_element_name_135;
    PyObject *tmp_args_element_name_136;
    PyObject *tmp_args_element_name_137;
    PyObject *tmp_args_element_name_138;
    PyObject *tmp_args_element_name_139;
    PyObject *tmp_args_element_name_140;
    PyObject *tmp_args_element_name_141;
    PyObject *tmp_args_element_name_142;
    PyObject *tmp_args_element_name_143;
    PyObject *tmp_args_element_name_144;
    PyObject *tmp_args_element_name_145;
    PyObject *tmp_args_element_name_146;
    PyObject *tmp_args_element_name_147;
    PyObject *tmp_args_element_name_148;
    PyObject *tmp_args_element_name_149;
    PyObject *tmp_args_element_name_150;
    PyObject *tmp_args_element_name_151;
    PyObject *tmp_args_element_name_152;
    PyObject *tmp_args_element_name_153;
    PyObject *tmp_args_element_name_154;
    PyObject *tmp_args_element_name_155;
    PyObject *tmp_args_element_name_156;
    PyObject *tmp_args_element_name_157;
    PyObject *tmp_args_element_name_158;
    PyObject *tmp_args_element_name_159;
    PyObject *tmp_args_element_name_160;
    PyObject *tmp_args_element_name_161;
    PyObject *tmp_args_element_name_162;
    PyObject *tmp_args_element_name_163;
    PyObject *tmp_args_element_name_164;
    PyObject *tmp_args_element_name_165;
    PyObject *tmp_args_element_name_166;
    PyObject *tmp_args_element_name_167;
    PyObject *tmp_args_element_name_168;
    PyObject *tmp_args_element_name_169;
    PyObject *tmp_args_element_name_170;
    PyObject *tmp_args_element_name_171;
    PyObject *tmp_args_element_name_172;
    PyObject *tmp_args_element_name_173;
    PyObject *tmp_args_element_name_174;
    PyObject *tmp_args_element_name_175;
    PyObject *tmp_args_element_name_176;
    PyObject *tmp_args_element_name_177;
    PyObject *tmp_args_element_name_178;
    PyObject *tmp_args_element_name_179;
    PyObject *tmp_args_element_name_180;
    PyObject *tmp_args_element_name_181;
    PyObject *tmp_args_element_name_182;
    PyObject *tmp_args_element_name_183;
    PyObject *tmp_args_element_name_184;
    PyObject *tmp_args_element_name_185;
    PyObject *tmp_args_element_name_186;
    PyObject *tmp_args_element_name_187;
    PyObject *tmp_args_element_name_188;
    PyObject *tmp_args_element_name_189;
    PyObject *tmp_args_element_name_190;
    PyObject *tmp_args_element_name_191;
    PyObject *tmp_args_element_name_192;
    PyObject *tmp_args_element_name_193;
    PyObject *tmp_args_element_name_194;
    PyObject *tmp_args_element_name_195;
    PyObject *tmp_args_element_name_196;
    PyObject *tmp_args_element_name_197;
    PyObject *tmp_args_element_name_198;
    PyObject *tmp_args_element_name_199;
    PyObject *tmp_args_element_name_200;
    PyObject *tmp_args_element_name_201;
    PyObject *tmp_args_element_name_202;
    PyObject *tmp_args_element_name_203;
    PyObject *tmp_args_element_name_204;
    PyObject *tmp_args_element_name_205;
    PyObject *tmp_args_element_name_206;
    PyObject *tmp_args_element_name_207;
    PyObject *tmp_args_element_name_208;
    PyObject *tmp_args_element_name_209;
    PyObject *tmp_args_element_name_210;
    PyObject *tmp_args_element_name_211;
    PyObject *tmp_args_element_name_212;
    PyObject *tmp_args_element_name_213;
    PyObject *tmp_args_element_name_214;
    PyObject *tmp_args_element_name_215;
    PyObject *tmp_args_element_name_216;
    PyObject *tmp_args_element_name_217;
    PyObject *tmp_args_element_name_218;
    PyObject *tmp_args_element_name_219;
    PyObject *tmp_args_element_name_220;
    PyObject *tmp_args_element_name_221;
    PyObject *tmp_args_element_name_222;
    PyObject *tmp_args_element_name_223;
    PyObject *tmp_args_element_name_224;
    PyObject *tmp_args_element_name_225;
    PyObject *tmp_args_element_name_226;
    PyObject *tmp_args_element_name_227;
    PyObject *tmp_args_element_name_228;
    PyObject *tmp_args_element_name_229;
    PyObject *tmp_args_element_name_230;
    PyObject *tmp_args_element_name_231;
    PyObject *tmp_args_element_name_232;
    PyObject *tmp_args_element_name_233;
    PyObject *tmp_args_element_name_234;
    PyObject *tmp_args_element_name_235;
    PyObject *tmp_args_element_name_236;
    PyObject *tmp_args_element_name_237;
    PyObject *tmp_args_element_name_238;
    PyObject *tmp_args_element_name_239;
    PyObject *tmp_args_element_name_240;
    PyObject *tmp_args_element_name_241;
    PyObject *tmp_args_element_name_242;
    PyObject *tmp_args_element_name_243;
    PyObject *tmp_args_element_name_244;
    PyObject *tmp_args_element_name_245;
    PyObject *tmp_args_element_name_246;
    PyObject *tmp_args_element_name_247;
    PyObject *tmp_args_element_name_248;
    PyObject *tmp_args_element_name_249;
    PyObject *tmp_args_element_name_250;
    PyObject *tmp_args_element_name_251;
    PyObject *tmp_args_element_name_252;
    PyObject *tmp_args_element_name_253;
    PyObject *tmp_args_element_name_254;
    PyObject *tmp_args_element_name_255;
    PyObject *tmp_args_element_name_256;
    PyObject *tmp_args_element_name_257;
    PyObject *tmp_args_element_name_258;
    PyObject *tmp_args_element_name_259;
    PyObject *tmp_args_element_name_260;
    PyObject *tmp_args_element_name_261;
    PyObject *tmp_args_element_name_262;
    PyObject *tmp_args_element_name_263;
    PyObject *tmp_args_element_name_264;
    PyObject *tmp_args_element_name_265;
    PyObject *tmp_args_element_name_266;
    PyObject *tmp_args_element_name_267;
    PyObject *tmp_args_element_name_268;
    PyObject *tmp_args_element_name_269;
    PyObject *tmp_args_element_name_270;
    PyObject *tmp_args_element_name_271;
    PyObject *tmp_args_element_name_272;
    PyObject *tmp_args_element_name_273;
    PyObject *tmp_args_element_name_274;
    PyObject *tmp_args_element_name_275;
    PyObject *tmp_args_element_name_276;
    PyObject *tmp_args_element_name_277;
    PyObject *tmp_args_element_name_278;
    PyObject *tmp_args_element_name_279;
    PyObject *tmp_args_element_name_280;
    PyObject *tmp_args_element_name_281;
    PyObject *tmp_args_element_name_282;
    PyObject *tmp_args_element_name_283;
    PyObject *tmp_args_element_name_284;
    PyObject *tmp_args_element_name_285;
    PyObject *tmp_args_element_name_286;
    PyObject *tmp_args_element_name_287;
    PyObject *tmp_args_element_name_288;
    PyObject *tmp_args_element_name_289;
    PyObject *tmp_args_element_name_290;
    PyObject *tmp_args_element_name_291;
    PyObject *tmp_args_element_name_292;
    PyObject *tmp_args_element_name_293;
    PyObject *tmp_args_element_name_294;
    PyObject *tmp_args_element_name_295;
    PyObject *tmp_args_element_name_296;
    PyObject *tmp_args_element_name_297;
    PyObject *tmp_args_element_name_298;
    PyObject *tmp_args_element_name_299;
    PyObject *tmp_args_element_name_300;
    PyObject *tmp_args_element_name_301;
    PyObject *tmp_args_element_name_302;
    PyObject *tmp_args_element_name_303;
    PyObject *tmp_args_element_name_304;
    PyObject *tmp_args_element_name_305;
    PyObject *tmp_args_element_name_306;
    PyObject *tmp_args_element_name_307;
    PyObject *tmp_args_element_name_308;
    PyObject *tmp_args_element_name_309;
    PyObject *tmp_args_element_name_310;
    PyObject *tmp_args_element_name_311;
    PyObject *tmp_args_element_name_312;
    PyObject *tmp_args_element_name_313;
    PyObject *tmp_args_element_name_314;
    PyObject *tmp_args_element_name_315;
    PyObject *tmp_args_element_name_316;
    PyObject *tmp_args_element_name_317;
    PyObject *tmp_args_element_name_318;
    PyObject *tmp_args_element_name_319;
    PyObject *tmp_args_element_name_320;
    PyObject *tmp_args_element_name_321;
    PyObject *tmp_args_element_name_322;
    PyObject *tmp_args_element_name_323;
    PyObject *tmp_args_element_name_324;
    PyObject *tmp_args_element_name_325;
    PyObject *tmp_args_element_name_326;
    PyObject *tmp_args_element_name_327;
    PyObject *tmp_args_element_name_328;
    PyObject *tmp_args_element_name_329;
    PyObject *tmp_args_element_name_330;
    PyObject *tmp_args_element_name_331;
    PyObject *tmp_args_element_name_332;
    PyObject *tmp_args_element_name_333;
    PyObject *tmp_args_element_name_334;
    PyObject *tmp_args_element_name_335;
    PyObject *tmp_args_element_name_336;
    PyObject *tmp_args_element_name_337;
    PyObject *tmp_args_element_name_338;
    PyObject *tmp_args_element_name_339;
    PyObject *tmp_args_element_name_340;
    PyObject *tmp_args_element_name_341;
    PyObject *tmp_args_element_name_342;
    PyObject *tmp_args_element_name_343;
    PyObject *tmp_args_element_name_344;
    PyObject *tmp_args_element_name_345;
    PyObject *tmp_args_element_name_346;
    PyObject *tmp_args_element_name_347;
    PyObject *tmp_args_element_name_348;
    PyObject *tmp_args_element_name_349;
    PyObject *tmp_args_element_name_350;
    PyObject *tmp_args_element_name_351;
    PyObject *tmp_args_element_name_352;
    PyObject *tmp_args_element_name_353;
    PyObject *tmp_args_element_name_354;
    PyObject *tmp_args_element_name_355;
    PyObject *tmp_args_element_name_356;
    PyObject *tmp_args_element_name_357;
    PyObject *tmp_args_element_name_358;
    PyObject *tmp_args_element_name_359;
    PyObject *tmp_args_element_name_360;
    PyObject *tmp_args_element_name_361;
    PyObject *tmp_args_element_name_362;
    PyObject *tmp_args_element_name_363;
    PyObject *tmp_args_element_name_364;
    PyObject *tmp_args_element_name_365;
    PyObject *tmp_args_element_name_366;
    PyObject *tmp_args_element_name_367;
    PyObject *tmp_args_element_name_368;
    PyObject *tmp_args_element_name_369;
    PyObject *tmp_args_element_name_370;
    PyObject *tmp_args_element_name_371;
    PyObject *tmp_args_element_name_372;
    PyObject *tmp_args_element_name_373;
    PyObject *tmp_args_element_name_374;
    PyObject *tmp_args_element_name_375;
    PyObject *tmp_args_element_name_376;
    PyObject *tmp_args_element_name_377;
    PyObject *tmp_args_element_name_378;
    PyObject *tmp_args_element_name_379;
    PyObject *tmp_args_element_name_380;
    PyObject *tmp_args_element_name_381;
    PyObject *tmp_args_element_name_382;
    PyObject *tmp_args_element_name_383;
    PyObject *tmp_args_element_name_384;
    PyObject *tmp_args_element_name_385;
    PyObject *tmp_args_element_name_386;
    PyObject *tmp_args_element_name_387;
    PyObject *tmp_args_name_1;
    PyObject *tmp_args_name_2;
    PyObject *tmp_args_name_3;
    PyObject *tmp_args_name_4;
    PyObject *tmp_args_name_5;
    PyObject *tmp_args_name_6;
    PyObject *tmp_args_name_7;
    PyObject *tmp_args_name_8;
    PyObject *tmp_args_name_9;
    PyObject *tmp_args_name_10;
    PyObject *tmp_args_name_11;
    PyObject *tmp_args_name_12;
    PyObject *tmp_args_name_13;
    PyObject *tmp_args_name_14;
    PyObject *tmp_args_name_15;
    PyObject *tmp_args_name_16;
    PyObject *tmp_args_name_17;
    PyObject *tmp_args_name_18;
    PyObject *tmp_args_name_19;
    PyObject *tmp_args_name_20;
    PyObject *tmp_args_name_21;
    PyObject *tmp_args_name_22;
    PyObject *tmp_args_name_23;
    PyObject *tmp_args_name_24;
    PyObject *tmp_args_name_25;
    PyObject *tmp_args_name_26;
    PyObject *tmp_args_name_27;
    PyObject *tmp_args_name_28;
    PyObject *tmp_args_name_29;
    PyObject *tmp_args_name_30;
    PyObject *tmp_args_name_31;
    PyObject *tmp_args_name_32;
    PyObject *tmp_args_name_33;
    PyObject *tmp_args_name_34;
    PyObject *tmp_args_name_35;
    PyObject *tmp_args_name_36;
    PyObject *tmp_args_name_37;
    PyObject *tmp_args_name_38;
    PyObject *tmp_args_name_39;
    PyObject *tmp_args_name_40;
    PyObject *tmp_args_name_41;
    PyObject *tmp_args_name_42;
    PyObject *tmp_args_name_43;
    PyObject *tmp_args_name_44;
    PyObject *tmp_args_name_45;
    PyObject *tmp_args_name_46;
    PyObject *tmp_args_name_47;
    PyObject *tmp_args_name_48;
    PyObject *tmp_args_name_49;
    PyObject *tmp_args_name_50;
    PyObject *tmp_args_name_51;
    PyObject *tmp_args_name_52;
    PyObject *tmp_args_name_53;
    PyObject *tmp_args_name_54;
    PyObject *tmp_args_name_55;
    PyObject *tmp_args_name_56;
    PyObject *tmp_args_name_57;
    PyObject *tmp_args_name_58;
    PyObject *tmp_args_name_59;
    PyObject *tmp_args_name_60;
    PyObject *tmp_args_name_61;
    PyObject *tmp_args_name_62;
    PyObject *tmp_args_name_63;
    PyObject *tmp_args_name_64;
    PyObject *tmp_args_name_65;
    PyObject *tmp_args_name_66;
    PyObject *tmp_args_name_67;
    PyObject *tmp_args_name_68;
    PyObject *tmp_args_name_69;
    PyObject *tmp_args_name_70;
    PyObject *tmp_args_name_71;
    PyObject *tmp_args_name_72;
    PyObject *tmp_args_name_73;
    PyObject *tmp_assign_source_1;
    PyObject *tmp_assign_source_2;
    PyObject *tmp_assign_source_3;
    PyObject *tmp_assign_source_4;
    PyObject *tmp_assign_source_5;
    PyObject *tmp_assign_source_6;
    PyObject *tmp_assign_source_7;
    PyObject *tmp_assign_source_8;
    PyObject *tmp_assign_source_9;
    PyObject *tmp_assign_source_10;
    PyObject *tmp_assign_source_11;
    PyObject *tmp_assign_source_12;
    PyObject *tmp_assign_source_13;
    PyObject *tmp_assign_source_14;
    PyObject *tmp_assign_source_15;
    PyObject *tmp_assign_source_16;
    PyObject *tmp_assign_source_17;
    PyObject *tmp_assign_source_18;
    PyObject *tmp_assign_source_19;
    PyObject *tmp_assign_source_20;
    PyObject *tmp_assign_source_21;
    PyObject *tmp_assign_source_22;
    PyObject *tmp_assign_source_23;
    PyObject *tmp_assign_source_24;
    PyObject *tmp_assign_source_25;
    PyObject *tmp_assign_source_26;
    PyObject *tmp_assign_source_27;
    PyObject *tmp_assign_source_28;
    PyObject *tmp_assign_source_29;
    PyObject *tmp_assign_source_30;
    PyObject *tmp_assign_source_31;
    PyObject *tmp_assign_source_32;
    PyObject *tmp_assign_source_33;
    PyObject *tmp_assign_source_34;
    PyObject *tmp_assign_source_35;
    PyObject *tmp_assign_source_36;
    PyObject *tmp_assign_source_37;
    PyObject *tmp_assign_source_38;
    PyObject *tmp_assign_source_39;
    PyObject *tmp_assign_source_40;
    PyObject *tmp_assign_source_41;
    PyObject *tmp_assign_source_42;
    PyObject *tmp_assign_source_43;
    PyObject *tmp_assign_source_44;
    PyObject *tmp_assign_source_45;
    PyObject *tmp_assign_source_46;
    PyObject *tmp_assign_source_47;
    PyObject *tmp_assign_source_48;
    PyObject *tmp_assign_source_49;
    PyObject *tmp_assign_source_50;
    PyObject *tmp_assign_source_51;
    PyObject *tmp_assign_source_52;
    PyObject *tmp_assign_source_53;
    PyObject *tmp_assign_source_54;
    PyObject *tmp_assign_source_55;
    PyObject *tmp_assign_source_56;
    PyObject *tmp_assign_source_57;
    PyObject *tmp_assign_source_58;
    PyObject *tmp_assign_source_59;
    PyObject *tmp_assign_source_60;
    PyObject *tmp_assign_source_61;
    PyObject *tmp_assign_source_62;
    PyObject *tmp_assign_source_63;
    PyObject *tmp_assign_source_64;
    PyObject *tmp_assign_source_65;
    PyObject *tmp_assign_source_66;
    PyObject *tmp_assign_source_67;
    PyObject *tmp_assign_source_68;
    PyObject *tmp_assign_source_69;
    PyObject *tmp_assign_source_70;
    PyObject *tmp_assign_source_71;
    PyObject *tmp_assign_source_72;
    PyObject *tmp_assign_source_73;
    PyObject *tmp_assign_source_74;
    PyObject *tmp_assign_source_75;
    PyObject *tmp_assign_source_76;
    PyObject *tmp_assign_source_77;
    PyObject *tmp_assign_source_78;
    PyObject *tmp_assign_source_79;
    PyObject *tmp_assign_source_80;
    PyObject *tmp_assign_source_81;
    PyObject *tmp_assign_source_82;
    PyObject *tmp_assign_source_83;
    PyObject *tmp_assign_source_84;
    PyObject *tmp_assign_source_85;
    PyObject *tmp_assign_source_86;
    PyObject *tmp_assign_source_87;
    PyObject *tmp_assign_source_88;
    PyObject *tmp_assign_source_89;
    PyObject *tmp_assign_source_90;
    PyObject *tmp_assign_source_91;
    PyObject *tmp_assign_source_92;
    PyObject *tmp_assign_source_93;
    PyObject *tmp_assign_source_94;
    PyObject *tmp_assign_source_95;
    PyObject *tmp_assign_source_96;
    PyObject *tmp_assign_source_97;
    PyObject *tmp_assign_source_98;
    PyObject *tmp_assign_source_99;
    PyObject *tmp_assign_source_100;
    PyObject *tmp_assign_source_101;
    PyObject *tmp_assign_source_102;
    PyObject *tmp_assign_source_103;
    PyObject *tmp_assign_source_104;
    PyObject *tmp_assign_source_105;
    PyObject *tmp_assign_source_106;
    PyObject *tmp_assign_source_107;
    PyObject *tmp_assign_source_108;
    PyObject *tmp_assign_source_109;
    PyObject *tmp_assign_source_110;
    PyObject *tmp_assign_source_111;
    PyObject *tmp_assign_source_112;
    PyObject *tmp_assign_source_113;
    PyObject *tmp_assign_source_114;
    PyObject *tmp_assign_source_115;
    PyObject *tmp_assign_source_116;
    PyObject *tmp_assign_source_117;
    PyObject *tmp_assign_source_118;
    PyObject *tmp_assign_source_119;
    PyObject *tmp_assign_source_120;
    PyObject *tmp_assign_source_121;
    PyObject *tmp_assign_source_122;
    PyObject *tmp_assign_source_123;
    PyObject *tmp_assign_source_124;
    PyObject *tmp_assign_source_125;
    PyObject *tmp_assign_source_126;
    PyObject *tmp_assign_source_127;
    PyObject *tmp_assign_source_128;
    PyObject *tmp_assign_source_129;
    PyObject *tmp_assign_source_130;
    PyObject *tmp_assign_source_131;
    PyObject *tmp_assign_source_132;
    PyObject *tmp_assign_source_133;
    PyObject *tmp_assign_source_134;
    PyObject *tmp_assign_source_135;
    PyObject *tmp_assign_source_136;
    PyObject *tmp_assign_source_137;
    PyObject *tmp_assign_source_138;
    PyObject *tmp_assign_source_139;
    PyObject *tmp_assign_source_140;
    PyObject *tmp_assign_source_141;
    PyObject *tmp_assign_source_142;
    PyObject *tmp_assign_source_143;
    PyObject *tmp_assign_source_144;
    PyObject *tmp_assign_source_145;
    PyObject *tmp_assign_source_146;
    PyObject *tmp_assign_source_147;
    PyObject *tmp_assign_source_148;
    PyObject *tmp_assign_source_149;
    PyObject *tmp_assign_source_150;
    PyObject *tmp_assign_source_151;
    PyObject *tmp_assign_source_152;
    PyObject *tmp_assign_source_153;
    PyObject *tmp_assign_source_154;
    PyObject *tmp_assign_source_155;
    PyObject *tmp_assign_source_156;
    PyObject *tmp_assign_source_157;
    PyObject *tmp_assign_source_158;
    PyObject *tmp_assign_source_159;
    PyObject *tmp_assign_source_160;
    PyObject *tmp_assign_source_161;
    PyObject *tmp_assign_source_162;
    PyObject *tmp_assign_source_163;
    PyObject *tmp_assign_source_164;
    PyObject *tmp_assign_source_165;
    PyObject *tmp_assign_source_166;
    PyObject *tmp_assign_source_167;
    PyObject *tmp_assign_source_168;
    PyObject *tmp_assign_source_169;
    PyObject *tmp_assign_source_170;
    PyObject *tmp_assign_source_171;
    PyObject *tmp_assign_source_172;
    PyObject *tmp_assign_source_173;
    PyObject *tmp_assign_source_174;
    PyObject *tmp_assign_source_175;
    PyObject *tmp_assign_source_176;
    PyObject *tmp_assign_source_177;
    PyObject *tmp_assign_source_178;
    PyObject *tmp_assign_source_179;
    PyObject *tmp_assign_source_180;
    PyObject *tmp_assign_source_181;
    PyObject *tmp_assign_source_182;
    PyObject *tmp_assign_source_183;
    PyObject *tmp_assign_source_184;
    PyObject *tmp_assign_source_185;
    PyObject *tmp_assign_source_186;
    PyObject *tmp_assign_source_187;
    PyObject *tmp_assign_source_188;
    PyObject *tmp_assign_source_189;
    PyObject *tmp_assign_source_190;
    PyObject *tmp_assign_source_191;
    PyObject *tmp_assign_source_192;
    PyObject *tmp_assign_source_193;
    PyObject *tmp_assign_source_194;
    PyObject *tmp_assign_source_195;
    PyObject *tmp_assign_source_196;
    PyObject *tmp_assign_source_197;
    PyObject *tmp_assign_source_198;
    PyObject *tmp_assign_source_199;
    PyObject *tmp_assign_source_200;
    PyObject *tmp_assign_source_201;
    PyObject *tmp_assign_source_202;
    PyObject *tmp_assign_source_203;
    PyObject *tmp_assign_source_204;
    PyObject *tmp_assign_source_205;
    PyObject *tmp_assign_source_206;
    PyObject *tmp_assign_source_207;
    PyObject *tmp_assign_source_208;
    PyObject *tmp_assign_source_209;
    PyObject *tmp_assign_source_210;
    PyObject *tmp_assign_source_211;
    PyObject *tmp_assign_source_212;
    PyObject *tmp_assign_source_213;
    PyObject *tmp_assign_source_214;
    PyObject *tmp_assign_source_215;
    PyObject *tmp_assign_source_216;
    PyObject *tmp_assign_source_217;
    PyObject *tmp_assign_source_218;
    PyObject *tmp_assign_source_219;
    PyObject *tmp_assign_source_220;
    PyObject *tmp_assign_source_221;
    PyObject *tmp_assign_source_222;
    PyObject *tmp_assign_source_223;
    PyObject *tmp_assign_source_224;
    PyObject *tmp_assign_source_225;
    PyObject *tmp_assign_source_226;
    PyObject *tmp_assign_source_227;
    PyObject *tmp_assign_source_228;
    PyObject *tmp_assign_source_229;
    PyObject *tmp_assign_source_230;
    PyObject *tmp_assign_source_231;
    PyObject *tmp_assign_source_232;
    PyObject *tmp_assign_source_233;
    PyObject *tmp_assign_source_234;
    PyObject *tmp_assign_source_235;
    PyObject *tmp_assign_source_236;
    PyObject *tmp_assign_source_237;
    PyObject *tmp_assign_source_238;
    PyObject *tmp_assign_source_239;
    PyObject *tmp_assign_source_240;
    PyObject *tmp_assign_source_241;
    PyObject *tmp_assign_source_242;
    PyObject *tmp_assign_source_243;
    PyObject *tmp_assign_source_244;
    PyObject *tmp_assign_source_245;
    PyObject *tmp_assign_source_246;
    PyObject *tmp_assign_source_247;
    PyObject *tmp_assign_source_248;
    PyObject *tmp_assign_source_249;
    PyObject *tmp_assign_source_250;
    PyObject *tmp_assign_source_251;
    PyObject *tmp_assign_source_252;
    PyObject *tmp_assign_source_253;
    PyObject *tmp_assign_source_254;
    PyObject *tmp_assign_source_255;
    PyObject *tmp_assign_source_256;
    PyObject *tmp_assign_source_257;
    PyObject *tmp_assign_source_258;
    PyObject *tmp_assign_source_259;
    PyObject *tmp_assign_source_260;
    PyObject *tmp_assign_source_261;
    PyObject *tmp_assign_source_262;
    PyObject *tmp_assign_source_263;
    PyObject *tmp_assign_source_264;
    PyObject *tmp_assign_source_265;
    PyObject *tmp_assign_source_266;
    PyObject *tmp_assign_source_267;
    PyObject *tmp_assign_source_268;
    PyObject *tmp_assign_source_269;
    PyObject *tmp_assign_source_270;
    PyObject *tmp_assign_source_271;
    PyObject *tmp_assign_source_272;
    PyObject *tmp_assign_source_273;
    PyObject *tmp_assign_source_274;
    PyObject *tmp_assign_source_275;
    PyObject *tmp_assign_source_276;
    PyObject *tmp_assign_source_277;
    PyObject *tmp_assign_source_278;
    PyObject *tmp_assign_source_279;
    PyObject *tmp_assign_source_280;
    PyObject *tmp_assign_source_281;
    PyObject *tmp_assign_source_282;
    PyObject *tmp_assign_source_283;
    PyObject *tmp_assign_source_284;
    PyObject *tmp_assign_source_285;
    PyObject *tmp_assign_source_286;
    PyObject *tmp_assign_source_287;
    PyObject *tmp_assign_source_288;
    PyObject *tmp_assign_source_289;
    PyObject *tmp_assign_source_290;
    PyObject *tmp_assign_source_291;
    PyObject *tmp_assign_source_292;
    PyObject *tmp_assign_source_293;
    PyObject *tmp_assign_source_294;
    PyObject *tmp_assign_source_295;
    PyObject *tmp_assign_source_296;
    PyObject *tmp_assign_source_297;
    PyObject *tmp_assign_source_298;
    PyObject *tmp_assign_source_299;
    PyObject *tmp_assign_source_300;
    PyObject *tmp_assign_source_301;
    PyObject *tmp_assign_source_302;
    PyObject *tmp_assign_source_303;
    PyObject *tmp_assign_source_304;
    PyObject *tmp_assign_source_305;
    PyObject *tmp_assign_source_306;
    PyObject *tmp_assign_source_307;
    PyObject *tmp_assign_source_308;
    PyObject *tmp_assign_source_309;
    PyObject *tmp_assign_source_310;
    PyObject *tmp_assign_source_311;
    PyObject *tmp_assign_source_312;
    PyObject *tmp_assign_source_313;
    PyObject *tmp_assign_source_314;
    PyObject *tmp_assign_source_315;
    PyObject *tmp_assign_source_316;
    PyObject *tmp_assign_source_317;
    PyObject *tmp_assign_source_318;
    PyObject *tmp_assign_source_319;
    PyObject *tmp_assign_source_320;
    PyObject *tmp_assign_source_321;
    PyObject *tmp_assign_source_322;
    PyObject *tmp_assign_source_323;
    PyObject *tmp_assign_source_324;
    PyObject *tmp_assign_source_325;
    PyObject *tmp_assign_source_326;
    PyObject *tmp_assign_source_327;
    PyObject *tmp_assign_source_328;
    PyObject *tmp_assign_source_329;
    PyObject *tmp_assign_source_330;
    PyObject *tmp_assign_source_331;
    PyObject *tmp_assign_source_332;
    PyObject *tmp_assign_source_333;
    PyObject *tmp_assign_source_334;
    PyObject *tmp_assign_source_335;
    PyObject *tmp_assign_source_336;
    PyObject *tmp_assign_source_337;
    PyObject *tmp_assign_source_338;
    PyObject *tmp_assign_source_339;
    PyObject *tmp_assign_source_340;
    PyObject *tmp_assign_source_341;
    PyObject *tmp_assign_source_342;
    PyObject *tmp_assign_source_343;
    PyObject *tmp_assign_source_344;
    PyObject *tmp_assign_source_345;
    PyObject *tmp_assign_source_346;
    PyObject *tmp_assign_source_347;
    PyObject *tmp_assign_source_348;
    PyObject *tmp_assign_source_349;
    PyObject *tmp_assign_source_350;
    PyObject *tmp_assign_source_351;
    PyObject *tmp_assign_source_352;
    PyObject *tmp_assign_source_353;
    PyObject *tmp_assign_source_354;
    PyObject *tmp_assign_source_355;
    PyObject *tmp_assign_source_356;
    PyObject *tmp_assign_source_357;
    PyObject *tmp_assign_source_358;
    PyObject *tmp_assign_source_359;
    PyObject *tmp_assign_source_360;
    PyObject *tmp_assign_source_361;
    PyObject *tmp_assign_source_362;
    PyObject *tmp_assign_source_363;
    PyObject *tmp_assign_source_364;
    PyObject *tmp_assign_source_365;
    PyObject *tmp_assign_source_366;
    PyObject *tmp_assign_source_367;
    PyObject *tmp_assign_source_368;
    PyObject *tmp_assign_source_369;
    PyObject *tmp_assign_source_370;
    PyObject *tmp_assign_source_371;
    PyObject *tmp_assign_source_372;
    PyObject *tmp_assign_source_373;
    PyObject *tmp_assign_source_374;
    PyObject *tmp_assign_source_375;
    PyObject *tmp_assign_source_376;
    PyObject *tmp_assign_source_377;
    PyObject *tmp_assign_source_378;
    PyObject *tmp_assign_source_379;
    PyObject *tmp_assign_source_380;
    PyObject *tmp_assign_source_381;
    PyObject *tmp_assign_source_382;
    PyObject *tmp_assign_source_383;
    PyObject *tmp_assign_source_384;
    PyObject *tmp_assign_source_385;
    PyObject *tmp_assign_source_386;
    PyObject *tmp_assign_source_387;
    PyObject *tmp_assign_source_388;
    PyObject *tmp_assign_source_389;
    PyObject *tmp_assign_source_390;
    PyObject *tmp_assign_source_391;
    PyObject *tmp_assign_source_392;
    PyObject *tmp_assign_source_393;
    PyObject *tmp_assign_source_394;
    PyObject *tmp_called_name_1;
    PyObject *tmp_called_name_2;
    PyObject *tmp_called_name_3;
    PyObject *tmp_called_name_4;
    PyObject *tmp_called_name_5;
    PyObject *tmp_called_name_6;
    PyObject *tmp_called_name_7;
    PyObject *tmp_called_name_8;
    PyObject *tmp_called_name_9;
    PyObject *tmp_called_name_10;
    PyObject *tmp_called_name_11;
    PyObject *tmp_called_name_12;
    PyObject *tmp_called_name_13;
    PyObject *tmp_called_name_14;
    PyObject *tmp_called_name_15;
    PyObject *tmp_called_name_16;
    PyObject *tmp_called_name_17;
    PyObject *tmp_called_name_18;
    PyObject *tmp_called_name_19;
    PyObject *tmp_called_name_20;
    PyObject *tmp_called_name_21;
    PyObject *tmp_called_name_22;
    PyObject *tmp_called_name_23;
    PyObject *tmp_called_name_24;
    PyObject *tmp_called_name_25;
    PyObject *tmp_called_name_26;
    PyObject *tmp_called_name_27;
    PyObject *tmp_called_name_28;
    PyObject *tmp_called_name_29;
    PyObject *tmp_called_name_30;
    PyObject *tmp_called_name_31;
    PyObject *tmp_called_name_32;
    PyObject *tmp_called_name_33;
    PyObject *tmp_called_name_34;
    PyObject *tmp_called_name_35;
    PyObject *tmp_called_name_36;
    PyObject *tmp_called_name_37;
    PyObject *tmp_called_name_38;
    PyObject *tmp_called_name_39;
    PyObject *tmp_called_name_40;
    PyObject *tmp_called_name_41;
    PyObject *tmp_called_name_42;
    PyObject *tmp_called_name_43;
    PyObject *tmp_called_name_44;
    PyObject *tmp_called_name_45;
    PyObject *tmp_called_name_46;
    PyObject *tmp_called_name_47;
    PyObject *tmp_called_name_48;
    PyObject *tmp_called_name_49;
    PyObject *tmp_called_name_50;
    PyObject *tmp_called_name_51;
    PyObject *tmp_called_name_52;
    PyObject *tmp_called_name_53;
    PyObject *tmp_called_name_54;
    PyObject *tmp_called_name_55;
    PyObject *tmp_called_name_56;
    PyObject *tmp_called_name_57;
    PyObject *tmp_called_name_58;
    PyObject *tmp_called_name_59;
    PyObject *tmp_called_name_60;
    PyObject *tmp_called_name_61;
    PyObject *tmp_called_name_62;
    PyObject *tmp_called_name_63;
    PyObject *tmp_called_name_64;
    PyObject *tmp_called_name_65;
    PyObject *tmp_called_name_66;
    PyObject *tmp_called_name_67;
    PyObject *tmp_called_name_68;
    PyObject *tmp_called_name_69;
    PyObject *tmp_called_name_70;
    PyObject *tmp_called_name_71;
    PyObject *tmp_called_name_72;
    PyObject *tmp_called_name_73;
    PyObject *tmp_called_name_74;
    PyObject *tmp_called_name_75;
    PyObject *tmp_called_name_76;
    PyObject *tmp_called_name_77;
    PyObject *tmp_called_name_78;
    PyObject *tmp_called_name_79;
    PyObject *tmp_called_name_80;
    PyObject *tmp_called_name_81;
    PyObject *tmp_called_name_82;
    PyObject *tmp_called_name_83;
    PyObject *tmp_called_name_84;
    PyObject *tmp_called_name_85;
    PyObject *tmp_called_name_86;
    PyObject *tmp_called_name_87;
    PyObject *tmp_called_name_88;
    PyObject *tmp_called_name_89;
    PyObject *tmp_called_name_90;
    PyObject *tmp_called_name_91;
    PyObject *tmp_called_name_92;
    PyObject *tmp_called_name_93;
    PyObject *tmp_called_name_94;
    PyObject *tmp_called_name_95;
    PyObject *tmp_called_name_96;
    PyObject *tmp_called_name_97;
    PyObject *tmp_called_name_98;
    PyObject *tmp_called_name_99;
    PyObject *tmp_called_name_100;
    PyObject *tmp_called_name_101;
    PyObject *tmp_called_name_102;
    PyObject *tmp_called_name_103;
    PyObject *tmp_called_name_104;
    PyObject *tmp_called_name_105;
    PyObject *tmp_called_name_106;
    PyObject *tmp_called_name_107;
    PyObject *tmp_called_name_108;
    PyObject *tmp_called_name_109;
    PyObject *tmp_called_name_110;
    PyObject *tmp_called_name_111;
    PyObject *tmp_called_name_112;
    PyObject *tmp_called_name_113;
    PyObject *tmp_called_name_114;
    PyObject *tmp_called_name_115;
    PyObject *tmp_called_name_116;
    PyObject *tmp_called_name_117;
    PyObject *tmp_called_name_118;
    PyObject *tmp_called_name_119;
    PyObject *tmp_called_name_120;
    PyObject *tmp_called_name_121;
    PyObject *tmp_called_name_122;
    PyObject *tmp_called_name_123;
    PyObject *tmp_called_name_124;
    PyObject *tmp_called_name_125;
    PyObject *tmp_called_name_126;
    PyObject *tmp_called_name_127;
    PyObject *tmp_called_name_128;
    PyObject *tmp_called_name_129;
    PyObject *tmp_called_name_130;
    PyObject *tmp_called_name_131;
    PyObject *tmp_called_name_132;
    PyObject *tmp_called_name_133;
    PyObject *tmp_called_name_134;
    PyObject *tmp_called_name_135;
    PyObject *tmp_called_name_136;
    PyObject *tmp_called_name_137;
    PyObject *tmp_called_name_138;
    PyObject *tmp_called_name_139;
    PyObject *tmp_called_name_140;
    PyObject *tmp_called_name_141;
    PyObject *tmp_called_name_142;
    PyObject *tmp_called_name_143;
    PyObject *tmp_called_name_144;
    PyObject *tmp_called_name_145;
    PyObject *tmp_called_name_146;
    PyObject *tmp_called_name_147;
    PyObject *tmp_called_name_148;
    PyObject *tmp_called_name_149;
    PyObject *tmp_called_name_150;
    PyObject *tmp_called_name_151;
    PyObject *tmp_called_name_152;
    PyObject *tmp_called_name_153;
    PyObject *tmp_called_name_154;
    PyObject *tmp_called_name_155;
    PyObject *tmp_called_name_156;
    PyObject *tmp_called_name_157;
    PyObject *tmp_called_name_158;
    PyObject *tmp_called_name_159;
    PyObject *tmp_called_name_160;
    PyObject *tmp_called_name_161;
    PyObject *tmp_called_name_162;
    PyObject *tmp_called_name_163;
    PyObject *tmp_called_name_164;
    PyObject *tmp_called_name_165;
    PyObject *tmp_called_name_166;
    PyObject *tmp_called_name_167;
    PyObject *tmp_called_name_168;
    PyObject *tmp_called_name_169;
    PyObject *tmp_called_name_170;
    PyObject *tmp_called_name_171;
    PyObject *tmp_called_name_172;
    PyObject *tmp_called_name_173;
    PyObject *tmp_called_name_174;
    PyObject *tmp_called_name_175;
    PyObject *tmp_called_name_176;
    PyObject *tmp_called_name_177;
    PyObject *tmp_called_name_178;
    PyObject *tmp_called_name_179;
    PyObject *tmp_called_name_180;
    PyObject *tmp_called_name_181;
    PyObject *tmp_called_name_182;
    PyObject *tmp_called_name_183;
    PyObject *tmp_called_name_184;
    PyObject *tmp_called_name_185;
    PyObject *tmp_called_name_186;
    PyObject *tmp_called_name_187;
    PyObject *tmp_called_name_188;
    PyObject *tmp_called_name_189;
    PyObject *tmp_called_name_190;
    PyObject *tmp_called_name_191;
    PyObject *tmp_called_name_192;
    PyObject *tmp_called_name_193;
    PyObject *tmp_called_name_194;
    PyObject *tmp_called_name_195;
    PyObject *tmp_called_name_196;
    PyObject *tmp_called_name_197;
    PyObject *tmp_called_name_198;
    PyObject *tmp_called_name_199;
    PyObject *tmp_called_name_200;
    PyObject *tmp_called_name_201;
    PyObject *tmp_called_name_202;
    PyObject *tmp_called_name_203;
    PyObject *tmp_called_name_204;
    PyObject *tmp_called_name_205;
    PyObject *tmp_called_name_206;
    PyObject *tmp_called_name_207;
    PyObject *tmp_called_name_208;
    PyObject *tmp_called_name_209;
    PyObject *tmp_called_name_210;
    PyObject *tmp_called_name_211;
    PyObject *tmp_called_name_212;
    PyObject *tmp_called_name_213;
    PyObject *tmp_called_name_214;
    PyObject *tmp_called_name_215;
    PyObject *tmp_called_name_216;
    PyObject *tmp_called_name_217;
    PyObject *tmp_called_name_218;
    PyObject *tmp_called_name_219;
    PyObject *tmp_called_name_220;
    PyObject *tmp_called_name_221;
    PyObject *tmp_called_name_222;
    PyObject *tmp_called_name_223;
    PyObject *tmp_called_name_224;
    PyObject *tmp_called_name_225;
    PyObject *tmp_called_name_226;
    PyObject *tmp_called_name_227;
    PyObject *tmp_called_name_228;
    PyObject *tmp_called_name_229;
    PyObject *tmp_called_name_230;
    PyObject *tmp_called_name_231;
    PyObject *tmp_called_name_232;
    PyObject *tmp_called_name_233;
    PyObject *tmp_called_name_234;
    PyObject *tmp_called_name_235;
    PyObject *tmp_called_name_236;
    PyObject *tmp_called_name_237;
    PyObject *tmp_called_name_238;
    PyObject *tmp_called_name_239;
    PyObject *tmp_called_name_240;
    PyObject *tmp_called_name_241;
    PyObject *tmp_called_name_242;
    PyObject *tmp_called_name_243;
    PyObject *tmp_called_name_244;
    PyObject *tmp_called_name_245;
    PyObject *tmp_called_name_246;
    PyObject *tmp_called_name_247;
    PyObject *tmp_called_name_248;
    PyObject *tmp_called_name_249;
    PyObject *tmp_called_name_250;
    PyObject *tmp_called_name_251;
    PyObject *tmp_called_name_252;
    PyObject *tmp_called_name_253;
    PyObject *tmp_called_name_254;
    PyObject *tmp_called_name_255;
    PyObject *tmp_called_name_256;
    PyObject *tmp_called_name_257;
    PyObject *tmp_called_name_258;
    PyObject *tmp_called_name_259;
    PyObject *tmp_called_name_260;
    PyObject *tmp_called_name_261;
    PyObject *tmp_called_name_262;
    PyObject *tmp_called_name_263;
    PyObject *tmp_called_name_264;
    PyObject *tmp_called_name_265;
    PyObject *tmp_called_name_266;
    PyObject *tmp_called_name_267;
    PyObject *tmp_called_name_268;
    PyObject *tmp_called_name_269;
    PyObject *tmp_called_name_270;
    PyObject *tmp_called_name_271;
    PyObject *tmp_called_name_272;
    PyObject *tmp_called_name_273;
    PyObject *tmp_called_name_274;
    PyObject *tmp_called_name_275;
    PyObject *tmp_called_name_276;
    PyObject *tmp_called_name_277;
    PyObject *tmp_called_name_278;
    PyObject *tmp_called_name_279;
    PyObject *tmp_called_name_280;
    PyObject *tmp_called_name_281;
    PyObject *tmp_called_name_282;
    PyObject *tmp_called_name_283;
    PyObject *tmp_called_name_284;
    PyObject *tmp_called_name_285;
    PyObject *tmp_called_name_286;
    PyObject *tmp_called_name_287;
    PyObject *tmp_called_name_288;
    PyObject *tmp_called_name_289;
    PyObject *tmp_called_name_290;
    PyObject *tmp_called_name_291;
    PyObject *tmp_called_name_292;
    PyObject *tmp_called_name_293;
    PyObject *tmp_called_name_294;
    PyObject *tmp_called_name_295;
    PyObject *tmp_called_name_296;
    PyObject *tmp_called_name_297;
    PyObject *tmp_called_name_298;
    PyObject *tmp_called_name_299;
    PyObject *tmp_called_name_300;
    PyObject *tmp_called_name_301;
    PyObject *tmp_called_name_302;
    PyObject *tmp_called_name_303;
    PyObject *tmp_called_name_304;
    PyObject *tmp_called_name_305;
    PyObject *tmp_called_name_306;
    PyObject *tmp_called_name_307;
    PyObject *tmp_called_name_308;
    PyObject *tmp_called_name_309;
    PyObject *tmp_called_name_310;
    PyObject *tmp_called_name_311;
    PyObject *tmp_called_name_312;
    PyObject *tmp_called_name_313;
    PyObject *tmp_called_name_314;
    PyObject *tmp_called_name_315;
    PyObject *tmp_called_name_316;
    PyObject *tmp_called_name_317;
    PyObject *tmp_called_name_318;
    PyObject *tmp_called_name_319;
    PyObject *tmp_called_name_320;
    PyObject *tmp_called_name_321;
    PyObject *tmp_called_name_322;
    PyObject *tmp_called_name_323;
    PyObject *tmp_called_name_324;
    PyObject *tmp_called_name_325;
    PyObject *tmp_called_name_326;
    PyObject *tmp_called_name_327;
    PyObject *tmp_called_name_328;
    PyObject *tmp_called_name_329;
    PyObject *tmp_called_name_330;
    PyObject *tmp_called_name_331;
    PyObject *tmp_called_name_332;
    PyObject *tmp_called_name_333;
    PyObject *tmp_called_name_334;
    PyObject *tmp_called_name_335;
    PyObject *tmp_called_name_336;
    PyObject *tmp_called_name_337;
    PyObject *tmp_called_name_338;
    PyObject *tmp_called_name_339;
    PyObject *tmp_called_name_340;
    PyObject *tmp_called_name_341;
    PyObject *tmp_called_name_342;
    PyObject *tmp_called_name_343;
    PyObject *tmp_called_name_344;
    PyObject *tmp_called_name_345;
    PyObject *tmp_called_name_346;
    PyObject *tmp_called_name_347;
    PyObject *tmp_called_name_348;
    PyObject *tmp_called_name_349;
    PyObject *tmp_called_name_350;
    PyObject *tmp_called_name_351;
    PyObject *tmp_called_name_352;
    PyObject *tmp_called_name_353;
    PyObject *tmp_called_name_354;
    PyObject *tmp_called_name_355;
    PyObject *tmp_called_name_356;
    PyObject *tmp_called_name_357;
    PyObject *tmp_called_name_358;
    PyObject *tmp_called_name_359;
    PyObject *tmp_called_name_360;
    PyObject *tmp_called_name_361;
    PyObject *tmp_called_name_362;
    PyObject *tmp_called_name_363;
    PyObject *tmp_called_name_364;
    PyObject *tmp_called_name_365;
    PyObject *tmp_called_name_366;
    PyObject *tmp_called_name_367;
    PyObject *tmp_called_name_368;
    PyObject *tmp_called_name_369;
    PyObject *tmp_called_name_370;
    PyObject *tmp_called_name_371;
    PyObject *tmp_called_name_372;
    PyObject *tmp_called_name_373;
    PyObject *tmp_called_name_374;
    PyObject *tmp_called_name_375;
    PyObject *tmp_called_name_376;
    PyObject *tmp_called_name_377;
    PyObject *tmp_called_name_378;
    PyObject *tmp_called_name_379;
    PyObject *tmp_called_name_380;
    PyObject *tmp_called_name_381;
    PyObject *tmp_called_name_382;
    PyObject *tmp_called_name_383;
    PyObject *tmp_called_name_384;
    PyObject *tmp_called_name_385;
    PyObject *tmp_called_name_386;
    PyObject *tmp_called_name_387;
    PyObject *tmp_called_name_388;
    PyObject *tmp_called_name_389;
    PyObject *tmp_called_name_390;
    PyObject *tmp_called_name_391;
    PyObject *tmp_called_name_392;
    PyObject *tmp_called_name_393;
    PyObject *tmp_called_name_394;
    PyObject *tmp_called_name_395;
    PyObject *tmp_called_name_396;
    PyObject *tmp_called_name_397;
    PyObject *tmp_called_name_398;
    PyObject *tmp_called_name_399;
    PyObject *tmp_called_name_400;
    PyObject *tmp_called_name_401;
    PyObject *tmp_called_name_402;
    PyObject *tmp_called_name_403;
    PyObject *tmp_called_name_404;
    PyObject *tmp_called_name_405;
    PyObject *tmp_called_name_406;
    PyObject *tmp_called_name_407;
    PyObject *tmp_called_name_408;
    PyObject *tmp_called_name_409;
    PyObject *tmp_called_name_410;
    PyObject *tmp_called_name_411;
    PyObject *tmp_called_name_412;
    PyObject *tmp_called_name_413;
    PyObject *tmp_called_name_414;
    PyObject *tmp_called_name_415;
    PyObject *tmp_called_name_416;
    PyObject *tmp_called_name_417;
    PyObject *tmp_called_name_418;
    PyObject *tmp_called_name_419;
    PyObject *tmp_called_name_420;
    PyObject *tmp_called_name_421;
    PyObject *tmp_called_name_422;
    PyObject *tmp_called_name_423;
    PyObject *tmp_called_name_424;
    PyObject *tmp_called_name_425;
    PyObject *tmp_called_name_426;
    PyObject *tmp_called_name_427;
    PyObject *tmp_called_name_428;
    PyObject *tmp_called_name_429;
    PyObject *tmp_called_name_430;
    PyObject *tmp_called_name_431;
    PyObject *tmp_called_name_432;
    PyObject *tmp_called_name_433;
    PyObject *tmp_called_name_434;
    PyObject *tmp_called_name_435;
    PyObject *tmp_called_name_436;
    PyObject *tmp_called_name_437;
    PyObject *tmp_called_name_438;
    PyObject *tmp_called_name_439;
    PyObject *tmp_called_name_440;
    PyObject *tmp_called_name_441;
    PyObject *tmp_called_name_442;
    PyObject *tmp_called_name_443;
    PyObject *tmp_called_name_444;
    PyObject *tmp_called_name_445;
    PyObject *tmp_called_name_446;
    PyObject *tmp_called_name_447;
    PyObject *tmp_called_name_448;
    PyObject *tmp_called_name_449;
    PyObject *tmp_called_name_450;
    PyObject *tmp_called_name_451;
    PyObject *tmp_called_name_452;
    PyObject *tmp_called_name_453;
    PyObject *tmp_called_name_454;
    PyObject *tmp_called_name_455;
    PyObject *tmp_called_name_456;
    PyObject *tmp_called_name_457;
    PyObject *tmp_called_name_458;
    PyObject *tmp_called_name_459;
    PyObject *tmp_called_name_460;
    PyObject *tmp_called_name_461;
    PyObject *tmp_called_name_462;
    PyObject *tmp_called_name_463;
    PyObject *tmp_called_name_464;
    PyObject *tmp_called_name_465;
    PyObject *tmp_called_name_466;
    PyObject *tmp_called_name_467;
    PyObject *tmp_called_name_468;
    PyObject *tmp_called_name_469;
    PyObject *tmp_called_name_470;
    PyObject *tmp_called_name_471;
    PyObject *tmp_called_name_472;
    PyObject *tmp_called_name_473;
    PyObject *tmp_called_name_474;
    PyObject *tmp_called_name_475;
    PyObject *tmp_called_name_476;
    PyObject *tmp_called_name_477;
    PyObject *tmp_called_name_478;
    PyObject *tmp_called_name_479;
    PyObject *tmp_called_name_480;
    PyObject *tmp_called_name_481;
    PyObject *tmp_called_name_482;
    PyObject *tmp_called_name_483;
    PyObject *tmp_called_name_484;
    PyObject *tmp_called_name_485;
    PyObject *tmp_called_name_486;
    PyObject *tmp_called_name_487;
    PyObject *tmp_called_name_488;
    PyObject *tmp_called_name_489;
    PyObject *tmp_called_name_490;
    PyObject *tmp_called_name_491;
    PyObject *tmp_called_name_492;
    PyObject *tmp_called_name_493;
    PyObject *tmp_called_name_494;
    PyObject *tmp_called_name_495;
    PyObject *tmp_dict_key_1;
    PyObject *tmp_dict_key_2;
    PyObject *tmp_dict_key_3;
    PyObject *tmp_dict_key_4;
    PyObject *tmp_dict_key_5;
    PyObject *tmp_dict_key_6;
    PyObject *tmp_dict_key_7;
    PyObject *tmp_dict_key_8;
    PyObject *tmp_dict_key_9;
    PyObject *tmp_dict_key_10;
    PyObject *tmp_dict_key_11;
    PyObject *tmp_dict_key_12;
    PyObject *tmp_dict_key_13;
    PyObject *tmp_dict_key_14;
    PyObject *tmp_dict_key_15;
    PyObject *tmp_dict_key_16;
    PyObject *tmp_dict_key_17;
    PyObject *tmp_dict_key_18;
    PyObject *tmp_dict_key_19;
    PyObject *tmp_dict_key_20;
    PyObject *tmp_dict_key_21;
    PyObject *tmp_dict_key_22;
    PyObject *tmp_dict_key_23;
    PyObject *tmp_dict_key_24;
    PyObject *tmp_dict_key_25;
    PyObject *tmp_dict_key_26;
    PyObject *tmp_dict_key_27;
    PyObject *tmp_dict_key_28;
    PyObject *tmp_dict_key_29;
    PyObject *tmp_dict_key_30;
    PyObject *tmp_dict_key_31;
    PyObject *tmp_dict_key_32;
    PyObject *tmp_dict_key_33;
    PyObject *tmp_dict_key_34;
    PyObject *tmp_dict_key_35;
    PyObject *tmp_dict_key_36;
    PyObject *tmp_dict_key_37;
    PyObject *tmp_dict_key_38;
    PyObject *tmp_dict_key_39;
    PyObject *tmp_dict_key_40;
    PyObject *tmp_dict_key_41;
    PyObject *tmp_dict_key_42;
    PyObject *tmp_dict_key_43;
    PyObject *tmp_dict_key_44;
    PyObject *tmp_dict_key_45;
    PyObject *tmp_dict_key_46;
    PyObject *tmp_dict_key_47;
    PyObject *tmp_dict_key_48;
    PyObject *tmp_dict_key_49;
    PyObject *tmp_dict_key_50;
    PyObject *tmp_dict_key_51;
    PyObject *tmp_dict_key_52;
    PyObject *tmp_dict_key_53;
    PyObject *tmp_dict_key_54;
    PyObject *tmp_dict_key_55;
    PyObject *tmp_dict_key_56;
    PyObject *tmp_dict_key_57;
    PyObject *tmp_dict_key_58;
    PyObject *tmp_dict_key_59;
    PyObject *tmp_dict_key_60;
    PyObject *tmp_dict_key_61;
    PyObject *tmp_dict_key_62;
    PyObject *tmp_dict_key_63;
    PyObject *tmp_dict_key_64;
    PyObject *tmp_dict_key_65;
    PyObject *tmp_dict_key_66;
    PyObject *tmp_dict_key_67;
    PyObject *tmp_dict_key_68;
    PyObject *tmp_dict_key_69;
    PyObject *tmp_dict_key_70;
    PyObject *tmp_dict_key_71;
    PyObject *tmp_dict_key_72;
    PyObject *tmp_dict_key_73;
    PyObject *tmp_dict_key_74;
    PyObject *tmp_dict_key_75;
    PyObject *tmp_dict_key_76;
    PyObject *tmp_dict_key_77;
    PyObject *tmp_dict_key_78;
    PyObject *tmp_dict_key_79;
    PyObject *tmp_dict_key_80;
    PyObject *tmp_dict_key_81;
    PyObject *tmp_dict_key_82;
    PyObject *tmp_dict_key_83;
    PyObject *tmp_dict_key_84;
    PyObject *tmp_dict_key_85;
    PyObject *tmp_dict_key_86;
    PyObject *tmp_dict_key_87;
    PyObject *tmp_dict_key_88;
    PyObject *tmp_dict_key_89;
    PyObject *tmp_dict_key_90;
    PyObject *tmp_dict_key_91;
    PyObject *tmp_dict_key_92;
    PyObject *tmp_dict_key_93;
    PyObject *tmp_dict_key_94;
    PyObject *tmp_dict_key_95;
    PyObject *tmp_dict_key_96;
    PyObject *tmp_dict_key_97;
    PyObject *tmp_dict_key_98;
    PyObject *tmp_dict_key_99;
    PyObject *tmp_dict_key_100;
    PyObject *tmp_dict_key_101;
    PyObject *tmp_dict_key_102;
    PyObject *tmp_dict_key_103;
    PyObject *tmp_dict_key_104;
    PyObject *tmp_dict_key_105;
    PyObject *tmp_dict_key_106;
    PyObject *tmp_dict_key_107;
    PyObject *tmp_dict_key_108;
    PyObject *tmp_dict_key_109;
    PyObject *tmp_dict_key_110;
    PyObject *tmp_dict_key_111;
    PyObject *tmp_dict_key_112;
    PyObject *tmp_dict_key_113;
    PyObject *tmp_dict_key_114;
    PyObject *tmp_dict_key_115;
    PyObject *tmp_dict_key_116;
    PyObject *tmp_dict_key_117;
    PyObject *tmp_dict_key_118;
    PyObject *tmp_dict_key_119;
    PyObject *tmp_dict_key_120;
    PyObject *tmp_dict_key_121;
    PyObject *tmp_dict_key_122;
    PyObject *tmp_dict_key_123;
    PyObject *tmp_dict_key_124;
    PyObject *tmp_dict_key_125;
    PyObject *tmp_dict_key_126;
    PyObject *tmp_dict_key_127;
    PyObject *tmp_dict_key_128;
    PyObject *tmp_dict_key_129;
    PyObject *tmp_dict_key_130;
    PyObject *tmp_dict_key_131;
    PyObject *tmp_dict_key_132;
    PyObject *tmp_dict_key_133;
    PyObject *tmp_dict_key_134;
    PyObject *tmp_dict_key_135;
    PyObject *tmp_dict_key_136;
    PyObject *tmp_dict_key_137;
    PyObject *tmp_dict_key_138;
    PyObject *tmp_dict_key_139;
    PyObject *tmp_dict_key_140;
    PyObject *tmp_dict_key_141;
    PyObject *tmp_dict_key_142;
    PyObject *tmp_dict_key_143;
    PyObject *tmp_dict_key_144;
    PyObject *tmp_dict_key_145;
    PyObject *tmp_dict_key_146;
    PyObject *tmp_dict_key_147;
    PyObject *tmp_dict_key_148;
    PyObject *tmp_dict_key_149;
    PyObject *tmp_dict_key_150;
    PyObject *tmp_dict_key_151;
    PyObject *tmp_dict_key_152;
    PyObject *tmp_dict_key_153;
    PyObject *tmp_dict_key_154;
    PyObject *tmp_dict_key_155;
    PyObject *tmp_dict_key_156;
    PyObject *tmp_dict_key_157;
    PyObject *tmp_dict_key_158;
    PyObject *tmp_dict_key_159;
    PyObject *tmp_dict_key_160;
    PyObject *tmp_dict_key_161;
    PyObject *tmp_dict_key_162;
    PyObject *tmp_dict_key_163;
    PyObject *tmp_dict_key_164;
    PyObject *tmp_dict_key_165;
    PyObject *tmp_dict_key_166;
    PyObject *tmp_dict_key_167;
    PyObject *tmp_dict_key_168;
    PyObject *tmp_dict_key_169;
    PyObject *tmp_dict_key_170;
    PyObject *tmp_dict_key_171;
    PyObject *tmp_dict_key_172;
    PyObject *tmp_dict_key_173;
    PyObject *tmp_dict_key_174;
    PyObject *tmp_dict_key_175;
    PyObject *tmp_dict_key_176;
    PyObject *tmp_dict_key_177;
    PyObject *tmp_dict_key_178;
    PyObject *tmp_dict_key_179;
    PyObject *tmp_dict_key_180;
    PyObject *tmp_dict_key_181;
    PyObject *tmp_dict_key_182;
    PyObject *tmp_dict_key_183;
    PyObject *tmp_dict_key_184;
    PyObject *tmp_dict_key_185;
    PyObject *tmp_dict_key_186;
    PyObject *tmp_dict_key_187;
    PyObject *tmp_dict_key_188;
    PyObject *tmp_dict_key_189;
    PyObject *tmp_dict_key_190;
    PyObject *tmp_dict_key_191;
    PyObject *tmp_dict_key_192;
    PyObject *tmp_dict_key_193;
    PyObject *tmp_dict_key_194;
    PyObject *tmp_dict_key_195;
    PyObject *tmp_dict_key_196;
    PyObject *tmp_dict_key_197;
    PyObject *tmp_dict_key_198;
    PyObject *tmp_dict_key_199;
    PyObject *tmp_dict_key_200;
    PyObject *tmp_dict_key_201;
    PyObject *tmp_dict_key_202;
    PyObject *tmp_dict_key_203;
    PyObject *tmp_dict_key_204;
    PyObject *tmp_dict_key_205;
    PyObject *tmp_dict_key_206;
    PyObject *tmp_dict_key_207;
    PyObject *tmp_dict_key_208;
    PyObject *tmp_dict_key_209;
    PyObject *tmp_dict_key_210;
    PyObject *tmp_dict_key_211;
    PyObject *tmp_dict_key_212;
    PyObject *tmp_dict_key_213;
    PyObject *tmp_dict_key_214;
    PyObject *tmp_dict_key_215;
    PyObject *tmp_dict_key_216;
    PyObject *tmp_dict_key_217;
    PyObject *tmp_dict_key_218;
    PyObject *tmp_dict_key_219;
    PyObject *tmp_dict_key_220;
    PyObject *tmp_dict_key_221;
    PyObject *tmp_dict_key_222;
    PyObject *tmp_dict_key_223;
    PyObject *tmp_dict_key_224;
    PyObject *tmp_dict_key_225;
    PyObject *tmp_dict_key_226;
    PyObject *tmp_dict_key_227;
    PyObject *tmp_dict_key_228;
    PyObject *tmp_dict_key_229;
    PyObject *tmp_dict_key_230;
    PyObject *tmp_dict_key_231;
    PyObject *tmp_dict_key_232;
    PyObject *tmp_dict_key_233;
    PyObject *tmp_dict_key_234;
    PyObject *tmp_dict_key_235;
    PyObject *tmp_dict_key_236;
    PyObject *tmp_dict_key_237;
    PyObject *tmp_dict_key_238;
    PyObject *tmp_dict_key_239;
    PyObject *tmp_dict_key_240;
    PyObject *tmp_dict_key_241;
    PyObject *tmp_dict_key_242;
    PyObject *tmp_dict_key_243;
    PyObject *tmp_dict_key_244;
    PyObject *tmp_dict_key_245;
    PyObject *tmp_dict_key_246;
    PyObject *tmp_dict_key_247;
    PyObject *tmp_dict_key_248;
    PyObject *tmp_dict_key_249;
    PyObject *tmp_dict_key_250;
    PyObject *tmp_dict_key_251;
    PyObject *tmp_dict_key_252;
    PyObject *tmp_dict_key_253;
    PyObject *tmp_dict_key_254;
    PyObject *tmp_dict_key_255;
    PyObject *tmp_dict_key_256;
    PyObject *tmp_dict_key_257;
    PyObject *tmp_dict_key_258;
    PyObject *tmp_dict_key_259;
    PyObject *tmp_dict_key_260;
    PyObject *tmp_dict_key_261;
    PyObject *tmp_dict_key_262;
    PyObject *tmp_dict_key_263;
    PyObject *tmp_dict_key_264;
    PyObject *tmp_dict_key_265;
    PyObject *tmp_dict_key_266;
    PyObject *tmp_dict_key_267;
    PyObject *tmp_dict_key_268;
    PyObject *tmp_dict_key_269;
    PyObject *tmp_dict_key_270;
    PyObject *tmp_dict_key_271;
    PyObject *tmp_dict_key_272;
    PyObject *tmp_dict_key_273;
    PyObject *tmp_dict_key_274;
    PyObject *tmp_dict_key_275;
    PyObject *tmp_dict_key_276;
    PyObject *tmp_dict_key_277;
    PyObject *tmp_dict_key_278;
    PyObject *tmp_dict_key_279;
    PyObject *tmp_dict_key_280;
    PyObject *tmp_dict_key_281;
    PyObject *tmp_dict_key_282;
    PyObject *tmp_dict_key_283;
    PyObject *tmp_dict_key_284;
    PyObject *tmp_dict_key_285;
    PyObject *tmp_dict_key_286;
    PyObject *tmp_dict_key_287;
    PyObject *tmp_dict_key_288;
    PyObject *tmp_dict_key_289;
    PyObject *tmp_dict_key_290;
    PyObject *tmp_dict_key_291;
    PyObject *tmp_dict_key_292;
    PyObject *tmp_dict_key_293;
    PyObject *tmp_dict_key_294;
    PyObject *tmp_dict_key_295;
    PyObject *tmp_dict_key_296;
    PyObject *tmp_dict_key_297;
    PyObject *tmp_dict_key_298;
    PyObject *tmp_dict_key_299;
    PyObject *tmp_dict_key_300;
    PyObject *tmp_dict_key_301;
    PyObject *tmp_dict_key_302;
    PyObject *tmp_dict_key_303;
    PyObject *tmp_dict_key_304;
    PyObject *tmp_dict_key_305;
    PyObject *tmp_dict_key_306;
    PyObject *tmp_dict_key_307;
    PyObject *tmp_dict_key_308;
    PyObject *tmp_dict_key_309;
    PyObject *tmp_dict_key_310;
    PyObject *tmp_dict_key_311;
    PyObject *tmp_dict_key_312;
    PyObject *tmp_dict_key_313;
    PyObject *tmp_dict_key_314;
    PyObject *tmp_dict_key_315;
    PyObject *tmp_dict_key_316;
    PyObject *tmp_dict_key_317;
    PyObject *tmp_dict_key_318;
    PyObject *tmp_dict_key_319;
    PyObject *tmp_dict_key_320;
    PyObject *tmp_dict_key_321;
    PyObject *tmp_dict_key_322;
    PyObject *tmp_dict_key_323;
    PyObject *tmp_dict_key_324;
    PyObject *tmp_dict_key_325;
    PyObject *tmp_dict_key_326;
    PyObject *tmp_dict_key_327;
    PyObject *tmp_dict_key_328;
    PyObject *tmp_dict_key_329;
    PyObject *tmp_dict_key_330;
    PyObject *tmp_dict_key_331;
    PyObject *tmp_dict_key_332;
    PyObject *tmp_dict_key_333;
    PyObject *tmp_dict_key_334;
    PyObject *tmp_dict_key_335;
    PyObject *tmp_dict_key_336;
    PyObject *tmp_dict_key_337;
    PyObject *tmp_dict_key_338;
    PyObject *tmp_dict_key_339;
    PyObject *tmp_dict_key_340;
    PyObject *tmp_dict_key_341;
    PyObject *tmp_dict_key_342;
    PyObject *tmp_dict_key_343;
    PyObject *tmp_dict_key_344;
    PyObject *tmp_dict_key_345;
    PyObject *tmp_dict_key_346;
    PyObject *tmp_dict_key_347;
    PyObject *tmp_dict_key_348;
    PyObject *tmp_dict_key_349;
    PyObject *tmp_dict_key_350;
    PyObject *tmp_dict_key_351;
    PyObject *tmp_dict_key_352;
    PyObject *tmp_dict_key_353;
    PyObject *tmp_dict_key_354;
    PyObject *tmp_dict_key_355;
    PyObject *tmp_dict_key_356;
    PyObject *tmp_dict_key_357;
    PyObject *tmp_dict_key_358;
    PyObject *tmp_dict_key_359;
    PyObject *tmp_dict_key_360;
    PyObject *tmp_dict_key_361;
    PyObject *tmp_dict_key_362;
    PyObject *tmp_dict_key_363;
    PyObject *tmp_dict_key_364;
    PyObject *tmp_dict_key_365;
    PyObject *tmp_dict_value_1;
    PyObject *tmp_dict_value_2;
    PyObject *tmp_dict_value_3;
    PyObject *tmp_dict_value_4;
    PyObject *tmp_dict_value_5;
    PyObject *tmp_dict_value_6;
    PyObject *tmp_dict_value_7;
    PyObject *tmp_dict_value_8;
    PyObject *tmp_dict_value_9;
    PyObject *tmp_dict_value_10;
    PyObject *tmp_dict_value_11;
    PyObject *tmp_dict_value_12;
    PyObject *tmp_dict_value_13;
    PyObject *tmp_dict_value_14;
    PyObject *tmp_dict_value_15;
    PyObject *tmp_dict_value_16;
    PyObject *tmp_dict_value_17;
    PyObject *tmp_dict_value_18;
    PyObject *tmp_dict_value_19;
    PyObject *tmp_dict_value_20;
    PyObject *tmp_dict_value_21;
    PyObject *tmp_dict_value_22;
    PyObject *tmp_dict_value_23;
    PyObject *tmp_dict_value_24;
    PyObject *tmp_dict_value_25;
    PyObject *tmp_dict_value_26;
    PyObject *tmp_dict_value_27;
    PyObject *tmp_dict_value_28;
    PyObject *tmp_dict_value_29;
    PyObject *tmp_dict_value_30;
    PyObject *tmp_dict_value_31;
    PyObject *tmp_dict_value_32;
    PyObject *tmp_dict_value_33;
    PyObject *tmp_dict_value_34;
    PyObject *tmp_dict_value_35;
    PyObject *tmp_dict_value_36;
    PyObject *tmp_dict_value_37;
    PyObject *tmp_dict_value_38;
    PyObject *tmp_dict_value_39;
    PyObject *tmp_dict_value_40;
    PyObject *tmp_dict_value_41;
    PyObject *tmp_dict_value_42;
    PyObject *tmp_dict_value_43;
    PyObject *tmp_dict_value_44;
    PyObject *tmp_dict_value_45;
    PyObject *tmp_dict_value_46;
    PyObject *tmp_dict_value_47;
    PyObject *tmp_dict_value_48;
    PyObject *tmp_dict_value_49;
    PyObject *tmp_dict_value_50;
    PyObject *tmp_dict_value_51;
    PyObject *tmp_dict_value_52;
    PyObject *tmp_dict_value_53;
    PyObject *tmp_dict_value_54;
    PyObject *tmp_dict_value_55;
    PyObject *tmp_dict_value_56;
    PyObject *tmp_dict_value_57;
    PyObject *tmp_dict_value_58;
    PyObject *tmp_dict_value_59;
    PyObject *tmp_dict_value_60;
    PyObject *tmp_dict_value_61;
    PyObject *tmp_dict_value_62;
    PyObject *tmp_dict_value_63;
    PyObject *tmp_dict_value_64;
    PyObject *tmp_dict_value_65;
    PyObject *tmp_dict_value_66;
    PyObject *tmp_dict_value_67;
    PyObject *tmp_dict_value_68;
    PyObject *tmp_dict_value_69;
    PyObject *tmp_dict_value_70;
    PyObject *tmp_dict_value_71;
    PyObject *tmp_dict_value_72;
    PyObject *tmp_dict_value_73;
    PyObject *tmp_dict_value_74;
    PyObject *tmp_dict_value_75;
    PyObject *tmp_dict_value_76;
    PyObject *tmp_dict_value_77;
    PyObject *tmp_dict_value_78;
    PyObject *tmp_dict_value_79;
    PyObject *tmp_dict_value_80;
    PyObject *tmp_dict_value_81;
    PyObject *tmp_dict_value_82;
    PyObject *tmp_dict_value_83;
    PyObject *tmp_dict_value_84;
    PyObject *tmp_dict_value_85;
    PyObject *tmp_dict_value_86;
    PyObject *tmp_dict_value_87;
    PyObject *tmp_dict_value_88;
    PyObject *tmp_dict_value_89;
    PyObject *tmp_dict_value_90;
    PyObject *tmp_dict_value_91;
    PyObject *tmp_dict_value_92;
    PyObject *tmp_dict_value_93;
    PyObject *tmp_dict_value_94;
    PyObject *tmp_dict_value_95;
    PyObject *tmp_dict_value_96;
    PyObject *tmp_dict_value_97;
    PyObject *tmp_dict_value_98;
    PyObject *tmp_dict_value_99;
    PyObject *tmp_dict_value_100;
    PyObject *tmp_dict_value_101;
    PyObject *tmp_dict_value_102;
    PyObject *tmp_dict_value_103;
    PyObject *tmp_dict_value_104;
    PyObject *tmp_dict_value_105;
    PyObject *tmp_dict_value_106;
    PyObject *tmp_dict_value_107;
    PyObject *tmp_dict_value_108;
    PyObject *tmp_dict_value_109;
    PyObject *tmp_dict_value_110;
    PyObject *tmp_dict_value_111;
    PyObject *tmp_dict_value_112;
    PyObject *tmp_dict_value_113;
    PyObject *tmp_dict_value_114;
    PyObject *tmp_dict_value_115;
    PyObject *tmp_dict_value_116;
    PyObject *tmp_dict_value_117;
    PyObject *tmp_dict_value_118;
    PyObject *tmp_dict_value_119;
    PyObject *tmp_dict_value_120;
    PyObject *tmp_dict_value_121;
    PyObject *tmp_dict_value_122;
    PyObject *tmp_dict_value_123;
    PyObject *tmp_dict_value_124;
    PyObject *tmp_dict_value_125;
    PyObject *tmp_dict_value_126;
    PyObject *tmp_dict_value_127;
    PyObject *tmp_dict_value_128;
    PyObject *tmp_dict_value_129;
    PyObject *tmp_dict_value_130;
    PyObject *tmp_dict_value_131;
    PyObject *tmp_dict_value_132;
    PyObject *tmp_dict_value_133;
    PyObject *tmp_dict_value_134;
    PyObject *tmp_dict_value_135;
    PyObject *tmp_dict_value_136;
    PyObject *tmp_dict_value_137;
    PyObject *tmp_dict_value_138;
    PyObject *tmp_dict_value_139;
    PyObject *tmp_dict_value_140;
    PyObject *tmp_dict_value_141;
    PyObject *tmp_dict_value_142;
    PyObject *tmp_dict_value_143;
    PyObject *tmp_dict_value_144;
    PyObject *tmp_dict_value_145;
    PyObject *tmp_dict_value_146;
    PyObject *tmp_dict_value_147;
    PyObject *tmp_dict_value_148;
    PyObject *tmp_dict_value_149;
    PyObject *tmp_dict_value_150;
    PyObject *tmp_dict_value_151;
    PyObject *tmp_dict_value_152;
    PyObject *tmp_dict_value_153;
    PyObject *tmp_dict_value_154;
    PyObject *tmp_dict_value_155;
    PyObject *tmp_dict_value_156;
    PyObject *tmp_dict_value_157;
    PyObject *tmp_dict_value_158;
    PyObject *tmp_dict_value_159;
    PyObject *tmp_dict_value_160;
    PyObject *tmp_dict_value_161;
    PyObject *tmp_dict_value_162;
    PyObject *tmp_dict_value_163;
    PyObject *tmp_dict_value_164;
    PyObject *tmp_dict_value_165;
    PyObject *tmp_dict_value_166;
    PyObject *tmp_dict_value_167;
    PyObject *tmp_dict_value_168;
    PyObject *tmp_dict_value_169;
    PyObject *tmp_dict_value_170;
    PyObject *tmp_dict_value_171;
    PyObject *tmp_dict_value_172;
    PyObject *tmp_dict_value_173;
    PyObject *tmp_dict_value_174;
    PyObject *tmp_dict_value_175;
    PyObject *tmp_dict_value_176;
    PyObject *tmp_dict_value_177;
    PyObject *tmp_dict_value_178;
    PyObject *tmp_dict_value_179;
    PyObject *tmp_dict_value_180;
    PyObject *tmp_dict_value_181;
    PyObject *tmp_dict_value_182;
    PyObject *tmp_dict_value_183;
    PyObject *tmp_dict_value_184;
    PyObject *tmp_dict_value_185;
    PyObject *tmp_dict_value_186;
    PyObject *tmp_dict_value_187;
    PyObject *tmp_dict_value_188;
    PyObject *tmp_dict_value_189;
    PyObject *tmp_dict_value_190;
    PyObject *tmp_dict_value_191;
    PyObject *tmp_dict_value_192;
    PyObject *tmp_dict_value_193;
    PyObject *tmp_dict_value_194;
    PyObject *tmp_dict_value_195;
    PyObject *tmp_dict_value_196;
    PyObject *tmp_dict_value_197;
    PyObject *tmp_dict_value_198;
    PyObject *tmp_dict_value_199;
    PyObject *tmp_dict_value_200;
    PyObject *tmp_dict_value_201;
    PyObject *tmp_dict_value_202;
    PyObject *tmp_dict_value_203;
    PyObject *tmp_dict_value_204;
    PyObject *tmp_dict_value_205;
    PyObject *tmp_dict_value_206;
    PyObject *tmp_dict_value_207;
    PyObject *tmp_dict_value_208;
    PyObject *tmp_dict_value_209;
    PyObject *tmp_dict_value_210;
    PyObject *tmp_dict_value_211;
    PyObject *tmp_dict_value_212;
    PyObject *tmp_dict_value_213;
    PyObject *tmp_dict_value_214;
    PyObject *tmp_dict_value_215;
    PyObject *tmp_dict_value_216;
    PyObject *tmp_dict_value_217;
    PyObject *tmp_dict_value_218;
    PyObject *tmp_dict_value_219;
    PyObject *tmp_dict_value_220;
    PyObject *tmp_dict_value_221;
    PyObject *tmp_dict_value_222;
    PyObject *tmp_dict_value_223;
    PyObject *tmp_dict_value_224;
    PyObject *tmp_dict_value_225;
    PyObject *tmp_dict_value_226;
    PyObject *tmp_dict_value_227;
    PyObject *tmp_dict_value_228;
    PyObject *tmp_dict_value_229;
    PyObject *tmp_dict_value_230;
    PyObject *tmp_dict_value_231;
    PyObject *tmp_dict_value_232;
    PyObject *tmp_dict_value_233;
    PyObject *tmp_dict_value_234;
    PyObject *tmp_dict_value_235;
    PyObject *tmp_dict_value_236;
    PyObject *tmp_dict_value_237;
    PyObject *tmp_dict_value_238;
    PyObject *tmp_dict_value_239;
    PyObject *tmp_dict_value_240;
    PyObject *tmp_dict_value_241;
    PyObject *tmp_dict_value_242;
    PyObject *tmp_dict_value_243;
    PyObject *tmp_dict_value_244;
    PyObject *tmp_dict_value_245;
    PyObject *tmp_dict_value_246;
    PyObject *tmp_dict_value_247;
    PyObject *tmp_dict_value_248;
    PyObject *tmp_dict_value_249;
    PyObject *tmp_dict_value_250;
    PyObject *tmp_dict_value_251;
    PyObject *tmp_dict_value_252;
    PyObject *tmp_dict_value_253;
    PyObject *tmp_dict_value_254;
    PyObject *tmp_dict_value_255;
    PyObject *tmp_dict_value_256;
    PyObject *tmp_dict_value_257;
    PyObject *tmp_dict_value_258;
    PyObject *tmp_dict_value_259;
    PyObject *tmp_dict_value_260;
    PyObject *tmp_dict_value_261;
    PyObject *tmp_dict_value_262;
    PyObject *tmp_dict_value_263;
    PyObject *tmp_dict_value_264;
    PyObject *tmp_dict_value_265;
    PyObject *tmp_dict_value_266;
    PyObject *tmp_dict_value_267;
    PyObject *tmp_dict_value_268;
    PyObject *tmp_dict_value_269;
    PyObject *tmp_dict_value_270;
    PyObject *tmp_dict_value_271;
    PyObject *tmp_dict_value_272;
    PyObject *tmp_dict_value_273;
    PyObject *tmp_dict_value_274;
    PyObject *tmp_dict_value_275;
    PyObject *tmp_dict_value_276;
    PyObject *tmp_dict_value_277;
    PyObject *tmp_dict_value_278;
    PyObject *tmp_dict_value_279;
    PyObject *tmp_dict_value_280;
    PyObject *tmp_dict_value_281;
    PyObject *tmp_dict_value_282;
    PyObject *tmp_dict_value_283;
    PyObject *tmp_dict_value_284;
    PyObject *tmp_dict_value_285;
    PyObject *tmp_dict_value_286;
    PyObject *tmp_dict_value_287;
    PyObject *tmp_dict_value_288;
    PyObject *tmp_dict_value_289;
    PyObject *tmp_dict_value_290;
    PyObject *tmp_dict_value_291;
    PyObject *tmp_dict_value_292;
    PyObject *tmp_dict_value_293;
    PyObject *tmp_dict_value_294;
    PyObject *tmp_dict_value_295;
    PyObject *tmp_dict_value_296;
    PyObject *tmp_dict_value_297;
    PyObject *tmp_dict_value_298;
    PyObject *tmp_dict_value_299;
    PyObject *tmp_dict_value_300;
    PyObject *tmp_dict_value_301;
    PyObject *tmp_dict_value_302;
    PyObject *tmp_dict_value_303;
    PyObject *tmp_dict_value_304;
    PyObject *tmp_dict_value_305;
    PyObject *tmp_dict_value_306;
    PyObject *tmp_dict_value_307;
    PyObject *tmp_dict_value_308;
    PyObject *tmp_dict_value_309;
    PyObject *tmp_dict_value_310;
    PyObject *tmp_dict_value_311;
    PyObject *tmp_dict_value_312;
    PyObject *tmp_dict_value_313;
    PyObject *tmp_dict_value_314;
    PyObject *tmp_dict_value_315;
    PyObject *tmp_dict_value_316;
    PyObject *tmp_dict_value_317;
    PyObject *tmp_dict_value_318;
    PyObject *tmp_dict_value_319;
    PyObject *tmp_dict_value_320;
    PyObject *tmp_dict_value_321;
    PyObject *tmp_dict_value_322;
    PyObject *tmp_dict_value_323;
    PyObject *tmp_dict_value_324;
    PyObject *tmp_dict_value_325;
    PyObject *tmp_dict_value_326;
    PyObject *tmp_dict_value_327;
    PyObject *tmp_dict_value_328;
    PyObject *tmp_dict_value_329;
    PyObject *tmp_dict_value_330;
    PyObject *tmp_dict_value_331;
    PyObject *tmp_dict_value_332;
    PyObject *tmp_dict_value_333;
    PyObject *tmp_dict_value_334;
    PyObject *tmp_dict_value_335;
    PyObject *tmp_dict_value_336;
    PyObject *tmp_dict_value_337;
    PyObject *tmp_dict_value_338;
    PyObject *tmp_dict_value_339;
    PyObject *tmp_dict_value_340;
    PyObject *tmp_dict_value_341;
    PyObject *tmp_dict_value_342;
    PyObject *tmp_dict_value_343;
    PyObject *tmp_dict_value_344;
    PyObject *tmp_dict_value_345;
    PyObject *tmp_dict_value_346;
    PyObject *tmp_dict_value_347;
    PyObject *tmp_dict_value_348;
    PyObject *tmp_dict_value_349;
    PyObject *tmp_dict_value_350;
    PyObject *tmp_dict_value_351;
    PyObject *tmp_dict_value_352;
    PyObject *tmp_dict_value_353;
    PyObject *tmp_dict_value_354;
    PyObject *tmp_dict_value_355;
    PyObject *tmp_dict_value_356;
    PyObject *tmp_dict_value_357;
    PyObject *tmp_dict_value_358;
    PyObject *tmp_dict_value_359;
    PyObject *tmp_dict_value_360;
    PyObject *tmp_dict_value_361;
    PyObject *tmp_dict_value_362;
    PyObject *tmp_dict_value_363;
    PyObject *tmp_dict_value_364;
    PyObject *tmp_dict_value_365;
    PyObject *tmp_import_globals_1;
    PyObject *tmp_import_globals_2;
    PyObject *tmp_import_globals_3;
    PyObject *tmp_import_name_from_1;
    PyObject *tmp_import_name_from_2;
    PyObject *tmp_kw_name_1;
    PyObject *tmp_kw_name_2;
    PyObject *tmp_kw_name_3;
    PyObject *tmp_kw_name_4;
    PyObject *tmp_kw_name_5;
    PyObject *tmp_kw_name_6;
    PyObject *tmp_kw_name_7;
    PyObject *tmp_kw_name_8;
    PyObject *tmp_kw_name_9;
    PyObject *tmp_kw_name_10;
    PyObject *tmp_kw_name_11;
    PyObject *tmp_kw_name_12;
    PyObject *tmp_kw_name_13;
    PyObject *tmp_kw_name_14;
    PyObject *tmp_kw_name_15;
    PyObject *tmp_kw_name_16;
    PyObject *tmp_kw_name_17;
    PyObject *tmp_kw_name_18;
    PyObject *tmp_kw_name_19;
    PyObject *tmp_kw_name_20;
    PyObject *tmp_kw_name_21;
    PyObject *tmp_kw_name_22;
    PyObject *tmp_kw_name_23;
    PyObject *tmp_kw_name_24;
    PyObject *tmp_kw_name_25;
    PyObject *tmp_kw_name_26;
    PyObject *tmp_kw_name_27;
    PyObject *tmp_kw_name_28;
    PyObject *tmp_kw_name_29;
    PyObject *tmp_kw_name_30;
    PyObject *tmp_kw_name_31;
    PyObject *tmp_kw_name_32;
    PyObject *tmp_kw_name_33;
    PyObject *tmp_kw_name_34;
    PyObject *tmp_kw_name_35;
    PyObject *tmp_kw_name_36;
    PyObject *tmp_kw_name_37;
    PyObject *tmp_kw_name_38;
    PyObject *tmp_kw_name_39;
    PyObject *tmp_kw_name_40;
    PyObject *tmp_kw_name_41;
    PyObject *tmp_kw_name_42;
    PyObject *tmp_kw_name_43;
    PyObject *tmp_kw_name_44;
    PyObject *tmp_kw_name_45;
    PyObject *tmp_kw_name_46;
    PyObject *tmp_kw_name_47;
    PyObject *tmp_kw_name_48;
    PyObject *tmp_kw_name_49;
    PyObject *tmp_kw_name_50;
    PyObject *tmp_kw_name_51;
    PyObject *tmp_kw_name_52;
    PyObject *tmp_kw_name_53;
    PyObject *tmp_kw_name_54;
    PyObject *tmp_kw_name_55;
    PyObject *tmp_kw_name_56;
    PyObject *tmp_kw_name_57;
    PyObject *tmp_kw_name_58;
    PyObject *tmp_kw_name_59;
    PyObject *tmp_kw_name_60;
    PyObject *tmp_kw_name_61;
    PyObject *tmp_kw_name_62;
    PyObject *tmp_kw_name_63;
    PyObject *tmp_kw_name_64;
    PyObject *tmp_kw_name_65;
    PyObject *tmp_kw_name_66;
    PyObject *tmp_kw_name_67;
    PyObject *tmp_kw_name_68;
    PyObject *tmp_kw_name_69;
    PyObject *tmp_kw_name_70;
    PyObject *tmp_kw_name_71;
    PyObject *tmp_kw_name_72;
    PyObject *tmp_kw_name_73;
    PyObject *tmp_list_element_1;
    PyObject *tmp_list_element_2;
    PyObject *tmp_list_element_3;
    PyObject *tmp_list_element_4;
    PyObject *tmp_list_element_5;
    PyObject *tmp_list_element_6;
    PyObject *tmp_list_element_7;
    PyObject *tmp_list_element_8;
    PyObject *tmp_list_element_9;
    PyObject *tmp_list_element_10;
    PyObject *tmp_list_element_11;
    PyObject *tmp_list_element_12;
    PyObject *tmp_list_element_13;
    PyObject *tmp_list_element_14;
    PyObject *tmp_list_element_15;
    PyObject *tmp_list_element_16;
    PyObject *tmp_list_element_17;
    PyObject *tmp_list_element_18;
    PyObject *tmp_list_element_19;
    PyObject *tmp_list_element_20;
    PyObject *tmp_list_element_21;
    PyObject *tmp_list_element_22;
    PyObject *tmp_list_element_23;
    PyObject *tmp_list_element_24;
    PyObject *tmp_list_element_25;
    PyObject *tmp_list_element_26;
    PyObject *tmp_list_element_27;
    PyObject *tmp_list_element_28;
    PyObject *tmp_list_element_29;
    PyObject *tmp_list_element_30;
    PyObject *tmp_list_element_31;
    PyObject *tmp_list_element_32;
    PyObject *tmp_list_element_33;
    PyObject *tmp_list_element_34;
    PyObject *tmp_list_element_35;
    PyObject *tmp_list_element_36;
    PyObject *tmp_list_element_37;
    PyObject *tmp_list_element_38;
    PyObject *tmp_list_element_39;
    PyObject *tmp_list_element_40;
    PyObject *tmp_list_element_41;
    PyObject *tmp_list_element_42;
    PyObject *tmp_list_element_43;
    PyObject *tmp_list_element_44;
    PyObject *tmp_list_element_45;
    PyObject *tmp_list_element_46;
    PyObject *tmp_list_element_47;
    PyObject *tmp_list_element_48;
    PyObject *tmp_list_element_49;
    PyObject *tmp_list_element_50;
    PyObject *tmp_list_element_51;
    PyObject *tmp_list_element_52;
    PyObject *tmp_list_element_53;
    PyObject *tmp_list_element_54;
    PyObject *tmp_list_element_55;
    PyObject *tmp_list_element_56;
    PyObject *tmp_list_element_57;
    PyObject *tmp_list_element_58;
    PyObject *tmp_list_element_59;
    PyObject *tmp_list_element_60;
    PyObject *tmp_list_element_61;
    PyObject *tmp_list_element_62;
    PyObject *tmp_list_element_63;
    PyObject *tmp_list_element_64;
    PyObject *tmp_list_element_65;
    bool tmp_result;
    PyObject *tmp_source_name_1;
    PyObject *tmp_source_name_2;
    PyObject *tmp_source_name_3;
    PyObject *tmp_source_name_4;
    PyObject *tmp_source_name_5;
    PyObject *tmp_source_name_6;
    PyObject *tmp_source_name_7;
    PyObject *tmp_source_name_8;
    PyObject *tmp_source_name_9;
    PyObject *tmp_source_name_10;
    PyObject *tmp_source_name_11;
    PyObject *tmp_source_name_12;
    PyObject *tmp_source_name_13;
    PyObject *tmp_source_name_14;
    PyObject *tmp_source_name_15;
    PyObject *tmp_source_name_16;
    PyObject *tmp_source_name_17;
    PyObject *tmp_source_name_18;
    PyObject *tmp_source_name_19;
    PyObject *tmp_source_name_20;
    PyObject *tmp_source_name_21;
    PyObject *tmp_source_name_22;
    PyObject *tmp_source_name_23;
    PyObject *tmp_source_name_24;
    PyObject *tmp_source_name_25;
    PyObject *tmp_source_name_26;
    PyObject *tmp_source_name_27;
    PyObject *tmp_source_name_28;
    PyObject *tmp_source_name_29;
    PyObject *tmp_source_name_30;
    PyObject *tmp_source_name_31;
    PyObject *tmp_source_name_32;
    PyObject *tmp_source_name_33;
    PyObject *tmp_source_name_34;
    PyObject *tmp_source_name_35;
    PyObject *tmp_source_name_36;
    PyObject *tmp_source_name_37;
    PyObject *tmp_source_name_38;
    PyObject *tmp_source_name_39;
    PyObject *tmp_source_name_40;
    PyObject *tmp_source_name_41;
    PyObject *tmp_source_name_42;
    PyObject *tmp_source_name_43;
    PyObject *tmp_source_name_44;
    PyObject *tmp_source_name_45;
    PyObject *tmp_source_name_46;
    PyObject *tmp_source_name_47;
    PyObject *tmp_source_name_48;
    PyObject *tmp_source_name_49;
    PyObject *tmp_source_name_50;
    PyObject *tmp_source_name_51;
    PyObject *tmp_source_name_52;
    PyObject *tmp_source_name_53;
    PyObject *tmp_source_name_54;
    PyObject *tmp_source_name_55;
    PyObject *tmp_source_name_56;
    PyObject *tmp_source_name_57;
    PyObject *tmp_source_name_58;
    PyObject *tmp_source_name_59;
    PyObject *tmp_source_name_60;
    PyObject *tmp_source_name_61;
    PyObject *tmp_source_name_62;
    PyObject *tmp_source_name_63;
    PyObject *tmp_source_name_64;
    PyObject *tmp_source_name_65;
    PyObject *tmp_source_name_66;
    PyObject *tmp_source_name_67;
    PyObject *tmp_source_name_68;
    PyObject *tmp_source_name_69;
    PyObject *tmp_source_name_70;
    PyObject *tmp_source_name_71;
    PyObject *tmp_source_name_72;
    PyObject *tmp_source_name_73;
    PyObject *tmp_source_name_74;
    PyObject *tmp_source_name_75;
    PyObject *tmp_source_name_76;
    PyObject *tmp_source_name_77;
    PyObject *tmp_source_name_78;
    PyObject *tmp_source_name_79;
    PyObject *tmp_source_name_80;
    PyObject *tmp_source_name_81;
    PyObject *tmp_source_name_82;
    PyObject *tmp_source_name_83;
    PyObject *tmp_source_name_84;
    PyObject *tmp_source_name_85;
    PyObject *tmp_source_name_86;
    PyObject *tmp_source_name_87;
    PyObject *tmp_source_name_88;
    PyObject *tmp_source_name_89;
    PyObject *tmp_source_name_90;
    PyObject *tmp_source_name_91;
    PyObject *tmp_source_name_92;
    PyObject *tmp_source_name_93;
    PyObject *tmp_source_name_94;
    PyObject *tmp_source_name_95;
    PyObject *tmp_source_name_96;
    PyObject *tmp_source_name_97;
    PyObject *tmp_source_name_98;
    PyObject *tmp_source_name_99;
    PyObject *tmp_source_name_100;
    PyObject *tmp_source_name_101;
    PyObject *tmp_source_name_102;
    PyObject *tmp_source_name_103;
    PyObject *tmp_source_name_104;
    PyObject *tmp_source_name_105;
    PyObject *tmp_source_name_106;
    PyObject *tmp_source_name_107;
    PyObject *tmp_source_name_108;
    PyObject *tmp_source_name_109;
    PyObject *tmp_source_name_110;
    PyObject *tmp_source_name_111;
    PyObject *tmp_source_name_112;
    PyObject *tmp_source_name_113;
    PyObject *tmp_source_name_114;
    PyObject *tmp_source_name_115;
    PyObject *tmp_source_name_116;
    PyObject *tmp_source_name_117;
    PyObject *tmp_source_name_118;
    PyObject *tmp_source_name_119;
    PyObject *tmp_source_name_120;
    PyObject *tmp_source_name_121;
    PyObject *tmp_source_name_122;
    PyObject *tmp_source_name_123;
    PyObject *tmp_source_name_124;
    PyObject *tmp_source_name_125;
    PyObject *tmp_source_name_126;
    PyObject *tmp_source_name_127;
    PyObject *tmp_source_name_128;
    PyObject *tmp_source_name_129;
    PyObject *tmp_source_name_130;
    PyObject *tmp_source_name_131;
    PyObject *tmp_source_name_132;
    PyObject *tmp_source_name_133;
    PyObject *tmp_source_name_134;
    PyObject *tmp_source_name_135;
    PyObject *tmp_source_name_136;
    PyObject *tmp_source_name_137;
    PyObject *tmp_source_name_138;
    PyObject *tmp_source_name_139;
    PyObject *tmp_source_name_140;
    PyObject *tmp_source_name_141;
    PyObject *tmp_source_name_142;
    PyObject *tmp_source_name_143;
    PyObject *tmp_source_name_144;
    PyObject *tmp_source_name_145;
    PyObject *tmp_source_name_146;
    PyObject *tmp_source_name_147;
    PyObject *tmp_source_name_148;
    PyObject *tmp_source_name_149;
    PyObject *tmp_source_name_150;
    PyObject *tmp_source_name_151;
    PyObject *tmp_source_name_152;
    PyObject *tmp_source_name_153;
    PyObject *tmp_source_name_154;
    PyObject *tmp_source_name_155;
    PyObject *tmp_source_name_156;
    PyObject *tmp_source_name_157;
    PyObject *tmp_source_name_158;
    PyObject *tmp_source_name_159;
    PyObject *tmp_source_name_160;
    PyObject *tmp_source_name_161;
    PyObject *tmp_source_name_162;
    PyObject *tmp_source_name_163;
    PyObject *tmp_source_name_164;
    PyObject *tmp_source_name_165;
    PyObject *tmp_source_name_166;
    PyObject *tmp_source_name_167;
    PyObject *tmp_source_name_168;
    PyObject *tmp_source_name_169;
    PyObject *tmp_source_name_170;
    PyObject *tmp_source_name_171;
    PyObject *tmp_source_name_172;
    PyObject *tmp_source_name_173;
    PyObject *tmp_source_name_174;
    PyObject *tmp_source_name_175;
    PyObject *tmp_source_name_176;
    PyObject *tmp_source_name_177;
    PyObject *tmp_source_name_178;
    PyObject *tmp_source_name_179;
    PyObject *tmp_source_name_180;
    PyObject *tmp_source_name_181;
    PyObject *tmp_source_name_182;
    PyObject *tmp_source_name_183;
    PyObject *tmp_source_name_184;
    PyObject *tmp_source_name_185;
    PyObject *tmp_source_name_186;
    PyObject *tmp_source_name_187;
    PyObject *tmp_source_name_188;
    PyObject *tmp_source_name_189;
    PyObject *tmp_source_name_190;
    PyObject *tmp_source_name_191;
    PyObject *tmp_source_name_192;
    PyObject *tmp_source_name_193;
    PyObject *tmp_source_name_194;
    PyObject *tmp_source_name_195;
    PyObject *tmp_source_name_196;
    PyObject *tmp_source_name_197;
    PyObject *tmp_source_name_198;
    PyObject *tmp_source_name_199;
    PyObject *tmp_source_name_200;
    PyObject *tmp_source_name_201;
    PyObject *tmp_source_name_202;
    PyObject *tmp_source_name_203;
    PyObject *tmp_source_name_204;
    PyObject *tmp_source_name_205;
    PyObject *tmp_source_name_206;
    PyObject *tmp_source_name_207;
    PyObject *tmp_source_name_208;
    PyObject *tmp_source_name_209;
    PyObject *tmp_source_name_210;
    PyObject *tmp_source_name_211;
    PyObject *tmp_source_name_212;
    PyObject *tmp_source_name_213;
    PyObject *tmp_source_name_214;
    PyObject *tmp_source_name_215;
    PyObject *tmp_source_name_216;
    PyObject *tmp_source_name_217;
    PyObject *tmp_source_name_218;
    PyObject *tmp_source_name_219;
    PyObject *tmp_source_name_220;
    PyObject *tmp_source_name_221;
    PyObject *tmp_source_name_222;
    PyObject *tmp_source_name_223;
    PyObject *tmp_source_name_224;
    PyObject *tmp_source_name_225;
    PyObject *tmp_source_name_226;
    PyObject *tmp_source_name_227;
    PyObject *tmp_source_name_228;
    PyObject *tmp_source_name_229;
    PyObject *tmp_source_name_230;
    PyObject *tmp_source_name_231;
    PyObject *tmp_source_name_232;
    PyObject *tmp_source_name_233;
    PyObject *tmp_source_name_234;
    PyObject *tmp_source_name_235;
    PyObject *tmp_source_name_236;
    PyObject *tmp_source_name_237;
    PyObject *tmp_source_name_238;
    PyObject *tmp_source_name_239;
    PyObject *tmp_source_name_240;
    PyObject *tmp_source_name_241;
    PyObject *tmp_source_name_242;
    PyObject *tmp_source_name_243;
    PyObject *tmp_source_name_244;
    PyObject *tmp_source_name_245;
    PyObject *tmp_source_name_246;
    PyObject *tmp_source_name_247;
    PyObject *tmp_source_name_248;
    PyObject *tmp_source_name_249;
    PyObject *tmp_source_name_250;
    PyObject *tmp_source_name_251;
    PyObject *tmp_source_name_252;
    PyObject *tmp_source_name_253;
    PyObject *tmp_source_name_254;
    PyObject *tmp_source_name_255;
    PyObject *tmp_source_name_256;
    PyObject *tmp_source_name_257;
    PyObject *tmp_source_name_258;
    PyObject *tmp_source_name_259;
    PyObject *tmp_source_name_260;
    PyObject *tmp_source_name_261;
    PyObject *tmp_source_name_262;
    PyObject *tmp_source_name_263;
    PyObject *tmp_source_name_264;
    PyObject *tmp_source_name_265;
    PyObject *tmp_source_name_266;
    PyObject *tmp_source_name_267;
    PyObject *tmp_source_name_268;
    PyObject *tmp_source_name_269;
    PyObject *tmp_source_name_270;
    PyObject *tmp_source_name_271;
    PyObject *tmp_source_name_272;
    PyObject *tmp_source_name_273;
    PyObject *tmp_source_name_274;
    PyObject *tmp_source_name_275;
    PyObject *tmp_source_name_276;
    PyObject *tmp_source_name_277;
    PyObject *tmp_source_name_278;
    PyObject *tmp_source_name_279;
    PyObject *tmp_source_name_280;
    PyObject *tmp_source_name_281;
    PyObject *tmp_source_name_282;
    PyObject *tmp_source_name_283;
    PyObject *tmp_source_name_284;
    PyObject *tmp_source_name_285;
    PyObject *tmp_source_name_286;
    PyObject *tmp_source_name_287;
    PyObject *tmp_source_name_288;
    PyObject *tmp_source_name_289;
    PyObject *tmp_source_name_290;
    PyObject *tmp_source_name_291;
    PyObject *tmp_source_name_292;
    PyObject *tmp_source_name_293;
    PyObject *tmp_source_name_294;
    PyObject *tmp_source_name_295;
    PyObject *tmp_source_name_296;
    PyObject *tmp_source_name_297;
    PyObject *tmp_source_name_298;
    PyObject *tmp_source_name_299;
    PyObject *tmp_source_name_300;
    PyObject *tmp_source_name_301;
    PyObject *tmp_source_name_302;
    PyObject *tmp_source_name_303;
    PyObject *tmp_source_name_304;
    PyObject *tmp_source_name_305;
    PyObject *tmp_source_name_306;
    PyObject *tmp_source_name_307;
    PyObject *tmp_source_name_308;
    PyObject *tmp_source_name_309;
    PyObject *tmp_source_name_310;
    PyObject *tmp_source_name_311;
    PyObject *tmp_source_name_312;
    PyObject *tmp_source_name_313;
    PyObject *tmp_source_name_314;
    PyObject *tmp_source_name_315;
    PyObject *tmp_source_name_316;
    PyObject *tmp_source_name_317;
    PyObject *tmp_source_name_318;
    PyObject *tmp_source_name_319;
    PyObject *tmp_source_name_320;
    PyObject *tmp_source_name_321;
    PyObject *tmp_source_name_322;
    PyObject *tmp_source_name_323;
    PyObject *tmp_source_name_324;
    PyObject *tmp_source_name_325;
    PyObject *tmp_source_name_326;
    PyObject *tmp_source_name_327;
    PyObject *tmp_source_name_328;
    PyObject *tmp_source_name_329;
    PyObject *tmp_source_name_330;
    PyObject *tmp_source_name_331;
    PyObject *tmp_source_name_332;
    PyObject *tmp_source_name_333;
    PyObject *tmp_source_name_334;
    PyObject *tmp_source_name_335;
    PyObject *tmp_source_name_336;
    PyObject *tmp_source_name_337;
    PyObject *tmp_source_name_338;
    PyObject *tmp_source_name_339;
    PyObject *tmp_source_name_340;
    PyObject *tmp_source_name_341;
    PyObject *tmp_source_name_342;
    PyObject *tmp_source_name_343;
    PyObject *tmp_source_name_344;
    PyObject *tmp_source_name_345;
    PyObject *tmp_source_name_346;
    PyObject *tmp_source_name_347;
    PyObject *tmp_source_name_348;
    PyObject *tmp_source_name_349;
    PyObject *tmp_source_name_350;
    PyObject *tmp_source_name_351;
    PyObject *tmp_source_name_352;
    PyObject *tmp_source_name_353;
    PyObject *tmp_source_name_354;
    PyObject *tmp_source_name_355;
    PyObject *tmp_source_name_356;
    PyObject *tmp_source_name_357;
    PyObject *tmp_source_name_358;
    PyObject *tmp_source_name_359;
    PyObject *tmp_source_name_360;
    PyObject *tmp_source_name_361;
    PyObject *tmp_source_name_362;
    PyObject *tmp_source_name_363;
    PyObject *tmp_source_name_364;
    PyObject *tmp_source_name_365;
    PyObject *tmp_source_name_366;
    PyObject *tmp_source_name_367;
    PyObject *tmp_source_name_368;
    PyObject *tmp_source_name_369;
    PyObject *tmp_star_imported_1;
    PyFrameObject *frame_module;


    // Module code.
    tmp_assign_source_1 = Py_None;
    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain___doc__, tmp_assign_source_1 );
    tmp_assign_source_2 = const_str_digest_25a1e35ae2bbba7e6fcf795ae9c7fe60;
    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain___file__, tmp_assign_source_2 );
    // Frame without reuse.
    frame_module = MAKE_MODULE_FRAME( codeobj_1076240570b1a61adfabceddbf35020f, module_OpenGL$raw$_WGL_ARB );

    // Push the new frame as the currently active one, and we should be exclusively
    // owning it.
    pushFrameStack( frame_module );
    assert( Py_REFCNT( frame_module ) == 1 );

#if PYTHON_VERSION >= 340
    frame_module->f_executing += 1;
#endif

    // Framed code:
    tmp_import_globals_1 = ((PyModuleObject *)module_OpenGL$raw$_WGL_ARB)->md_dict;
    frame_module->f_lineno = 5;
    tmp_import_name_from_1 = IMPORT_MODULE( const_str_plain_OpenGL, tmp_import_globals_1, tmp_import_globals_1, const_tuple_str_plain_platform_str_plain_constant_tuple, const_int_neg_1 );
    if ( tmp_import_name_from_1 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 5;
        goto frame_exception_exit_1;
    }
    tmp_assign_source_3 = IMPORT_NAME( tmp_import_name_from_1, const_str_plain_platform );
    Py_DECREF( tmp_import_name_from_1 );
    if ( tmp_assign_source_3 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 5;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform, tmp_assign_source_3 );
    tmp_import_globals_2 = ((PyModuleObject *)module_OpenGL$raw$_WGL_ARB)->md_dict;
    frame_module->f_lineno = 5;
    tmp_import_name_from_2 = IMPORT_MODULE( const_str_plain_OpenGL, tmp_import_globals_2, tmp_import_globals_2, const_tuple_str_plain_platform_str_plain_constant_tuple, const_int_neg_1 );
    if ( tmp_import_name_from_2 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 5;
        goto frame_exception_exit_1;
    }
    tmp_assign_source_4 = IMPORT_NAME( tmp_import_name_from_2, const_str_plain_constant );
    Py_DECREF( tmp_import_name_from_2 );
    if ( tmp_assign_source_4 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 5;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant, tmp_assign_source_4 );
    tmp_import_globals_3 = ((PyModuleObject *)module_OpenGL$raw$_WGL_ARB)->md_dict;
    frame_module->f_lineno = 6;
    tmp_star_imported_1 = IMPORT_MODULE( const_str_plain_ctypes, tmp_import_globals_3, tmp_import_globals_3, const_tuple_str_chr_42_tuple, const_int_neg_1 );
    if ( tmp_star_imported_1 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 6;
        goto frame_exception_exit_1;
    }
    tmp_result = IMPORT_MODULE_STAR( module_OpenGL$raw$_WGL_ARB, true, tmp_star_imported_1 );
    Py_DECREF( tmp_star_imported_1 );
    if ( tmp_result == false )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 6;
        goto frame_exception_exit_1;
    }
    tmp_assign_source_5 = Py_None;
    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_void, tmp_assign_source_5 );
    tmp_source_name_1 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_1 == NULL ))
    {
        tmp_source_name_1 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_1 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 12;
        goto frame_exception_exit_1;
    }

    tmp_called_name_1 = LOOKUP_ATTRIBUTE( tmp_source_name_1, const_str_plain_Constant );
    if ( tmp_called_name_1 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 12;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 12;
    tmp_assign_source_6 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_1, &PyTuple_GET_ITEM( const_tuple_str_plain_GLAPI_int_0_tuple, 0 ) );

    Py_DECREF( tmp_called_name_1 );
    if ( tmp_assign_source_6 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 12;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLAPI, tmp_assign_source_6 );
    tmp_source_name_2 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_2 == NULL ))
    {
        tmp_source_name_2 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_2 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 13;
        goto frame_exception_exit_1;
    }

    tmp_called_name_2 = LOOKUP_ATTRIBUTE( tmp_source_name_2, const_str_plain_Constant );
    if ( tmp_called_name_2 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 13;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 13;
    tmp_assign_source_7 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_2, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_WGLEXT_VERSION_int_pos_6_tuple, 0 ) );

    Py_DECREF( tmp_called_name_2 );
    if ( tmp_assign_source_7 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 13;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_WGLEXT_VERSION, tmp_assign_source_7 );
    tmp_source_name_3 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_3 == NULL ))
    {
        tmp_source_name_3 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_3 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 15;
        goto frame_exception_exit_1;
    }

    tmp_called_name_3 = LOOKUP_ATTRIBUTE( tmp_source_name_3, const_str_plain_Constant );
    if ( tmp_called_name_3 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 15;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 15;
    tmp_assign_source_8 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_3, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_FRONT_COLOR_BUFFER_BIT_ARB_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_3 );
    if ( tmp_assign_source_8 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 15;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_FRONT_COLOR_BUFFER_BIT_ARB, tmp_assign_source_8 );
    tmp_source_name_4 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_4 == NULL ))
    {
        tmp_source_name_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_4 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 16;
        goto frame_exception_exit_1;
    }

    tmp_called_name_4 = LOOKUP_ATTRIBUTE( tmp_source_name_4, const_str_plain_Constant );
    if ( tmp_called_name_4 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 16;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 16;
    tmp_assign_source_9 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_4, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BACK_COLOR_BUFFER_BIT_ARB_int_pos_2_tuple, 0 ) );

    Py_DECREF( tmp_called_name_4 );
    if ( tmp_assign_source_9 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 16;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BACK_COLOR_BUFFER_BIT_ARB, tmp_assign_source_9 );
    tmp_source_name_5 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_5 == NULL ))
    {
        tmp_source_name_5 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_5 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 17;
        goto frame_exception_exit_1;
    }

    tmp_called_name_5 = LOOKUP_ATTRIBUTE( tmp_source_name_5, const_str_plain_Constant );
    if ( tmp_called_name_5 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 17;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 17;
    tmp_assign_source_10 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_5, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DEPTH_BUFFER_BIT_ARB_int_pos_4_tuple, 0 ) );

    Py_DECREF( tmp_called_name_5 );
    if ( tmp_assign_source_10 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 17;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DEPTH_BUFFER_BIT_ARB, tmp_assign_source_10 );
    tmp_source_name_6 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_6 == NULL ))
    {
        tmp_source_name_6 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_6 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 18;
        goto frame_exception_exit_1;
    }

    tmp_called_name_6 = LOOKUP_ATTRIBUTE( tmp_source_name_6, const_str_plain_Constant );
    if ( tmp_called_name_6 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 18;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 18;
    tmp_assign_source_11 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_6, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_STENCIL_BUFFER_BIT_ARB_int_pos_8_tuple, 0 ) );

    Py_DECREF( tmp_called_name_6 );
    if ( tmp_assign_source_11 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 18;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_STENCIL_BUFFER_BIT_ARB, tmp_assign_source_11 );
    tmp_source_name_7 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_7 == NULL ))
    {
        tmp_source_name_7 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_7 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 20;
        goto frame_exception_exit_1;
    }

    tmp_called_name_7 = LOOKUP_ATTRIBUTE( tmp_source_name_7, const_str_plain_Constant );
    if ( tmp_called_name_7 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 20;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 20;
    tmp_assign_source_12 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_7, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SAMPLE_BUFFERS_ARB_int_pos_8257_tuple, 0 ) );

    Py_DECREF( tmp_called_name_7 );
    if ( tmp_assign_source_12 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 20;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SAMPLE_BUFFERS_ARB, tmp_assign_source_12 );
    tmp_source_name_8 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_8 == NULL ))
    {
        tmp_source_name_8 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_8 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 21;
        goto frame_exception_exit_1;
    }

    tmp_called_name_8 = LOOKUP_ATTRIBUTE( tmp_source_name_8, const_str_plain_Constant );
    if ( tmp_called_name_8 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 21;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 21;
    tmp_assign_source_13 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_8, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SAMPLES_ARB_int_pos_8258_tuple, 0 ) );

    Py_DECREF( tmp_called_name_8 );
    if ( tmp_assign_source_13 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 21;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SAMPLES_ARB, tmp_assign_source_13 );
    tmp_source_name_9 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_9 == NULL ))
    {
        tmp_source_name_9 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_9 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 24;
        goto frame_exception_exit_1;
    }

    tmp_called_name_9 = LOOKUP_ATTRIBUTE( tmp_source_name_9, const_str_plain_Constant );
    if ( tmp_called_name_9 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 24;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 24;
    tmp_assign_source_14 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_9, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NUMBER_PIXEL_FORMATS_ARB_int_pos_8192_tuple, 0 ) );

    Py_DECREF( tmp_called_name_9 );
    if ( tmp_assign_source_14 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 24;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NUMBER_PIXEL_FORMATS_ARB, tmp_assign_source_14 );
    tmp_source_name_10 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_10 == NULL ))
    {
        tmp_source_name_10 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_10 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 25;
        goto frame_exception_exit_1;
    }

    tmp_called_name_10 = LOOKUP_ATTRIBUTE( tmp_source_name_10, const_str_plain_Constant );
    if ( tmp_called_name_10 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 25;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 25;
    tmp_assign_source_15 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_10, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DRAW_TO_WINDOW_ARB_int_pos_8193_tuple, 0 ) );

    Py_DECREF( tmp_called_name_10 );
    if ( tmp_assign_source_15 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 25;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DRAW_TO_WINDOW_ARB, tmp_assign_source_15 );
    tmp_source_name_11 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_11 == NULL ))
    {
        tmp_source_name_11 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_11 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 26;
        goto frame_exception_exit_1;
    }

    tmp_called_name_11 = LOOKUP_ATTRIBUTE( tmp_source_name_11, const_str_plain_Constant );
    if ( tmp_called_name_11 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 26;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 26;
    tmp_assign_source_16 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_11, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DRAW_TO_BITMAP_ARB_int_pos_8194_tuple, 0 ) );

    Py_DECREF( tmp_called_name_11 );
    if ( tmp_assign_source_16 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 26;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DRAW_TO_BITMAP_ARB, tmp_assign_source_16 );
    tmp_source_name_12 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_12 == NULL ))
    {
        tmp_source_name_12 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_12 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 27;
        goto frame_exception_exit_1;
    }

    tmp_called_name_12 = LOOKUP_ATTRIBUTE( tmp_source_name_12, const_str_plain_Constant );
    if ( tmp_called_name_12 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 27;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 27;
    tmp_assign_source_17 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_12, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCELERATION_ARB_int_pos_8195_tuple, 0 ) );

    Py_DECREF( tmp_called_name_12 );
    if ( tmp_assign_source_17 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 27;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCELERATION_ARB, tmp_assign_source_17 );
    tmp_source_name_13 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_13 == NULL ))
    {
        tmp_source_name_13 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_13 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 28;
        goto frame_exception_exit_1;
    }

    tmp_called_name_13 = LOOKUP_ATTRIBUTE( tmp_source_name_13, const_str_plain_Constant );
    if ( tmp_called_name_13 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 28;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 28;
    tmp_assign_source_18 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_13, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NEED_PALETTE_ARB_int_pos_8196_tuple, 0 ) );

    Py_DECREF( tmp_called_name_13 );
    if ( tmp_assign_source_18 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 28;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NEED_PALETTE_ARB, tmp_assign_source_18 );
    tmp_source_name_14 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_14 == NULL ))
    {
        tmp_source_name_14 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_14 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 29;
        goto frame_exception_exit_1;
    }

    tmp_called_name_14 = LOOKUP_ATTRIBUTE( tmp_source_name_14, const_str_plain_Constant );
    if ( tmp_called_name_14 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 29;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 29;
    tmp_assign_source_19 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_14, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NEED_SYSTEM_PALETTE_ARB_int_pos_8197_tuple, 0 ) );

    Py_DECREF( tmp_called_name_14 );
    if ( tmp_assign_source_19 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 29;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NEED_SYSTEM_PALETTE_ARB, tmp_assign_source_19 );
    tmp_source_name_15 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_15 == NULL ))
    {
        tmp_source_name_15 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_15 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 30;
        goto frame_exception_exit_1;
    }

    tmp_called_name_15 = LOOKUP_ATTRIBUTE( tmp_source_name_15, const_str_plain_Constant );
    if ( tmp_called_name_15 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 30;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 30;
    tmp_assign_source_20 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_15, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_LAYER_BUFFERS_ARB_int_pos_8198_tuple, 0 ) );

    Py_DECREF( tmp_called_name_15 );
    if ( tmp_assign_source_20 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 30;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_LAYER_BUFFERS_ARB, tmp_assign_source_20 );
    tmp_source_name_16 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_16 == NULL ))
    {
        tmp_source_name_16 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_16 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 31;
        goto frame_exception_exit_1;
    }

    tmp_called_name_16 = LOOKUP_ATTRIBUTE( tmp_source_name_16, const_str_plain_Constant );
    if ( tmp_called_name_16 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 31;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 31;
    tmp_assign_source_21 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_16, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_METHOD_ARB_int_pos_8199_tuple, 0 ) );

    Py_DECREF( tmp_called_name_16 );
    if ( tmp_assign_source_21 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 31;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_METHOD_ARB, tmp_assign_source_21 );
    tmp_source_name_17 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_17 == NULL ))
    {
        tmp_source_name_17 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_17 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 32;
        goto frame_exception_exit_1;
    }

    tmp_called_name_17 = LOOKUP_ATTRIBUTE( tmp_source_name_17, const_str_plain_Constant );
    if ( tmp_called_name_17 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 32;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 32;
    tmp_assign_source_22 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_17, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NUMBER_OVERLAYS_ARB_int_pos_8200_tuple, 0 ) );

    Py_DECREF( tmp_called_name_17 );
    if ( tmp_assign_source_22 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 32;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NUMBER_OVERLAYS_ARB, tmp_assign_source_22 );
    tmp_source_name_18 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_18 == NULL ))
    {
        tmp_source_name_18 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_18 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 33;
        goto frame_exception_exit_1;
    }

    tmp_called_name_18 = LOOKUP_ATTRIBUTE( tmp_source_name_18, const_str_plain_Constant );
    if ( tmp_called_name_18 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 33;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 33;
    tmp_assign_source_23 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_18, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NUMBER_UNDERLAYS_ARB_int_pos_8201_tuple, 0 ) );

    Py_DECREF( tmp_called_name_18 );
    if ( tmp_assign_source_23 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 33;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NUMBER_UNDERLAYS_ARB, tmp_assign_source_23 );
    tmp_source_name_19 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_19 == NULL ))
    {
        tmp_source_name_19 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_19 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 34;
        goto frame_exception_exit_1;
    }

    tmp_called_name_19 = LOOKUP_ATTRIBUTE( tmp_source_name_19, const_str_plain_Constant );
    if ( tmp_called_name_19 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 34;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 34;
    tmp_assign_source_24 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_19, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TRANSPARENT_ARB_int_pos_8202_tuple, 0 ) );

    Py_DECREF( tmp_called_name_19 );
    if ( tmp_assign_source_24 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 34;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TRANSPARENT_ARB, tmp_assign_source_24 );
    tmp_source_name_20 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_20 == NULL ))
    {
        tmp_source_name_20 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_20 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 35;
        goto frame_exception_exit_1;
    }

    tmp_called_name_20 = LOOKUP_ATTRIBUTE( tmp_source_name_20, const_str_plain_Constant );
    if ( tmp_called_name_20 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 35;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 35;
    tmp_assign_source_25 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_20, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TRANSPARENT_RED_VALUE_ARB_int_pos_8247_tuple, 0 ) );

    Py_DECREF( tmp_called_name_20 );
    if ( tmp_assign_source_25 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 35;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TRANSPARENT_RED_VALUE_ARB, tmp_assign_source_25 );
    tmp_source_name_21 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_21 == NULL ))
    {
        tmp_source_name_21 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_21 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 36;
        goto frame_exception_exit_1;
    }

    tmp_called_name_21 = LOOKUP_ATTRIBUTE( tmp_source_name_21, const_str_plain_Constant );
    if ( tmp_called_name_21 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 36;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 36;
    tmp_assign_source_26 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_21, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TRANSPARENT_GREEN_VALUE_ARB_int_pos_8248_tuple, 0 ) );

    Py_DECREF( tmp_called_name_21 );
    if ( tmp_assign_source_26 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 36;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TRANSPARENT_GREEN_VALUE_ARB, tmp_assign_source_26 );
    tmp_source_name_22 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_22 == NULL ))
    {
        tmp_source_name_22 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_22 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 37;
        goto frame_exception_exit_1;
    }

    tmp_called_name_22 = LOOKUP_ATTRIBUTE( tmp_source_name_22, const_str_plain_Constant );
    if ( tmp_called_name_22 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 37;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 37;
    tmp_assign_source_27 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_22, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TRANSPARENT_BLUE_VALUE_ARB_int_pos_8249_tuple, 0 ) );

    Py_DECREF( tmp_called_name_22 );
    if ( tmp_assign_source_27 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 37;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TRANSPARENT_BLUE_VALUE_ARB, tmp_assign_source_27 );
    tmp_source_name_23 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_23 == NULL ))
    {
        tmp_source_name_23 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_23 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 38;
        goto frame_exception_exit_1;
    }

    tmp_called_name_23 = LOOKUP_ATTRIBUTE( tmp_source_name_23, const_str_plain_Constant );
    if ( tmp_called_name_23 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 38;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 38;
    tmp_assign_source_28 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_23, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TRANSPARENT_ALPHA_VALUE_ARB_int_pos_8250_tuple, 0 ) );

    Py_DECREF( tmp_called_name_23 );
    if ( tmp_assign_source_28 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 38;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TRANSPARENT_ALPHA_VALUE_ARB, tmp_assign_source_28 );
    tmp_source_name_24 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_24 == NULL ))
    {
        tmp_source_name_24 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_24 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 39;
        goto frame_exception_exit_1;
    }

    tmp_called_name_24 = LOOKUP_ATTRIBUTE( tmp_source_name_24, const_str_plain_Constant );
    if ( tmp_called_name_24 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 39;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 39;
    tmp_assign_source_29 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_24, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TRANSPARENT_INDEX_VALUE_ARB_int_pos_8251_tuple, 0 ) );

    Py_DECREF( tmp_called_name_24 );
    if ( tmp_assign_source_29 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 39;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TRANSPARENT_INDEX_VALUE_ARB, tmp_assign_source_29 );
    tmp_source_name_25 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_25 == NULL ))
    {
        tmp_source_name_25 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_25 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 40;
        goto frame_exception_exit_1;
    }

    tmp_called_name_25 = LOOKUP_ATTRIBUTE( tmp_source_name_25, const_str_plain_Constant );
    if ( tmp_called_name_25 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 40;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 40;
    tmp_assign_source_30 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_25, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SHARE_DEPTH_ARB_int_pos_8204_tuple, 0 ) );

    Py_DECREF( tmp_called_name_25 );
    if ( tmp_assign_source_30 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 40;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SHARE_DEPTH_ARB, tmp_assign_source_30 );
    tmp_source_name_26 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_26 == NULL ))
    {
        tmp_source_name_26 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_26 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 41;
        goto frame_exception_exit_1;
    }

    tmp_called_name_26 = LOOKUP_ATTRIBUTE( tmp_source_name_26, const_str_plain_Constant );
    if ( tmp_called_name_26 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 41;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 41;
    tmp_assign_source_31 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_26, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SHARE_STENCIL_ARB_int_pos_8205_tuple, 0 ) );

    Py_DECREF( tmp_called_name_26 );
    if ( tmp_assign_source_31 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 41;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SHARE_STENCIL_ARB, tmp_assign_source_31 );
    tmp_source_name_27 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_27 == NULL ))
    {
        tmp_source_name_27 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_27 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 42;
        goto frame_exception_exit_1;
    }

    tmp_called_name_27 = LOOKUP_ATTRIBUTE( tmp_source_name_27, const_str_plain_Constant );
    if ( tmp_called_name_27 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 42;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 42;
    tmp_assign_source_32 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_27, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SHARE_ACCUM_ARB_int_pos_8206_tuple, 0 ) );

    Py_DECREF( tmp_called_name_27 );
    if ( tmp_assign_source_32 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 42;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SHARE_ACCUM_ARB, tmp_assign_source_32 );
    tmp_source_name_28 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_28 == NULL ))
    {
        tmp_source_name_28 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_28 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 43;
        goto frame_exception_exit_1;
    }

    tmp_called_name_28 = LOOKUP_ATTRIBUTE( tmp_source_name_28, const_str_plain_Constant );
    if ( tmp_called_name_28 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 43;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 43;
    tmp_assign_source_33 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_28, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SUPPORT_GDI_ARB_int_pos_8207_tuple, 0 ) );

    Py_DECREF( tmp_called_name_28 );
    if ( tmp_assign_source_33 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 43;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SUPPORT_GDI_ARB, tmp_assign_source_33 );
    tmp_source_name_29 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_29 == NULL ))
    {
        tmp_source_name_29 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_29 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 44;
        goto frame_exception_exit_1;
    }

    tmp_called_name_29 = LOOKUP_ATTRIBUTE( tmp_source_name_29, const_str_plain_Constant );
    if ( tmp_called_name_29 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 44;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 44;
    tmp_assign_source_34 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_29, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SUPPORT_OPENGL_ARB_int_pos_8208_tuple, 0 ) );

    Py_DECREF( tmp_called_name_29 );
    if ( tmp_assign_source_34 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 44;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SUPPORT_OPENGL_ARB, tmp_assign_source_34 );
    tmp_source_name_30 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_30 == NULL ))
    {
        tmp_source_name_30 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_30 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 45;
        goto frame_exception_exit_1;
    }

    tmp_called_name_30 = LOOKUP_ATTRIBUTE( tmp_source_name_30, const_str_plain_Constant );
    if ( tmp_called_name_30 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 45;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 45;
    tmp_assign_source_35 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_30, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DOUBLE_BUFFER_ARB_int_pos_8209_tuple, 0 ) );

    Py_DECREF( tmp_called_name_30 );
    if ( tmp_assign_source_35 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 45;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DOUBLE_BUFFER_ARB, tmp_assign_source_35 );
    tmp_source_name_31 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_31 == NULL ))
    {
        tmp_source_name_31 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_31 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 46;
        goto frame_exception_exit_1;
    }

    tmp_called_name_31 = LOOKUP_ATTRIBUTE( tmp_source_name_31, const_str_plain_Constant );
    if ( tmp_called_name_31 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 46;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 46;
    tmp_assign_source_36 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_31, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_STEREO_ARB_int_pos_8210_tuple, 0 ) );

    Py_DECREF( tmp_called_name_31 );
    if ( tmp_assign_source_36 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 46;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_STEREO_ARB, tmp_assign_source_36 );
    tmp_source_name_32 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_32 == NULL ))
    {
        tmp_source_name_32 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_32 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 47;
        goto frame_exception_exit_1;
    }

    tmp_called_name_32 = LOOKUP_ATTRIBUTE( tmp_source_name_32, const_str_plain_Constant );
    if ( tmp_called_name_32 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 47;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 47;
    tmp_assign_source_37 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_32, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_PIXEL_TYPE_ARB_int_pos_8211_tuple, 0 ) );

    Py_DECREF( tmp_called_name_32 );
    if ( tmp_assign_source_37 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 47;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_PIXEL_TYPE_ARB, tmp_assign_source_37 );
    tmp_source_name_33 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_33 == NULL ))
    {
        tmp_source_name_33 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_33 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 48;
        goto frame_exception_exit_1;
    }

    tmp_called_name_33 = LOOKUP_ATTRIBUTE( tmp_source_name_33, const_str_plain_Constant );
    if ( tmp_called_name_33 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 48;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 48;
    tmp_assign_source_38 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_33, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_COLOR_BITS_ARB_int_pos_8212_tuple, 0 ) );

    Py_DECREF( tmp_called_name_33 );
    if ( tmp_assign_source_38 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 48;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_COLOR_BITS_ARB, tmp_assign_source_38 );
    tmp_source_name_34 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_34 == NULL ))
    {
        tmp_source_name_34 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_34 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 49;
        goto frame_exception_exit_1;
    }

    tmp_called_name_34 = LOOKUP_ATTRIBUTE( tmp_source_name_34, const_str_plain_Constant );
    if ( tmp_called_name_34 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 49;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 49;
    tmp_assign_source_39 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_34, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_RED_BITS_ARB_int_pos_8213_tuple, 0 ) );

    Py_DECREF( tmp_called_name_34 );
    if ( tmp_assign_source_39 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 49;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_RED_BITS_ARB, tmp_assign_source_39 );
    tmp_source_name_35 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_35 == NULL ))
    {
        tmp_source_name_35 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_35 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 50;
        goto frame_exception_exit_1;
    }

    tmp_called_name_35 = LOOKUP_ATTRIBUTE( tmp_source_name_35, const_str_plain_Constant );
    if ( tmp_called_name_35 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 50;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 50;
    tmp_assign_source_40 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_35, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_RED_SHIFT_ARB_int_pos_8214_tuple, 0 ) );

    Py_DECREF( tmp_called_name_35 );
    if ( tmp_assign_source_40 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 50;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_RED_SHIFT_ARB, tmp_assign_source_40 );
    tmp_source_name_36 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_36 == NULL ))
    {
        tmp_source_name_36 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_36 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 51;
        goto frame_exception_exit_1;
    }

    tmp_called_name_36 = LOOKUP_ATTRIBUTE( tmp_source_name_36, const_str_plain_Constant );
    if ( tmp_called_name_36 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 51;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 51;
    tmp_assign_source_41 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_36, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GREEN_BITS_ARB_int_pos_8215_tuple, 0 ) );

    Py_DECREF( tmp_called_name_36 );
    if ( tmp_assign_source_41 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 51;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GREEN_BITS_ARB, tmp_assign_source_41 );
    tmp_source_name_37 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_37 == NULL ))
    {
        tmp_source_name_37 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_37 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 52;
        goto frame_exception_exit_1;
    }

    tmp_called_name_37 = LOOKUP_ATTRIBUTE( tmp_source_name_37, const_str_plain_Constant );
    if ( tmp_called_name_37 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 52;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 52;
    tmp_assign_source_42 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_37, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GREEN_SHIFT_ARB_int_pos_8216_tuple, 0 ) );

    Py_DECREF( tmp_called_name_37 );
    if ( tmp_assign_source_42 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 52;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GREEN_SHIFT_ARB, tmp_assign_source_42 );
    tmp_source_name_38 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_38 == NULL ))
    {
        tmp_source_name_38 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_38 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 53;
        goto frame_exception_exit_1;
    }

    tmp_called_name_38 = LOOKUP_ATTRIBUTE( tmp_source_name_38, const_str_plain_Constant );
    if ( tmp_called_name_38 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 53;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 53;
    tmp_assign_source_43 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_38, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BLUE_BITS_ARB_int_pos_8217_tuple, 0 ) );

    Py_DECREF( tmp_called_name_38 );
    if ( tmp_assign_source_43 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 53;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BLUE_BITS_ARB, tmp_assign_source_43 );
    tmp_source_name_39 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_39 == NULL ))
    {
        tmp_source_name_39 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_39 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 54;
        goto frame_exception_exit_1;
    }

    tmp_called_name_39 = LOOKUP_ATTRIBUTE( tmp_source_name_39, const_str_plain_Constant );
    if ( tmp_called_name_39 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 54;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 54;
    tmp_assign_source_44 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_39, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BLUE_SHIFT_ARB_int_pos_8218_tuple, 0 ) );

    Py_DECREF( tmp_called_name_39 );
    if ( tmp_assign_source_44 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 54;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BLUE_SHIFT_ARB, tmp_assign_source_44 );
    tmp_source_name_40 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_40 == NULL ))
    {
        tmp_source_name_40 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_40 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 55;
        goto frame_exception_exit_1;
    }

    tmp_called_name_40 = LOOKUP_ATTRIBUTE( tmp_source_name_40, const_str_plain_Constant );
    if ( tmp_called_name_40 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 55;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 55;
    tmp_assign_source_45 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_40, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ALPHA_BITS_ARB_int_pos_8219_tuple, 0 ) );

    Py_DECREF( tmp_called_name_40 );
    if ( tmp_assign_source_45 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 55;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ALPHA_BITS_ARB, tmp_assign_source_45 );
    tmp_source_name_41 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_41 == NULL ))
    {
        tmp_source_name_41 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_41 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 56;
        goto frame_exception_exit_1;
    }

    tmp_called_name_41 = LOOKUP_ATTRIBUTE( tmp_source_name_41, const_str_plain_Constant );
    if ( tmp_called_name_41 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 56;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 56;
    tmp_assign_source_46 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_41, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ALPHA_SHIFT_ARB_int_pos_8220_tuple, 0 ) );

    Py_DECREF( tmp_called_name_41 );
    if ( tmp_assign_source_46 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 56;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ALPHA_SHIFT_ARB, tmp_assign_source_46 );
    tmp_source_name_42 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_42 == NULL ))
    {
        tmp_source_name_42 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_42 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 57;
        goto frame_exception_exit_1;
    }

    tmp_called_name_42 = LOOKUP_ATTRIBUTE( tmp_source_name_42, const_str_plain_Constant );
    if ( tmp_called_name_42 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 57;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 57;
    tmp_assign_source_47 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_42, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_BITS_ARB_int_pos_8221_tuple, 0 ) );

    Py_DECREF( tmp_called_name_42 );
    if ( tmp_assign_source_47 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 57;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_BITS_ARB, tmp_assign_source_47 );
    tmp_source_name_43 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_43 == NULL ))
    {
        tmp_source_name_43 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_43 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 58;
        goto frame_exception_exit_1;
    }

    tmp_called_name_43 = LOOKUP_ATTRIBUTE( tmp_source_name_43, const_str_plain_Constant );
    if ( tmp_called_name_43 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 58;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 58;
    tmp_assign_source_48 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_43, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_RED_BITS_ARB_int_pos_8222_tuple, 0 ) );

    Py_DECREF( tmp_called_name_43 );
    if ( tmp_assign_source_48 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 58;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_RED_BITS_ARB, tmp_assign_source_48 );
    tmp_source_name_44 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_44 == NULL ))
    {
        tmp_source_name_44 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_44 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 59;
        goto frame_exception_exit_1;
    }

    tmp_called_name_44 = LOOKUP_ATTRIBUTE( tmp_source_name_44, const_str_plain_Constant );
    if ( tmp_called_name_44 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 59;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 59;
    tmp_assign_source_49 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_44, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_GREEN_BITS_ARB_int_pos_8223_tuple, 0 ) );

    Py_DECREF( tmp_called_name_44 );
    if ( tmp_assign_source_49 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 59;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_GREEN_BITS_ARB, tmp_assign_source_49 );
    tmp_source_name_45 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_45 == NULL ))
    {
        tmp_source_name_45 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_45 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 60;
        goto frame_exception_exit_1;
    }

    tmp_called_name_45 = LOOKUP_ATTRIBUTE( tmp_source_name_45, const_str_plain_Constant );
    if ( tmp_called_name_45 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 60;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 60;
    tmp_assign_source_50 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_45, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_BLUE_BITS_ARB_int_pos_8224_tuple, 0 ) );

    Py_DECREF( tmp_called_name_45 );
    if ( tmp_assign_source_50 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 60;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_BLUE_BITS_ARB, tmp_assign_source_50 );
    tmp_source_name_46 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_46 == NULL ))
    {
        tmp_source_name_46 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_46 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 61;
        goto frame_exception_exit_1;
    }

    tmp_called_name_46 = LOOKUP_ATTRIBUTE( tmp_source_name_46, const_str_plain_Constant );
    if ( tmp_called_name_46 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 61;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 61;
    tmp_assign_source_51 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_46, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_ALPHA_BITS_ARB_int_pos_8225_tuple, 0 ) );

    Py_DECREF( tmp_called_name_46 );
    if ( tmp_assign_source_51 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 61;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_ALPHA_BITS_ARB, tmp_assign_source_51 );
    tmp_source_name_47 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_47 == NULL ))
    {
        tmp_source_name_47 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_47 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 62;
        goto frame_exception_exit_1;
    }

    tmp_called_name_47 = LOOKUP_ATTRIBUTE( tmp_source_name_47, const_str_plain_Constant );
    if ( tmp_called_name_47 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 62;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 62;
    tmp_assign_source_52 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_47, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DEPTH_BITS_ARB_int_pos_8226_tuple, 0 ) );

    Py_DECREF( tmp_called_name_47 );
    if ( tmp_assign_source_52 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 62;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DEPTH_BITS_ARB, tmp_assign_source_52 );
    tmp_source_name_48 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_48 == NULL ))
    {
        tmp_source_name_48 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_48 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 63;
        goto frame_exception_exit_1;
    }

    tmp_called_name_48 = LOOKUP_ATTRIBUTE( tmp_source_name_48, const_str_plain_Constant );
    if ( tmp_called_name_48 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 63;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 63;
    tmp_assign_source_53 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_48, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_STENCIL_BITS_ARB_int_pos_8227_tuple, 0 ) );

    Py_DECREF( tmp_called_name_48 );
    if ( tmp_assign_source_53 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 63;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_STENCIL_BITS_ARB, tmp_assign_source_53 );
    tmp_source_name_49 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_49 == NULL ))
    {
        tmp_source_name_49 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_49 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 64;
        goto frame_exception_exit_1;
    }

    tmp_called_name_49 = LOOKUP_ATTRIBUTE( tmp_source_name_49, const_str_plain_Constant );
    if ( tmp_called_name_49 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 64;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 64;
    tmp_assign_source_54 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_49, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX_BUFFERS_ARB_int_pos_8228_tuple, 0 ) );

    Py_DECREF( tmp_called_name_49 );
    if ( tmp_assign_source_54 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 64;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX_BUFFERS_ARB, tmp_assign_source_54 );
    tmp_source_name_50 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_50 == NULL ))
    {
        tmp_source_name_50 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_50 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 65;
        goto frame_exception_exit_1;
    }

    tmp_called_name_50 = LOOKUP_ATTRIBUTE( tmp_source_name_50, const_str_plain_Constant );
    if ( tmp_called_name_50 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 65;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 65;
    tmp_assign_source_55 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_50, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NO_ACCELERATION_ARB_int_pos_8229_tuple, 0 ) );

    Py_DECREF( tmp_called_name_50 );
    if ( tmp_assign_source_55 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 65;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NO_ACCELERATION_ARB, tmp_assign_source_55 );
    tmp_source_name_51 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_51 == NULL ))
    {
        tmp_source_name_51 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_51 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 66;
        goto frame_exception_exit_1;
    }

    tmp_called_name_51 = LOOKUP_ATTRIBUTE( tmp_source_name_51, const_str_plain_Constant );
    if ( tmp_called_name_51 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 66;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 66;
    tmp_assign_source_56 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_51, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENERIC_ACCELERATION_ARB_int_pos_8230_tuple, 0 ) );

    Py_DECREF( tmp_called_name_51 );
    if ( tmp_assign_source_56 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 66;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENERIC_ACCELERATION_ARB, tmp_assign_source_56 );
    tmp_source_name_52 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_52 == NULL ))
    {
        tmp_source_name_52 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_52 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 67;
        goto frame_exception_exit_1;
    }

    tmp_called_name_52 = LOOKUP_ATTRIBUTE( tmp_source_name_52, const_str_plain_Constant );
    if ( tmp_called_name_52 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 67;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 67;
    tmp_assign_source_57 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_52, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_FULL_ACCELERATION_ARB_int_pos_8231_tuple, 0 ) );

    Py_DECREF( tmp_called_name_52 );
    if ( tmp_assign_source_57 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 67;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_FULL_ACCELERATION_ARB, tmp_assign_source_57 );
    tmp_source_name_53 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_53 == NULL ))
    {
        tmp_source_name_53 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_53 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 68;
        goto frame_exception_exit_1;
    }

    tmp_called_name_53 = LOOKUP_ATTRIBUTE( tmp_source_name_53, const_str_plain_Constant );
    if ( tmp_called_name_53 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 68;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 68;
    tmp_assign_source_58 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_53, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_EXCHANGE_ARB_int_pos_8232_tuple, 0 ) );

    Py_DECREF( tmp_called_name_53 );
    if ( tmp_assign_source_58 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 68;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_EXCHANGE_ARB, tmp_assign_source_58 );
    tmp_source_name_54 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_54 == NULL ))
    {
        tmp_source_name_54 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_54 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 69;
        goto frame_exception_exit_1;
    }

    tmp_called_name_54 = LOOKUP_ATTRIBUTE( tmp_source_name_54, const_str_plain_Constant );
    if ( tmp_called_name_54 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 69;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 69;
    tmp_assign_source_59 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_54, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_COPY_ARB_int_pos_8233_tuple, 0 ) );

    Py_DECREF( tmp_called_name_54 );
    if ( tmp_assign_source_59 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 69;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_COPY_ARB, tmp_assign_source_59 );
    tmp_source_name_55 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_55 == NULL ))
    {
        tmp_source_name_55 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_55 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 70;
        goto frame_exception_exit_1;
    }

    tmp_called_name_55 = LOOKUP_ATTRIBUTE( tmp_source_name_55, const_str_plain_Constant );
    if ( tmp_called_name_55 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 70;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 70;
    tmp_assign_source_60 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_55, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_UNDEFINED_ARB_int_pos_8234_tuple, 0 ) );

    Py_DECREF( tmp_called_name_55 );
    if ( tmp_assign_source_60 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 70;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_UNDEFINED_ARB, tmp_assign_source_60 );
    tmp_source_name_56 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_56 == NULL ))
    {
        tmp_source_name_56 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_56 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 71;
        goto frame_exception_exit_1;
    }

    tmp_called_name_56 = LOOKUP_ATTRIBUTE( tmp_source_name_56, const_str_plain_Constant );
    if ( tmp_called_name_56 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 71;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 71;
    tmp_assign_source_61 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_56, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TYPE_RGBA_ARB_int_pos_8235_tuple, 0 ) );

    Py_DECREF( tmp_called_name_56 );
    if ( tmp_assign_source_61 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 71;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TYPE_RGBA_ARB, tmp_assign_source_61 );
    tmp_source_name_57 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_57 == NULL ))
    {
        tmp_source_name_57 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_57 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 72;
        goto frame_exception_exit_1;
    }

    tmp_called_name_57 = LOOKUP_ATTRIBUTE( tmp_source_name_57, const_str_plain_Constant );
    if ( tmp_called_name_57 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 72;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 72;
    tmp_assign_source_62 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_57, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TYPE_COLORINDEX_ARB_int_pos_8236_tuple, 0 ) );

    Py_DECREF( tmp_called_name_57 );
    if ( tmp_assign_source_62 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 72;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TYPE_COLORINDEX_ARB, tmp_assign_source_62 );
    tmp_source_name_58 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_58 == NULL ))
    {
        tmp_source_name_58 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_58 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 74;
        goto frame_exception_exit_1;
    }

    tmp_called_name_58 = LOOKUP_ATTRIBUTE( tmp_source_name_58, const_str_plain_Constant );
    if ( tmp_called_name_58 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 74;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 74;
    tmp_assign_source_63 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_58, &PyTuple_GET_ITEM( const_tuple_str_plain_ERROR_INVALID_PIXEL_TYPE_ARB_int_pos_8259_tuple, 0 ) );

    Py_DECREF( tmp_called_name_58 );
    if ( tmp_assign_source_63 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 74;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_ERROR_INVALID_PIXEL_TYPE_ARB, tmp_assign_source_63 );
    tmp_source_name_59 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_59 == NULL ))
    {
        tmp_source_name_59 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_59 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 75;
        goto frame_exception_exit_1;
    }

    tmp_called_name_59 = LOOKUP_ATTRIBUTE( tmp_source_name_59, const_str_plain_Constant );
    if ( tmp_called_name_59 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 75;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 75;
    tmp_assign_source_64 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_59, &PyTuple_GET_ITEM( const_tuple_af092cc91f9073b91bba71bb57441e20_tuple, 0 ) );

    Py_DECREF( tmp_called_name_59 );
    if ( tmp_assign_source_64 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 75;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB, tmp_assign_source_64 );
    tmp_source_name_60 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_60 == NULL ))
    {
        tmp_source_name_60 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_60 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 77;
        goto frame_exception_exit_1;
    }

    tmp_called_name_60 = LOOKUP_ATTRIBUTE( tmp_source_name_60, const_str_plain_Constant );
    if ( tmp_called_name_60 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 77;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 77;
    tmp_assign_source_65 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_60, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DRAW_TO_PBUFFER_ARB_int_pos_8237_tuple, 0 ) );

    Py_DECREF( tmp_called_name_60 );
    if ( tmp_assign_source_65 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 77;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DRAW_TO_PBUFFER_ARB, tmp_assign_source_65 );
    tmp_source_name_61 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_61 == NULL ))
    {
        tmp_source_name_61 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_61 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 78;
        goto frame_exception_exit_1;
    }

    tmp_called_name_61 = LOOKUP_ATTRIBUTE( tmp_source_name_61, const_str_plain_Constant );
    if ( tmp_called_name_61 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 78;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 78;
    tmp_assign_source_66 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_61, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_MAX_PBUFFER_PIXELS_ARB_int_pos_8238_tuple, 0 ) );

    Py_DECREF( tmp_called_name_61 );
    if ( tmp_assign_source_66 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 78;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_MAX_PBUFFER_PIXELS_ARB, tmp_assign_source_66 );
    tmp_source_name_62 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_62 == NULL ))
    {
        tmp_source_name_62 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_62 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 79;
        goto frame_exception_exit_1;
    }

    tmp_called_name_62 = LOOKUP_ATTRIBUTE( tmp_source_name_62, const_str_plain_Constant );
    if ( tmp_called_name_62 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 79;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 79;
    tmp_assign_source_67 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_62, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_MAX_PBUFFER_WIDTH_ARB_int_pos_8239_tuple, 0 ) );

    Py_DECREF( tmp_called_name_62 );
    if ( tmp_assign_source_67 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 79;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_MAX_PBUFFER_WIDTH_ARB, tmp_assign_source_67 );
    tmp_source_name_63 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_63 == NULL ))
    {
        tmp_source_name_63 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_63 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 80;
        goto frame_exception_exit_1;
    }

    tmp_called_name_63 = LOOKUP_ATTRIBUTE( tmp_source_name_63, const_str_plain_Constant );
    if ( tmp_called_name_63 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 80;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 80;
    tmp_assign_source_68 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_63, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_MAX_PBUFFER_HEIGHT_ARB_int_pos_8240_tuple, 0 ) );

    Py_DECREF( tmp_called_name_63 );
    if ( tmp_assign_source_68 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 80;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_MAX_PBUFFER_HEIGHT_ARB, tmp_assign_source_68 );
    tmp_source_name_64 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_64 == NULL ))
    {
        tmp_source_name_64 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_64 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 81;
        goto frame_exception_exit_1;
    }

    tmp_called_name_64 = LOOKUP_ATTRIBUTE( tmp_source_name_64, const_str_plain_Constant );
    if ( tmp_called_name_64 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 81;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 81;
    tmp_assign_source_69 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_64, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_PBUFFER_LARGEST_ARB_int_pos_8243_tuple, 0 ) );

    Py_DECREF( tmp_called_name_64 );
    if ( tmp_assign_source_69 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 81;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_PBUFFER_LARGEST_ARB, tmp_assign_source_69 );
    tmp_source_name_65 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_65 == NULL ))
    {
        tmp_source_name_65 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_65 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 82;
        goto frame_exception_exit_1;
    }

    tmp_called_name_65 = LOOKUP_ATTRIBUTE( tmp_source_name_65, const_str_plain_Constant );
    if ( tmp_called_name_65 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 82;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 82;
    tmp_assign_source_70 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_65, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_PBUFFER_WIDTH_ARB_int_pos_8244_tuple, 0 ) );

    Py_DECREF( tmp_called_name_65 );
    if ( tmp_assign_source_70 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 82;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_PBUFFER_WIDTH_ARB, tmp_assign_source_70 );
    tmp_source_name_66 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_66 == NULL ))
    {
        tmp_source_name_66 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_66 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 83;
        goto frame_exception_exit_1;
    }

    tmp_called_name_66 = LOOKUP_ATTRIBUTE( tmp_source_name_66, const_str_plain_Constant );
    if ( tmp_called_name_66 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 83;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 83;
    tmp_assign_source_71 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_66, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_PBUFFER_HEIGHT_ARB_int_pos_8245_tuple, 0 ) );

    Py_DECREF( tmp_called_name_66 );
    if ( tmp_assign_source_71 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 83;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_PBUFFER_HEIGHT_ARB, tmp_assign_source_71 );
    tmp_source_name_67 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_67 == NULL ))
    {
        tmp_source_name_67 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_67 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 84;
        goto frame_exception_exit_1;
    }

    tmp_called_name_67 = LOOKUP_ATTRIBUTE( tmp_source_name_67, const_str_plain_Constant );
    if ( tmp_called_name_67 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 84;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 84;
    tmp_assign_source_72 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_67, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_PBUFFER_LOST_ARB_int_pos_8246_tuple, 0 ) );

    Py_DECREF( tmp_called_name_67 );
    if ( tmp_assign_source_72 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 84;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_PBUFFER_LOST_ARB, tmp_assign_source_72 );
    tmp_source_name_68 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_68 == NULL ))
    {
        tmp_source_name_68 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_68 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 86;
        goto frame_exception_exit_1;
    }

    tmp_called_name_68 = LOOKUP_ATTRIBUTE( tmp_source_name_68, const_str_plain_Constant );
    if ( tmp_called_name_68 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 86;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 86;
    tmp_assign_source_73 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_68, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BIND_TO_TEXTURE_RGB_ARB_int_pos_8304_tuple, 0 ) );

    Py_DECREF( tmp_called_name_68 );
    if ( tmp_assign_source_73 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 86;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BIND_TO_TEXTURE_RGB_ARB, tmp_assign_source_73 );
    tmp_source_name_69 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_69 == NULL ))
    {
        tmp_source_name_69 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_69 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 87;
        goto frame_exception_exit_1;
    }

    tmp_called_name_69 = LOOKUP_ATTRIBUTE( tmp_source_name_69, const_str_plain_Constant );
    if ( tmp_called_name_69 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 87;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 87;
    tmp_assign_source_74 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_69, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BIND_TO_TEXTURE_RGBA_ARB_int_pos_8305_tuple, 0 ) );

    Py_DECREF( tmp_called_name_69 );
    if ( tmp_assign_source_74 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 87;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BIND_TO_TEXTURE_RGBA_ARB, tmp_assign_source_74 );
    tmp_source_name_70 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_70 == NULL ))
    {
        tmp_source_name_70 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_70 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 88;
        goto frame_exception_exit_1;
    }

    tmp_called_name_70 = LOOKUP_ATTRIBUTE( tmp_source_name_70, const_str_plain_Constant );
    if ( tmp_called_name_70 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 88;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 88;
    tmp_assign_source_75 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_70, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_FORMAT_ARB_int_pos_8306_tuple, 0 ) );

    Py_DECREF( tmp_called_name_70 );
    if ( tmp_assign_source_75 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 88;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_FORMAT_ARB, tmp_assign_source_75 );
    tmp_source_name_71 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_71 == NULL ))
    {
        tmp_source_name_71 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_71 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 89;
        goto frame_exception_exit_1;
    }

    tmp_called_name_71 = LOOKUP_ATTRIBUTE( tmp_source_name_71, const_str_plain_Constant );
    if ( tmp_called_name_71 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 89;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 89;
    tmp_assign_source_76 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_71, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_TARGET_ARB_int_pos_8307_tuple, 0 ) );

    Py_DECREF( tmp_called_name_71 );
    if ( tmp_assign_source_76 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 89;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_TARGET_ARB, tmp_assign_source_76 );
    tmp_source_name_72 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_72 == NULL ))
    {
        tmp_source_name_72 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_72 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 90;
        goto frame_exception_exit_1;
    }

    tmp_called_name_72 = LOOKUP_ATTRIBUTE( tmp_source_name_72, const_str_plain_Constant );
    if ( tmp_called_name_72 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 90;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 90;
    tmp_assign_source_77 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_72, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_MIPMAP_TEXTURE_ARB_int_pos_8308_tuple, 0 ) );

    Py_DECREF( tmp_called_name_72 );
    if ( tmp_assign_source_77 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 90;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_MIPMAP_TEXTURE_ARB, tmp_assign_source_77 );
    tmp_source_name_73 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_73 == NULL ))
    {
        tmp_source_name_73 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_73 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 91;
        goto frame_exception_exit_1;
    }

    tmp_called_name_73 = LOOKUP_ATTRIBUTE( tmp_source_name_73, const_str_plain_Constant );
    if ( tmp_called_name_73 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 91;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 91;
    tmp_assign_source_78 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_73, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_RGB_ARB_int_pos_8309_tuple, 0 ) );

    Py_DECREF( tmp_called_name_73 );
    if ( tmp_assign_source_78 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 91;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_RGB_ARB, tmp_assign_source_78 );
    tmp_source_name_74 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_74 == NULL ))
    {
        tmp_source_name_74 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_74 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 92;
        goto frame_exception_exit_1;
    }

    tmp_called_name_74 = LOOKUP_ATTRIBUTE( tmp_source_name_74, const_str_plain_Constant );
    if ( tmp_called_name_74 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 92;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 92;
    tmp_assign_source_79 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_74, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_RGBA_ARB_int_pos_8310_tuple, 0 ) );

    Py_DECREF( tmp_called_name_74 );
    if ( tmp_assign_source_79 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 92;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_RGBA_ARB, tmp_assign_source_79 );
    tmp_source_name_75 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_75 == NULL ))
    {
        tmp_source_name_75 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_75 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 93;
        goto frame_exception_exit_1;
    }

    tmp_called_name_75 = LOOKUP_ATTRIBUTE( tmp_source_name_75, const_str_plain_Constant );
    if ( tmp_called_name_75 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 93;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 93;
    tmp_assign_source_80 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_75, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NO_TEXTURE_ARB_int_pos_8311_tuple, 0 ) );

    Py_DECREF( tmp_called_name_75 );
    if ( tmp_assign_source_80 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 93;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NO_TEXTURE_ARB, tmp_assign_source_80 );
    tmp_source_name_76 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_76 == NULL ))
    {
        tmp_source_name_76 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_76 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 94;
        goto frame_exception_exit_1;
    }

    tmp_called_name_76 = LOOKUP_ATTRIBUTE( tmp_source_name_76, const_str_plain_Constant );
    if ( tmp_called_name_76 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 94;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 94;
    tmp_assign_source_81 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_76, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_ARB_int_pos_8312_tuple, 0 ) );

    Py_DECREF( tmp_called_name_76 );
    if ( tmp_assign_source_81 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 94;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_CUBE_MAP_ARB, tmp_assign_source_81 );
    tmp_source_name_77 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_77 == NULL ))
    {
        tmp_source_name_77 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_77 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 95;
        goto frame_exception_exit_1;
    }

    tmp_called_name_77 = LOOKUP_ATTRIBUTE( tmp_source_name_77, const_str_plain_Constant );
    if ( tmp_called_name_77 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 95;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 95;
    tmp_assign_source_82 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_77, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_1D_ARB_int_pos_8313_tuple, 0 ) );

    Py_DECREF( tmp_called_name_77 );
    if ( tmp_assign_source_82 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 95;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_1D_ARB, tmp_assign_source_82 );
    tmp_source_name_78 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_78 == NULL ))
    {
        tmp_source_name_78 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_78 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 96;
        goto frame_exception_exit_1;
    }

    tmp_called_name_78 = LOOKUP_ATTRIBUTE( tmp_source_name_78, const_str_plain_Constant );
    if ( tmp_called_name_78 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 96;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 96;
    tmp_assign_source_83 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_78, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_2D_ARB_int_pos_8314_tuple, 0 ) );

    Py_DECREF( tmp_called_name_78 );
    if ( tmp_assign_source_83 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 96;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_2D_ARB, tmp_assign_source_83 );
    tmp_source_name_79 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_79 == NULL ))
    {
        tmp_source_name_79 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_79 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 97;
        goto frame_exception_exit_1;
    }

    tmp_called_name_79 = LOOKUP_ATTRIBUTE( tmp_source_name_79, const_str_plain_Constant );
    if ( tmp_called_name_79 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 97;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 97;
    tmp_assign_source_84 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_79, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_MIPMAP_LEVEL_ARB_int_pos_8315_tuple, 0 ) );

    Py_DECREF( tmp_called_name_79 );
    if ( tmp_assign_source_84 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 97;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_MIPMAP_LEVEL_ARB, tmp_assign_source_84 );
    tmp_source_name_80 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_80 == NULL ))
    {
        tmp_source_name_80 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_80 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 98;
        goto frame_exception_exit_1;
    }

    tmp_called_name_80 = LOOKUP_ATTRIBUTE( tmp_source_name_80, const_str_plain_Constant );
    if ( tmp_called_name_80 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 98;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 98;
    tmp_assign_source_85 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_80, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_CUBE_MAP_FACE_ARB_int_pos_8316_tuple, 0 ) );

    Py_DECREF( tmp_called_name_80 );
    if ( tmp_assign_source_85 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 98;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_CUBE_MAP_FACE_ARB, tmp_assign_source_85 );
    tmp_source_name_81 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_81 == NULL ))
    {
        tmp_source_name_81 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_81 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 99;
        goto frame_exception_exit_1;
    }

    tmp_called_name_81 = LOOKUP_ATTRIBUTE( tmp_source_name_81, const_str_plain_Constant );
    if ( tmp_called_name_81 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 99;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 99;
    tmp_assign_source_86 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_81, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB_int_pos_8317_tuple, 0 ) );

    Py_DECREF( tmp_called_name_81 );
    if ( tmp_assign_source_86 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 99;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB, tmp_assign_source_86 );
    tmp_source_name_82 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_82 == NULL ))
    {
        tmp_source_name_82 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_82 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 100;
        goto frame_exception_exit_1;
    }

    tmp_called_name_82 = LOOKUP_ATTRIBUTE( tmp_source_name_82, const_str_plain_Constant );
    if ( tmp_called_name_82 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 100;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 100;
    tmp_assign_source_87 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_82, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB_int_pos_8318_tuple, 0 ) );

    Py_DECREF( tmp_called_name_82 );
    if ( tmp_assign_source_87 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 100;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB, tmp_assign_source_87 );
    tmp_source_name_83 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_83 == NULL ))
    {
        tmp_source_name_83 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_83 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 101;
        goto frame_exception_exit_1;
    }

    tmp_called_name_83 = LOOKUP_ATTRIBUTE( tmp_source_name_83, const_str_plain_Constant );
    if ( tmp_called_name_83 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 101;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 101;
    tmp_assign_source_88 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_83, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB_int_pos_8319_tuple, 0 ) );

    Py_DECREF( tmp_called_name_83 );
    if ( tmp_assign_source_88 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 101;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB, tmp_assign_source_88 );
    tmp_source_name_84 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_84 == NULL ))
    {
        tmp_source_name_84 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_84 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 102;
        goto frame_exception_exit_1;
    }

    tmp_called_name_84 = LOOKUP_ATTRIBUTE( tmp_source_name_84, const_str_plain_Constant );
    if ( tmp_called_name_84 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 102;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 102;
    tmp_assign_source_89 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_84, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB_int_pos_8320_tuple, 0 ) );

    Py_DECREF( tmp_called_name_84 );
    if ( tmp_assign_source_89 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 102;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB, tmp_assign_source_89 );
    tmp_source_name_85 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_85 == NULL ))
    {
        tmp_source_name_85 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_85 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 103;
        goto frame_exception_exit_1;
    }

    tmp_called_name_85 = LOOKUP_ATTRIBUTE( tmp_source_name_85, const_str_plain_Constant );
    if ( tmp_called_name_85 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 103;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 103;
    tmp_assign_source_90 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_85, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB_int_pos_8321_tuple, 0 ) );

    Py_DECREF( tmp_called_name_85 );
    if ( tmp_assign_source_90 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 103;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB, tmp_assign_source_90 );
    tmp_source_name_86 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_86 == NULL ))
    {
        tmp_source_name_86 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_86 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 104;
        goto frame_exception_exit_1;
    }

    tmp_called_name_86 = LOOKUP_ATTRIBUTE( tmp_source_name_86, const_str_plain_Constant );
    if ( tmp_called_name_86 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 104;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 104;
    tmp_assign_source_91 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_86, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB_int_pos_8322_tuple, 0 ) );

    Py_DECREF( tmp_called_name_86 );
    if ( tmp_assign_source_91 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 104;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB, tmp_assign_source_91 );
    tmp_source_name_87 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_87 == NULL ))
    {
        tmp_source_name_87 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_87 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 105;
        goto frame_exception_exit_1;
    }

    tmp_called_name_87 = LOOKUP_ATTRIBUTE( tmp_source_name_87, const_str_plain_Constant );
    if ( tmp_called_name_87 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 105;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 105;
    tmp_assign_source_92 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_87, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_FRONT_LEFT_ARB_int_pos_8323_tuple, 0 ) );

    Py_DECREF( tmp_called_name_87 );
    if ( tmp_assign_source_92 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 105;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_FRONT_LEFT_ARB, tmp_assign_source_92 );
    tmp_source_name_88 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_88 == NULL ))
    {
        tmp_source_name_88 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_88 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 106;
        goto frame_exception_exit_1;
    }

    tmp_called_name_88 = LOOKUP_ATTRIBUTE( tmp_source_name_88, const_str_plain_Constant );
    if ( tmp_called_name_88 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 106;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 106;
    tmp_assign_source_93 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_88, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_FRONT_RIGHT_ARB_int_pos_8324_tuple, 0 ) );

    Py_DECREF( tmp_called_name_88 );
    if ( tmp_assign_source_93 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 106;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_FRONT_RIGHT_ARB, tmp_assign_source_93 );
    tmp_source_name_89 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_89 == NULL ))
    {
        tmp_source_name_89 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_89 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 107;
        goto frame_exception_exit_1;
    }

    tmp_called_name_89 = LOOKUP_ATTRIBUTE( tmp_source_name_89, const_str_plain_Constant );
    if ( tmp_called_name_89 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 107;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 107;
    tmp_assign_source_94 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_89, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BACK_LEFT_ARB_int_pos_8325_tuple, 0 ) );

    Py_DECREF( tmp_called_name_89 );
    if ( tmp_assign_source_94 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 107;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BACK_LEFT_ARB, tmp_assign_source_94 );
    tmp_source_name_90 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_90 == NULL ))
    {
        tmp_source_name_90 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_90 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 108;
        goto frame_exception_exit_1;
    }

    tmp_called_name_90 = LOOKUP_ATTRIBUTE( tmp_source_name_90, const_str_plain_Constant );
    if ( tmp_called_name_90 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 108;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 108;
    tmp_assign_source_95 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_90, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BACK_RIGHT_ARB_int_pos_8326_tuple, 0 ) );

    Py_DECREF( tmp_called_name_90 );
    if ( tmp_assign_source_95 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 108;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BACK_RIGHT_ARB, tmp_assign_source_95 );
    tmp_source_name_91 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_91 == NULL ))
    {
        tmp_source_name_91 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_91 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 109;
        goto frame_exception_exit_1;
    }

    tmp_called_name_91 = LOOKUP_ATTRIBUTE( tmp_source_name_91, const_str_plain_Constant );
    if ( tmp_called_name_91 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 109;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 109;
    tmp_assign_source_96 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_91, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX0_ARB_int_pos_8327_tuple, 0 ) );

    Py_DECREF( tmp_called_name_91 );
    if ( tmp_assign_source_96 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 109;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX0_ARB, tmp_assign_source_96 );
    tmp_source_name_92 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_92 == NULL ))
    {
        tmp_source_name_92 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_92 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 110;
        goto frame_exception_exit_1;
    }

    tmp_called_name_92 = LOOKUP_ATTRIBUTE( tmp_source_name_92, const_str_plain_Constant );
    if ( tmp_called_name_92 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 110;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 110;
    tmp_assign_source_97 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_92, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX1_ARB_int_pos_8328_tuple, 0 ) );

    Py_DECREF( tmp_called_name_92 );
    if ( tmp_assign_source_97 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 110;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX1_ARB, tmp_assign_source_97 );
    tmp_source_name_93 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_93 == NULL ))
    {
        tmp_source_name_93 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_93 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 111;
        goto frame_exception_exit_1;
    }

    tmp_called_name_93 = LOOKUP_ATTRIBUTE( tmp_source_name_93, const_str_plain_Constant );
    if ( tmp_called_name_93 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 111;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 111;
    tmp_assign_source_98 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_93, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX2_ARB_int_pos_8329_tuple, 0 ) );

    Py_DECREF( tmp_called_name_93 );
    if ( tmp_assign_source_98 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 111;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX2_ARB, tmp_assign_source_98 );
    tmp_source_name_94 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_94 == NULL ))
    {
        tmp_source_name_94 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_94 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 112;
        goto frame_exception_exit_1;
    }

    tmp_called_name_94 = LOOKUP_ATTRIBUTE( tmp_source_name_94, const_str_plain_Constant );
    if ( tmp_called_name_94 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 112;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 112;
    tmp_assign_source_99 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_94, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX3_ARB_int_pos_8330_tuple, 0 ) );

    Py_DECREF( tmp_called_name_94 );
    if ( tmp_assign_source_99 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 112;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX3_ARB, tmp_assign_source_99 );
    tmp_source_name_95 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_95 == NULL ))
    {
        tmp_source_name_95 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_95 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 113;
        goto frame_exception_exit_1;
    }

    tmp_called_name_95 = LOOKUP_ATTRIBUTE( tmp_source_name_95, const_str_plain_Constant );
    if ( tmp_called_name_95 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 113;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 113;
    tmp_assign_source_100 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_95, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX4_ARB_int_pos_8331_tuple, 0 ) );

    Py_DECREF( tmp_called_name_95 );
    if ( tmp_assign_source_100 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 113;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX4_ARB, tmp_assign_source_100 );
    tmp_source_name_96 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_96 == NULL ))
    {
        tmp_source_name_96 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_96 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 114;
        goto frame_exception_exit_1;
    }

    tmp_called_name_96 = LOOKUP_ATTRIBUTE( tmp_source_name_96, const_str_plain_Constant );
    if ( tmp_called_name_96 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 114;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 114;
    tmp_assign_source_101 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_96, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX5_ARB_int_pos_8332_tuple, 0 ) );

    Py_DECREF( tmp_called_name_96 );
    if ( tmp_assign_source_101 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 114;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX5_ARB, tmp_assign_source_101 );
    tmp_source_name_97 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_97 == NULL ))
    {
        tmp_source_name_97 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_97 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 115;
        goto frame_exception_exit_1;
    }

    tmp_called_name_97 = LOOKUP_ATTRIBUTE( tmp_source_name_97, const_str_plain_Constant );
    if ( tmp_called_name_97 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 115;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 115;
    tmp_assign_source_102 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_97, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX6_ARB_int_pos_8333_tuple, 0 ) );

    Py_DECREF( tmp_called_name_97 );
    if ( tmp_assign_source_102 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 115;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX6_ARB, tmp_assign_source_102 );
    tmp_source_name_98 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_98 == NULL ))
    {
        tmp_source_name_98 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_98 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 116;
        goto frame_exception_exit_1;
    }

    tmp_called_name_98 = LOOKUP_ATTRIBUTE( tmp_source_name_98, const_str_plain_Constant );
    if ( tmp_called_name_98 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 116;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 116;
    tmp_assign_source_103 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_98, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX7_ARB_int_pos_8334_tuple, 0 ) );

    Py_DECREF( tmp_called_name_98 );
    if ( tmp_assign_source_103 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 116;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX7_ARB, tmp_assign_source_103 );
    tmp_source_name_99 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_99 == NULL ))
    {
        tmp_source_name_99 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_99 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 117;
        goto frame_exception_exit_1;
    }

    tmp_called_name_99 = LOOKUP_ATTRIBUTE( tmp_source_name_99, const_str_plain_Constant );
    if ( tmp_called_name_99 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 117;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 117;
    tmp_assign_source_104 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_99, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX8_ARB_int_pos_8335_tuple, 0 ) );

    Py_DECREF( tmp_called_name_99 );
    if ( tmp_assign_source_104 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 117;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX8_ARB, tmp_assign_source_104 );
    tmp_source_name_100 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_100 == NULL ))
    {
        tmp_source_name_100 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_100 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 118;
        goto frame_exception_exit_1;
    }

    tmp_called_name_100 = LOOKUP_ATTRIBUTE( tmp_source_name_100, const_str_plain_Constant );
    if ( tmp_called_name_100 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 118;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 118;
    tmp_assign_source_105 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_100, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX9_ARB_int_pos_8336_tuple, 0 ) );

    Py_DECREF( tmp_called_name_100 );
    if ( tmp_assign_source_105 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 118;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX9_ARB, tmp_assign_source_105 );
    tmp_source_name_101 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_101 == NULL ))
    {
        tmp_source_name_101 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_101 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 120;
        goto frame_exception_exit_1;
    }

    tmp_called_name_101 = LOOKUP_ATTRIBUTE( tmp_source_name_101, const_str_plain_Constant );
    if ( tmp_called_name_101 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 120;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 120;
    tmp_assign_source_106 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_101, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TYPE_RGBA_FLOAT_ARB_int_pos_8608_tuple, 0 ) );

    Py_DECREF( tmp_called_name_101 );
    if ( tmp_assign_source_106 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 120;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TYPE_RGBA_FLOAT_ARB, tmp_assign_source_106 );
    tmp_source_name_102 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_102 == NULL ))
    {
        tmp_source_name_102 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_102 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 122;
        goto frame_exception_exit_1;
    }

    tmp_called_name_102 = LOOKUP_ATTRIBUTE( tmp_source_name_102, const_str_plain_Constant );
    if ( tmp_called_name_102 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 122;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 122;
    tmp_assign_source_107 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_102, &PyTuple_GET_ITEM( const_tuple_str_plain_ERROR_INVALID_PIXEL_TYPE_EXT_int_pos_8259_tuple, 0 ) );

    Py_DECREF( tmp_called_name_102 );
    if ( tmp_assign_source_107 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 122;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_ERROR_INVALID_PIXEL_TYPE_EXT, tmp_assign_source_107 );
    tmp_source_name_103 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_103 == NULL ))
    {
        tmp_source_name_103 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_103 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 124;
        goto frame_exception_exit_1;
    }

    tmp_called_name_103 = LOOKUP_ATTRIBUTE( tmp_source_name_103, const_str_plain_Constant );
    if ( tmp_called_name_103 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 124;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 124;
    tmp_assign_source_108 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_103, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NUMBER_PIXEL_FORMATS_EXT_int_pos_8192_tuple, 0 ) );

    Py_DECREF( tmp_called_name_103 );
    if ( tmp_assign_source_108 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 124;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NUMBER_PIXEL_FORMATS_EXT, tmp_assign_source_108 );
    tmp_source_name_104 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_104 == NULL ))
    {
        tmp_source_name_104 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_104 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 125;
        goto frame_exception_exit_1;
    }

    tmp_called_name_104 = LOOKUP_ATTRIBUTE( tmp_source_name_104, const_str_plain_Constant );
    if ( tmp_called_name_104 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 125;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 125;
    tmp_assign_source_109 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_104, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DRAW_TO_WINDOW_EXT_int_pos_8193_tuple, 0 ) );

    Py_DECREF( tmp_called_name_104 );
    if ( tmp_assign_source_109 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 125;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DRAW_TO_WINDOW_EXT, tmp_assign_source_109 );
    tmp_source_name_105 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_105 == NULL ))
    {
        tmp_source_name_105 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_105 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 126;
        goto frame_exception_exit_1;
    }

    tmp_called_name_105 = LOOKUP_ATTRIBUTE( tmp_source_name_105, const_str_plain_Constant );
    if ( tmp_called_name_105 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 126;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 126;
    tmp_assign_source_110 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_105, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DRAW_TO_BITMAP_EXT_int_pos_8194_tuple, 0 ) );

    Py_DECREF( tmp_called_name_105 );
    if ( tmp_assign_source_110 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 126;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DRAW_TO_BITMAP_EXT, tmp_assign_source_110 );
    tmp_source_name_106 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_106 == NULL ))
    {
        tmp_source_name_106 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_106 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 127;
        goto frame_exception_exit_1;
    }

    tmp_called_name_106 = LOOKUP_ATTRIBUTE( tmp_source_name_106, const_str_plain_Constant );
    if ( tmp_called_name_106 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 127;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 127;
    tmp_assign_source_111 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_106, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCELERATION_EXT_int_pos_8195_tuple, 0 ) );

    Py_DECREF( tmp_called_name_106 );
    if ( tmp_assign_source_111 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 127;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCELERATION_EXT, tmp_assign_source_111 );
    tmp_source_name_107 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_107 == NULL ))
    {
        tmp_source_name_107 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_107 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 128;
        goto frame_exception_exit_1;
    }

    tmp_called_name_107 = LOOKUP_ATTRIBUTE( tmp_source_name_107, const_str_plain_Constant );
    if ( tmp_called_name_107 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 128;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 128;
    tmp_assign_source_112 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_107, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NEED_PALETTE_EXT_int_pos_8196_tuple, 0 ) );

    Py_DECREF( tmp_called_name_107 );
    if ( tmp_assign_source_112 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 128;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NEED_PALETTE_EXT, tmp_assign_source_112 );
    tmp_source_name_108 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_108 == NULL ))
    {
        tmp_source_name_108 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_108 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 129;
        goto frame_exception_exit_1;
    }

    tmp_called_name_108 = LOOKUP_ATTRIBUTE( tmp_source_name_108, const_str_plain_Constant );
    if ( tmp_called_name_108 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 129;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 129;
    tmp_assign_source_113 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_108, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NEED_SYSTEM_PALETTE_EXT_int_pos_8197_tuple, 0 ) );

    Py_DECREF( tmp_called_name_108 );
    if ( tmp_assign_source_113 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 129;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NEED_SYSTEM_PALETTE_EXT, tmp_assign_source_113 );
    tmp_source_name_109 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_109 == NULL ))
    {
        tmp_source_name_109 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_109 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 130;
        goto frame_exception_exit_1;
    }

    tmp_called_name_109 = LOOKUP_ATTRIBUTE( tmp_source_name_109, const_str_plain_Constant );
    if ( tmp_called_name_109 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 130;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 130;
    tmp_assign_source_114 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_109, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_LAYER_BUFFERS_EXT_int_pos_8198_tuple, 0 ) );

    Py_DECREF( tmp_called_name_109 );
    if ( tmp_assign_source_114 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 130;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_LAYER_BUFFERS_EXT, tmp_assign_source_114 );
    tmp_source_name_110 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_110 == NULL ))
    {
        tmp_source_name_110 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_110 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 131;
        goto frame_exception_exit_1;
    }

    tmp_called_name_110 = LOOKUP_ATTRIBUTE( tmp_source_name_110, const_str_plain_Constant );
    if ( tmp_called_name_110 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 131;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 131;
    tmp_assign_source_115 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_110, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_METHOD_EXT_int_pos_8199_tuple, 0 ) );

    Py_DECREF( tmp_called_name_110 );
    if ( tmp_assign_source_115 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 131;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_METHOD_EXT, tmp_assign_source_115 );
    tmp_source_name_111 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_111 == NULL ))
    {
        tmp_source_name_111 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_111 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 132;
        goto frame_exception_exit_1;
    }

    tmp_called_name_111 = LOOKUP_ATTRIBUTE( tmp_source_name_111, const_str_plain_Constant );
    if ( tmp_called_name_111 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 132;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 132;
    tmp_assign_source_116 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_111, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NUMBER_OVERLAYS_EXT_int_pos_8200_tuple, 0 ) );

    Py_DECREF( tmp_called_name_111 );
    if ( tmp_assign_source_116 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 132;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NUMBER_OVERLAYS_EXT, tmp_assign_source_116 );
    tmp_source_name_112 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_112 == NULL ))
    {
        tmp_source_name_112 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_112 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 133;
        goto frame_exception_exit_1;
    }

    tmp_called_name_112 = LOOKUP_ATTRIBUTE( tmp_source_name_112, const_str_plain_Constant );
    if ( tmp_called_name_112 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 133;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 133;
    tmp_assign_source_117 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_112, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NUMBER_UNDERLAYS_EXT_int_pos_8201_tuple, 0 ) );

    Py_DECREF( tmp_called_name_112 );
    if ( tmp_assign_source_117 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 133;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NUMBER_UNDERLAYS_EXT, tmp_assign_source_117 );
    tmp_source_name_113 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_113 == NULL ))
    {
        tmp_source_name_113 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_113 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 134;
        goto frame_exception_exit_1;
    }

    tmp_called_name_113 = LOOKUP_ATTRIBUTE( tmp_source_name_113, const_str_plain_Constant );
    if ( tmp_called_name_113 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 134;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 134;
    tmp_assign_source_118 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_113, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TRANSPARENT_EXT_int_pos_8202_tuple, 0 ) );

    Py_DECREF( tmp_called_name_113 );
    if ( tmp_assign_source_118 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 134;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TRANSPARENT_EXT, tmp_assign_source_118 );
    tmp_source_name_114 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_114 == NULL ))
    {
        tmp_source_name_114 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_114 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 135;
        goto frame_exception_exit_1;
    }

    tmp_called_name_114 = LOOKUP_ATTRIBUTE( tmp_source_name_114, const_str_plain_Constant );
    if ( tmp_called_name_114 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 135;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 135;
    tmp_assign_source_119 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_114, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TRANSPARENT_VALUE_EXT_int_pos_8203_tuple, 0 ) );

    Py_DECREF( tmp_called_name_114 );
    if ( tmp_assign_source_119 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 135;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TRANSPARENT_VALUE_EXT, tmp_assign_source_119 );
    tmp_source_name_115 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_115 == NULL ))
    {
        tmp_source_name_115 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_115 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 136;
        goto frame_exception_exit_1;
    }

    tmp_called_name_115 = LOOKUP_ATTRIBUTE( tmp_source_name_115, const_str_plain_Constant );
    if ( tmp_called_name_115 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 136;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 136;
    tmp_assign_source_120 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_115, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SHARE_DEPTH_EXT_int_pos_8204_tuple, 0 ) );

    Py_DECREF( tmp_called_name_115 );
    if ( tmp_assign_source_120 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 136;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SHARE_DEPTH_EXT, tmp_assign_source_120 );
    tmp_source_name_116 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_116 == NULL ))
    {
        tmp_source_name_116 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_116 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 137;
        goto frame_exception_exit_1;
    }

    tmp_called_name_116 = LOOKUP_ATTRIBUTE( tmp_source_name_116, const_str_plain_Constant );
    if ( tmp_called_name_116 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 137;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 137;
    tmp_assign_source_121 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_116, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SHARE_STENCIL_EXT_int_pos_8205_tuple, 0 ) );

    Py_DECREF( tmp_called_name_116 );
    if ( tmp_assign_source_121 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 137;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SHARE_STENCIL_EXT, tmp_assign_source_121 );
    tmp_source_name_117 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_117 == NULL ))
    {
        tmp_source_name_117 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_117 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 138;
        goto frame_exception_exit_1;
    }

    tmp_called_name_117 = LOOKUP_ATTRIBUTE( tmp_source_name_117, const_str_plain_Constant );
    if ( tmp_called_name_117 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 138;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 138;
    tmp_assign_source_122 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_117, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SHARE_ACCUM_EXT_int_pos_8206_tuple, 0 ) );

    Py_DECREF( tmp_called_name_117 );
    if ( tmp_assign_source_122 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 138;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SHARE_ACCUM_EXT, tmp_assign_source_122 );
    tmp_source_name_118 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_118 == NULL ))
    {
        tmp_source_name_118 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_118 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 139;
        goto frame_exception_exit_1;
    }

    tmp_called_name_118 = LOOKUP_ATTRIBUTE( tmp_source_name_118, const_str_plain_Constant );
    if ( tmp_called_name_118 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 139;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 139;
    tmp_assign_source_123 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_118, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SUPPORT_GDI_EXT_int_pos_8207_tuple, 0 ) );

    Py_DECREF( tmp_called_name_118 );
    if ( tmp_assign_source_123 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 139;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SUPPORT_GDI_EXT, tmp_assign_source_123 );
    tmp_source_name_119 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_119 == NULL ))
    {
        tmp_source_name_119 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_119 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 140;
        goto frame_exception_exit_1;
    }

    tmp_called_name_119 = LOOKUP_ATTRIBUTE( tmp_source_name_119, const_str_plain_Constant );
    if ( tmp_called_name_119 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 140;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 140;
    tmp_assign_source_124 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_119, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SUPPORT_OPENGL_EXT_int_pos_8208_tuple, 0 ) );

    Py_DECREF( tmp_called_name_119 );
    if ( tmp_assign_source_124 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 140;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SUPPORT_OPENGL_EXT, tmp_assign_source_124 );
    tmp_source_name_120 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_120 == NULL ))
    {
        tmp_source_name_120 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_120 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 141;
        goto frame_exception_exit_1;
    }

    tmp_called_name_120 = LOOKUP_ATTRIBUTE( tmp_source_name_120, const_str_plain_Constant );
    if ( tmp_called_name_120 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 141;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 141;
    tmp_assign_source_125 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_120, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DOUBLE_BUFFER_EXT_int_pos_8209_tuple, 0 ) );

    Py_DECREF( tmp_called_name_120 );
    if ( tmp_assign_source_125 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 141;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DOUBLE_BUFFER_EXT, tmp_assign_source_125 );
    tmp_source_name_121 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_121 == NULL ))
    {
        tmp_source_name_121 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_121 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 142;
        goto frame_exception_exit_1;
    }

    tmp_called_name_121 = LOOKUP_ATTRIBUTE( tmp_source_name_121, const_str_plain_Constant );
    if ( tmp_called_name_121 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 142;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 142;
    tmp_assign_source_126 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_121, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_STEREO_EXT_int_pos_8210_tuple, 0 ) );

    Py_DECREF( tmp_called_name_121 );
    if ( tmp_assign_source_126 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 142;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_STEREO_EXT, tmp_assign_source_126 );
    tmp_source_name_122 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_122 == NULL ))
    {
        tmp_source_name_122 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_122 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 143;
        goto frame_exception_exit_1;
    }

    tmp_called_name_122 = LOOKUP_ATTRIBUTE( tmp_source_name_122, const_str_plain_Constant );
    if ( tmp_called_name_122 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 143;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 143;
    tmp_assign_source_127 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_122, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_PIXEL_TYPE_EXT_int_pos_8211_tuple, 0 ) );

    Py_DECREF( tmp_called_name_122 );
    if ( tmp_assign_source_127 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 143;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_PIXEL_TYPE_EXT, tmp_assign_source_127 );
    tmp_source_name_123 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_123 == NULL ))
    {
        tmp_source_name_123 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_123 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 144;
        goto frame_exception_exit_1;
    }

    tmp_called_name_123 = LOOKUP_ATTRIBUTE( tmp_source_name_123, const_str_plain_Constant );
    if ( tmp_called_name_123 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 144;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 144;
    tmp_assign_source_128 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_123, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_COLOR_BITS_EXT_int_pos_8212_tuple, 0 ) );

    Py_DECREF( tmp_called_name_123 );
    if ( tmp_assign_source_128 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 144;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_COLOR_BITS_EXT, tmp_assign_source_128 );
    tmp_source_name_124 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_124 == NULL ))
    {
        tmp_source_name_124 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_124 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 145;
        goto frame_exception_exit_1;
    }

    tmp_called_name_124 = LOOKUP_ATTRIBUTE( tmp_source_name_124, const_str_plain_Constant );
    if ( tmp_called_name_124 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 145;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 145;
    tmp_assign_source_129 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_124, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_RED_BITS_EXT_int_pos_8213_tuple, 0 ) );

    Py_DECREF( tmp_called_name_124 );
    if ( tmp_assign_source_129 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 145;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_RED_BITS_EXT, tmp_assign_source_129 );
    tmp_source_name_125 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_125 == NULL ))
    {
        tmp_source_name_125 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_125 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 146;
        goto frame_exception_exit_1;
    }

    tmp_called_name_125 = LOOKUP_ATTRIBUTE( tmp_source_name_125, const_str_plain_Constant );
    if ( tmp_called_name_125 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 146;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 146;
    tmp_assign_source_130 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_125, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_RED_SHIFT_EXT_int_pos_8214_tuple, 0 ) );

    Py_DECREF( tmp_called_name_125 );
    if ( tmp_assign_source_130 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 146;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_RED_SHIFT_EXT, tmp_assign_source_130 );
    tmp_source_name_126 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_126 == NULL ))
    {
        tmp_source_name_126 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_126 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 147;
        goto frame_exception_exit_1;
    }

    tmp_called_name_126 = LOOKUP_ATTRIBUTE( tmp_source_name_126, const_str_plain_Constant );
    if ( tmp_called_name_126 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 147;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 147;
    tmp_assign_source_131 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_126, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GREEN_BITS_EXT_int_pos_8215_tuple, 0 ) );

    Py_DECREF( tmp_called_name_126 );
    if ( tmp_assign_source_131 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 147;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GREEN_BITS_EXT, tmp_assign_source_131 );
    tmp_source_name_127 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_127 == NULL ))
    {
        tmp_source_name_127 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_127 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 148;
        goto frame_exception_exit_1;
    }

    tmp_called_name_127 = LOOKUP_ATTRIBUTE( tmp_source_name_127, const_str_plain_Constant );
    if ( tmp_called_name_127 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 148;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 148;
    tmp_assign_source_132 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_127, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GREEN_SHIFT_EXT_int_pos_8216_tuple, 0 ) );

    Py_DECREF( tmp_called_name_127 );
    if ( tmp_assign_source_132 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 148;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GREEN_SHIFT_EXT, tmp_assign_source_132 );
    tmp_source_name_128 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_128 == NULL ))
    {
        tmp_source_name_128 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_128 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 149;
        goto frame_exception_exit_1;
    }

    tmp_called_name_128 = LOOKUP_ATTRIBUTE( tmp_source_name_128, const_str_plain_Constant );
    if ( tmp_called_name_128 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 149;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 149;
    tmp_assign_source_133 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_128, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BLUE_BITS_EXT_int_pos_8217_tuple, 0 ) );

    Py_DECREF( tmp_called_name_128 );
    if ( tmp_assign_source_133 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 149;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BLUE_BITS_EXT, tmp_assign_source_133 );
    tmp_source_name_129 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_129 == NULL ))
    {
        tmp_source_name_129 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_129 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 150;
        goto frame_exception_exit_1;
    }

    tmp_called_name_129 = LOOKUP_ATTRIBUTE( tmp_source_name_129, const_str_plain_Constant );
    if ( tmp_called_name_129 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 150;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 150;
    tmp_assign_source_134 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_129, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BLUE_SHIFT_EXT_int_pos_8218_tuple, 0 ) );

    Py_DECREF( tmp_called_name_129 );
    if ( tmp_assign_source_134 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 150;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BLUE_SHIFT_EXT, tmp_assign_source_134 );
    tmp_source_name_130 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_130 == NULL ))
    {
        tmp_source_name_130 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_130 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 151;
        goto frame_exception_exit_1;
    }

    tmp_called_name_130 = LOOKUP_ATTRIBUTE( tmp_source_name_130, const_str_plain_Constant );
    if ( tmp_called_name_130 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 151;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 151;
    tmp_assign_source_135 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_130, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ALPHA_BITS_EXT_int_pos_8219_tuple, 0 ) );

    Py_DECREF( tmp_called_name_130 );
    if ( tmp_assign_source_135 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 151;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ALPHA_BITS_EXT, tmp_assign_source_135 );
    tmp_source_name_131 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_131 == NULL ))
    {
        tmp_source_name_131 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_131 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 152;
        goto frame_exception_exit_1;
    }

    tmp_called_name_131 = LOOKUP_ATTRIBUTE( tmp_source_name_131, const_str_plain_Constant );
    if ( tmp_called_name_131 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 152;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 152;
    tmp_assign_source_136 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_131, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ALPHA_SHIFT_EXT_int_pos_8220_tuple, 0 ) );

    Py_DECREF( tmp_called_name_131 );
    if ( tmp_assign_source_136 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 152;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ALPHA_SHIFT_EXT, tmp_assign_source_136 );
    tmp_source_name_132 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_132 == NULL ))
    {
        tmp_source_name_132 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_132 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 153;
        goto frame_exception_exit_1;
    }

    tmp_called_name_132 = LOOKUP_ATTRIBUTE( tmp_source_name_132, const_str_plain_Constant );
    if ( tmp_called_name_132 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 153;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 153;
    tmp_assign_source_137 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_132, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_BITS_EXT_int_pos_8221_tuple, 0 ) );

    Py_DECREF( tmp_called_name_132 );
    if ( tmp_assign_source_137 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 153;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_BITS_EXT, tmp_assign_source_137 );
    tmp_source_name_133 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_133 == NULL ))
    {
        tmp_source_name_133 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_133 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 154;
        goto frame_exception_exit_1;
    }

    tmp_called_name_133 = LOOKUP_ATTRIBUTE( tmp_source_name_133, const_str_plain_Constant );
    if ( tmp_called_name_133 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 154;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 154;
    tmp_assign_source_138 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_133, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_RED_BITS_EXT_int_pos_8222_tuple, 0 ) );

    Py_DECREF( tmp_called_name_133 );
    if ( tmp_assign_source_138 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 154;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_RED_BITS_EXT, tmp_assign_source_138 );
    tmp_source_name_134 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_134 == NULL ))
    {
        tmp_source_name_134 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_134 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 155;
        goto frame_exception_exit_1;
    }

    tmp_called_name_134 = LOOKUP_ATTRIBUTE( tmp_source_name_134, const_str_plain_Constant );
    if ( tmp_called_name_134 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 155;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 155;
    tmp_assign_source_139 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_134, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_GREEN_BITS_EXT_int_pos_8223_tuple, 0 ) );

    Py_DECREF( tmp_called_name_134 );
    if ( tmp_assign_source_139 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 155;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_GREEN_BITS_EXT, tmp_assign_source_139 );
    tmp_source_name_135 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_135 == NULL ))
    {
        tmp_source_name_135 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_135 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 156;
        goto frame_exception_exit_1;
    }

    tmp_called_name_135 = LOOKUP_ATTRIBUTE( tmp_source_name_135, const_str_plain_Constant );
    if ( tmp_called_name_135 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 156;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 156;
    tmp_assign_source_140 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_135, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_BLUE_BITS_EXT_int_pos_8224_tuple, 0 ) );

    Py_DECREF( tmp_called_name_135 );
    if ( tmp_assign_source_140 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 156;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_BLUE_BITS_EXT, tmp_assign_source_140 );
    tmp_source_name_136 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_136 == NULL ))
    {
        tmp_source_name_136 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_136 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 157;
        goto frame_exception_exit_1;
    }

    tmp_called_name_136 = LOOKUP_ATTRIBUTE( tmp_source_name_136, const_str_plain_Constant );
    if ( tmp_called_name_136 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 157;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 157;
    tmp_assign_source_141 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_136, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ACCUM_ALPHA_BITS_EXT_int_pos_8225_tuple, 0 ) );

    Py_DECREF( tmp_called_name_136 );
    if ( tmp_assign_source_141 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 157;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ACCUM_ALPHA_BITS_EXT, tmp_assign_source_141 );
    tmp_source_name_137 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_137 == NULL ))
    {
        tmp_source_name_137 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_137 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 158;
        goto frame_exception_exit_1;
    }

    tmp_called_name_137 = LOOKUP_ATTRIBUTE( tmp_source_name_137, const_str_plain_Constant );
    if ( tmp_called_name_137 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 158;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 158;
    tmp_assign_source_142 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_137, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DEPTH_BITS_EXT_int_pos_8226_tuple, 0 ) );

    Py_DECREF( tmp_called_name_137 );
    if ( tmp_assign_source_142 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 158;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DEPTH_BITS_EXT, tmp_assign_source_142 );
    tmp_source_name_138 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_138 == NULL ))
    {
        tmp_source_name_138 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_138 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 159;
        goto frame_exception_exit_1;
    }

    tmp_called_name_138 = LOOKUP_ATTRIBUTE( tmp_source_name_138, const_str_plain_Constant );
    if ( tmp_called_name_138 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 159;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 159;
    tmp_assign_source_143 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_138, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_STENCIL_BITS_EXT_int_pos_8227_tuple, 0 ) );

    Py_DECREF( tmp_called_name_138 );
    if ( tmp_assign_source_143 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 159;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_STENCIL_BITS_EXT, tmp_assign_source_143 );
    tmp_source_name_139 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_139 == NULL ))
    {
        tmp_source_name_139 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_139 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 160;
        goto frame_exception_exit_1;
    }

    tmp_called_name_139 = LOOKUP_ATTRIBUTE( tmp_source_name_139, const_str_plain_Constant );
    if ( tmp_called_name_139 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 160;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 160;
    tmp_assign_source_144 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_139, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_AUX_BUFFERS_EXT_int_pos_8228_tuple, 0 ) );

    Py_DECREF( tmp_called_name_139 );
    if ( tmp_assign_source_144 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 160;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_AUX_BUFFERS_EXT, tmp_assign_source_144 );
    tmp_source_name_140 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_140 == NULL ))
    {
        tmp_source_name_140 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_140 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 161;
        goto frame_exception_exit_1;
    }

    tmp_called_name_140 = LOOKUP_ATTRIBUTE( tmp_source_name_140, const_str_plain_Constant );
    if ( tmp_called_name_140 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 161;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 161;
    tmp_assign_source_145 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_140, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NO_ACCELERATION_EXT_int_pos_8229_tuple, 0 ) );

    Py_DECREF( tmp_called_name_140 );
    if ( tmp_assign_source_145 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 161;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NO_ACCELERATION_EXT, tmp_assign_source_145 );
    tmp_source_name_141 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_141 == NULL ))
    {
        tmp_source_name_141 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_141 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 162;
        goto frame_exception_exit_1;
    }

    tmp_called_name_141 = LOOKUP_ATTRIBUTE( tmp_source_name_141, const_str_plain_Constant );
    if ( tmp_called_name_141 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 162;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 162;
    tmp_assign_source_146 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_141, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENERIC_ACCELERATION_EXT_int_pos_8230_tuple, 0 ) );

    Py_DECREF( tmp_called_name_141 );
    if ( tmp_assign_source_146 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 162;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENERIC_ACCELERATION_EXT, tmp_assign_source_146 );
    tmp_source_name_142 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_142 == NULL ))
    {
        tmp_source_name_142 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_142 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 163;
        goto frame_exception_exit_1;
    }

    tmp_called_name_142 = LOOKUP_ATTRIBUTE( tmp_source_name_142, const_str_plain_Constant );
    if ( tmp_called_name_142 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 163;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 163;
    tmp_assign_source_147 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_142, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_FULL_ACCELERATION_EXT_int_pos_8231_tuple, 0 ) );

    Py_DECREF( tmp_called_name_142 );
    if ( tmp_assign_source_147 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 163;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_FULL_ACCELERATION_EXT, tmp_assign_source_147 );
    tmp_source_name_143 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_143 == NULL ))
    {
        tmp_source_name_143 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_143 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 164;
        goto frame_exception_exit_1;
    }

    tmp_called_name_143 = LOOKUP_ATTRIBUTE( tmp_source_name_143, const_str_plain_Constant );
    if ( tmp_called_name_143 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 164;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 164;
    tmp_assign_source_148 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_143, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_EXCHANGE_EXT_int_pos_8232_tuple, 0 ) );

    Py_DECREF( tmp_called_name_143 );
    if ( tmp_assign_source_148 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 164;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_EXCHANGE_EXT, tmp_assign_source_148 );
    tmp_source_name_144 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_144 == NULL ))
    {
        tmp_source_name_144 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_144 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 165;
        goto frame_exception_exit_1;
    }

    tmp_called_name_144 = LOOKUP_ATTRIBUTE( tmp_source_name_144, const_str_plain_Constant );
    if ( tmp_called_name_144 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 165;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 165;
    tmp_assign_source_149 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_144, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_COPY_EXT_int_pos_8233_tuple, 0 ) );

    Py_DECREF( tmp_called_name_144 );
    if ( tmp_assign_source_149 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 165;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_COPY_EXT, tmp_assign_source_149 );
    tmp_source_name_145 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_145 == NULL ))
    {
        tmp_source_name_145 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_145 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 166;
        goto frame_exception_exit_1;
    }

    tmp_called_name_145 = LOOKUP_ATTRIBUTE( tmp_source_name_145, const_str_plain_Constant );
    if ( tmp_called_name_145 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 166;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 166;
    tmp_assign_source_150 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_145, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SWAP_UNDEFINED_EXT_int_pos_8234_tuple, 0 ) );

    Py_DECREF( tmp_called_name_145 );
    if ( tmp_assign_source_150 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 166;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SWAP_UNDEFINED_EXT, tmp_assign_source_150 );
    tmp_source_name_146 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_146 == NULL ))
    {
        tmp_source_name_146 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_146 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 167;
        goto frame_exception_exit_1;
    }

    tmp_called_name_146 = LOOKUP_ATTRIBUTE( tmp_source_name_146, const_str_plain_Constant );
    if ( tmp_called_name_146 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 167;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 167;
    tmp_assign_source_151 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_146, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TYPE_RGBA_EXT_int_pos_8235_tuple, 0 ) );

    Py_DECREF( tmp_called_name_146 );
    if ( tmp_assign_source_151 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 167;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TYPE_RGBA_EXT, tmp_assign_source_151 );
    tmp_source_name_147 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_147 == NULL ))
    {
        tmp_source_name_147 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_147 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 168;
        goto frame_exception_exit_1;
    }

    tmp_called_name_147 = LOOKUP_ATTRIBUTE( tmp_source_name_147, const_str_plain_Constant );
    if ( tmp_called_name_147 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 168;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 168;
    tmp_assign_source_152 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_147, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TYPE_COLORINDEX_EXT_int_pos_8236_tuple, 0 ) );

    Py_DECREF( tmp_called_name_147 );
    if ( tmp_assign_source_152 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 168;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TYPE_COLORINDEX_EXT, tmp_assign_source_152 );
    tmp_source_name_148 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_148 == NULL ))
    {
        tmp_source_name_148 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_148 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 170;
        goto frame_exception_exit_1;
    }

    tmp_called_name_148 = LOOKUP_ATTRIBUTE( tmp_source_name_148, const_str_plain_Constant );
    if ( tmp_called_name_148 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 170;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 170;
    tmp_assign_source_153 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_148, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DRAW_TO_PBUFFER_EXT_int_pos_8237_tuple, 0 ) );

    Py_DECREF( tmp_called_name_148 );
    if ( tmp_assign_source_153 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 170;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DRAW_TO_PBUFFER_EXT, tmp_assign_source_153 );
    tmp_source_name_149 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_149 == NULL ))
    {
        tmp_source_name_149 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_149 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 171;
        goto frame_exception_exit_1;
    }

    tmp_called_name_149 = LOOKUP_ATTRIBUTE( tmp_source_name_149, const_str_plain_Constant );
    if ( tmp_called_name_149 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 171;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 171;
    tmp_assign_source_154 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_149, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_MAX_PBUFFER_PIXELS_EXT_int_pos_8238_tuple, 0 ) );

    Py_DECREF( tmp_called_name_149 );
    if ( tmp_assign_source_154 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 171;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_MAX_PBUFFER_PIXELS_EXT, tmp_assign_source_154 );
    tmp_source_name_150 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_150 == NULL ))
    {
        tmp_source_name_150 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_150 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 172;
        goto frame_exception_exit_1;
    }

    tmp_called_name_150 = LOOKUP_ATTRIBUTE( tmp_source_name_150, const_str_plain_Constant );
    if ( tmp_called_name_150 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 172;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 172;
    tmp_assign_source_155 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_150, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_MAX_PBUFFER_WIDTH_EXT_int_pos_8239_tuple, 0 ) );

    Py_DECREF( tmp_called_name_150 );
    if ( tmp_assign_source_155 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 172;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_MAX_PBUFFER_WIDTH_EXT, tmp_assign_source_155 );
    tmp_source_name_151 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_151 == NULL ))
    {
        tmp_source_name_151 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_151 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 173;
        goto frame_exception_exit_1;
    }

    tmp_called_name_151 = LOOKUP_ATTRIBUTE( tmp_source_name_151, const_str_plain_Constant );
    if ( tmp_called_name_151 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 173;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 173;
    tmp_assign_source_156 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_151, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_MAX_PBUFFER_HEIGHT_EXT_int_pos_8240_tuple, 0 ) );

    Py_DECREF( tmp_called_name_151 );
    if ( tmp_assign_source_156 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 173;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_MAX_PBUFFER_HEIGHT_EXT, tmp_assign_source_156 );
    tmp_source_name_152 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_152 == NULL ))
    {
        tmp_source_name_152 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_152 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 174;
        goto frame_exception_exit_1;
    }

    tmp_called_name_152 = LOOKUP_ATTRIBUTE( tmp_source_name_152, const_str_plain_Constant );
    if ( tmp_called_name_152 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 174;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 174;
    tmp_assign_source_157 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_152, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_OPTIMAL_PBUFFER_WIDTH_EXT_int_pos_8241_tuple, 0 ) );

    Py_DECREF( tmp_called_name_152 );
    if ( tmp_assign_source_157 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 174;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_OPTIMAL_PBUFFER_WIDTH_EXT, tmp_assign_source_157 );
    tmp_source_name_153 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_153 == NULL ))
    {
        tmp_source_name_153 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_153 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 175;
        goto frame_exception_exit_1;
    }

    tmp_called_name_153 = LOOKUP_ATTRIBUTE( tmp_source_name_153, const_str_plain_Constant );
    if ( tmp_called_name_153 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 175;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 175;
    tmp_assign_source_158 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_153, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_OPTIMAL_PBUFFER_HEIGHT_EXT_int_pos_8242_tuple, 0 ) );

    Py_DECREF( tmp_called_name_153 );
    if ( tmp_assign_source_158 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 175;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_OPTIMAL_PBUFFER_HEIGHT_EXT, tmp_assign_source_158 );
    tmp_source_name_154 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_154 == NULL ))
    {
        tmp_source_name_154 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_154 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 176;
        goto frame_exception_exit_1;
    }

    tmp_called_name_154 = LOOKUP_ATTRIBUTE( tmp_source_name_154, const_str_plain_Constant );
    if ( tmp_called_name_154 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 176;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 176;
    tmp_assign_source_159 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_154, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_PBUFFER_LARGEST_EXT_int_pos_8243_tuple, 0 ) );

    Py_DECREF( tmp_called_name_154 );
    if ( tmp_assign_source_159 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 176;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_PBUFFER_LARGEST_EXT, tmp_assign_source_159 );
    tmp_source_name_155 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_155 == NULL ))
    {
        tmp_source_name_155 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_155 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 177;
        goto frame_exception_exit_1;
    }

    tmp_called_name_155 = LOOKUP_ATTRIBUTE( tmp_source_name_155, const_str_plain_Constant );
    if ( tmp_called_name_155 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 177;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 177;
    tmp_assign_source_160 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_155, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_PBUFFER_WIDTH_EXT_int_pos_8244_tuple, 0 ) );

    Py_DECREF( tmp_called_name_155 );
    if ( tmp_assign_source_160 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 177;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_PBUFFER_WIDTH_EXT, tmp_assign_source_160 );
    tmp_source_name_156 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_156 == NULL ))
    {
        tmp_source_name_156 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_156 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 178;
        goto frame_exception_exit_1;
    }

    tmp_called_name_156 = LOOKUP_ATTRIBUTE( tmp_source_name_156, const_str_plain_Constant );
    if ( tmp_called_name_156 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 178;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 178;
    tmp_assign_source_161 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_156, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_PBUFFER_HEIGHT_EXT_int_pos_8245_tuple, 0 ) );

    Py_DECREF( tmp_called_name_156 );
    if ( tmp_assign_source_161 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 178;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_PBUFFER_HEIGHT_EXT, tmp_assign_source_161 );
    tmp_source_name_157 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_157 == NULL ))
    {
        tmp_source_name_157 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_157 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 180;
        goto frame_exception_exit_1;
    }

    tmp_called_name_157 = LOOKUP_ATTRIBUTE( tmp_source_name_157, const_str_plain_Constant );
    if ( tmp_called_name_157 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 180;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 180;
    tmp_assign_source_162 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_157, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DEPTH_FLOAT_EXT_int_pos_8256_tuple, 0 ) );

    Py_DECREF( tmp_called_name_157 );
    if ( tmp_assign_source_162 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 180;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DEPTH_FLOAT_EXT, tmp_assign_source_162 );
    tmp_source_name_158 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_158 == NULL ))
    {
        tmp_source_name_158 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_158 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 182;
        goto frame_exception_exit_1;
    }

    tmp_called_name_158 = LOOKUP_ATTRIBUTE( tmp_source_name_158, const_str_plain_Constant );
    if ( tmp_called_name_158 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 182;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 182;
    tmp_assign_source_163 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_158, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SAMPLE_BUFFERS_3DFX_int_pos_8288_tuple, 0 ) );

    Py_DECREF( tmp_called_name_158 );
    if ( tmp_assign_source_163 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 182;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SAMPLE_BUFFERS_3DFX, tmp_assign_source_163 );
    tmp_source_name_159 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_159 == NULL ))
    {
        tmp_source_name_159 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_159 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 183;
        goto frame_exception_exit_1;
    }

    tmp_called_name_159 = LOOKUP_ATTRIBUTE( tmp_source_name_159, const_str_plain_Constant );
    if ( tmp_called_name_159 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 183;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 183;
    tmp_assign_source_164 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_159, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SAMPLES_3DFX_int_pos_8289_tuple, 0 ) );

    Py_DECREF( tmp_called_name_159 );
    if ( tmp_assign_source_164 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 183;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SAMPLES_3DFX, tmp_assign_source_164 );
    tmp_source_name_160 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_160 == NULL ))
    {
        tmp_source_name_160 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_160 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 185;
        goto frame_exception_exit_1;
    }

    tmp_called_name_160 = LOOKUP_ATTRIBUTE( tmp_source_name_160, const_str_plain_Constant );
    if ( tmp_called_name_160 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 185;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 185;
    tmp_assign_source_165 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_160, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SAMPLE_BUFFERS_EXT_int_pos_8257_tuple, 0 ) );

    Py_DECREF( tmp_called_name_160 );
    if ( tmp_assign_source_165 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 185;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SAMPLE_BUFFERS_EXT, tmp_assign_source_165 );
    tmp_source_name_161 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_161 == NULL ))
    {
        tmp_source_name_161 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_161 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 186;
        goto frame_exception_exit_1;
    }

    tmp_called_name_161 = LOOKUP_ATTRIBUTE( tmp_source_name_161, const_str_plain_Constant );
    if ( tmp_called_name_161 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 186;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 186;
    tmp_assign_source_166 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_161, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_SAMPLES_EXT_int_pos_8258_tuple, 0 ) );

    Py_DECREF( tmp_called_name_161 );
    if ( tmp_assign_source_166 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 186;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_SAMPLES_EXT, tmp_assign_source_166 );
    tmp_source_name_162 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_162 == NULL ))
    {
        tmp_source_name_162 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_162 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 188;
        goto frame_exception_exit_1;
    }

    tmp_called_name_162 = LOOKUP_ATTRIBUTE( tmp_source_name_162, const_str_plain_Constant );
    if ( tmp_called_name_162 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 188;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 188;
    tmp_assign_source_167 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_162, &PyTuple_GET_ITEM( const_tuple_str_digest_2380c6d01ac5844ca6988b0ad90cfda4_int_pos_8272_tuple, 0 ) );

    Py_DECREF( tmp_called_name_162 );
    if ( tmp_assign_source_167 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 188;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_digest_2380c6d01ac5844ca6988b0ad90cfda4, tmp_assign_source_167 );
    tmp_source_name_163 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_163 == NULL ))
    {
        tmp_source_name_163 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_163 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 189;
        goto frame_exception_exit_1;
    }

    tmp_called_name_163 = LOOKUP_ATTRIBUTE( tmp_source_name_163, const_str_plain_Constant );
    if ( tmp_called_name_163 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 189;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 189;
    tmp_assign_source_168 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_163, &PyTuple_GET_ITEM( const_tuple_623fcb4092987ca96ff644a39cd644f3_tuple, 0 ) );

    Py_DECREF( tmp_called_name_163 );
    if ( tmp_assign_source_168 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 189;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D, tmp_assign_source_168 );
    tmp_source_name_164 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_164 == NULL ))
    {
        tmp_source_name_164 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_164 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 190;
        goto frame_exception_exit_1;
    }

    tmp_called_name_164 = LOOKUP_ATTRIBUTE( tmp_source_name_164, const_str_plain_Constant );
    if ( tmp_called_name_164 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 190;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 190;
    tmp_assign_source_169 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_164, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D_int_pos_8274_tuple, 0 ) );

    Py_DECREF( tmp_called_name_164 );
    if ( tmp_assign_source_169 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 190;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D, tmp_assign_source_169 );
    tmp_source_name_165 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_165 == NULL ))
    {
        tmp_source_name_165 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_165 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 191;
        goto frame_exception_exit_1;
    }

    tmp_called_name_165 = LOOKUP_ATTRIBUTE( tmp_source_name_165, const_str_plain_Constant );
    if ( tmp_called_name_165 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 191;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 191;
    tmp_assign_source_170 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_165, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D_int_pos_8275_tuple, 0 ) );

    Py_DECREF( tmp_called_name_165 );
    if ( tmp_assign_source_170 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 191;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D, tmp_assign_source_170 );
    tmp_source_name_166 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_166 == NULL ))
    {
        tmp_source_name_166 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_166 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 193;
        goto frame_exception_exit_1;
    }

    tmp_called_name_166 = LOOKUP_ATTRIBUTE( tmp_source_name_166, const_str_plain_Constant );
    if ( tmp_called_name_166 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 193;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 193;
    tmp_assign_source_171 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_166, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GAMMA_TABLE_SIZE_I3D_int_pos_8270_tuple, 0 ) );

    Py_DECREF( tmp_called_name_166 );
    if ( tmp_assign_source_171 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 193;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GAMMA_TABLE_SIZE_I3D, tmp_assign_source_171 );
    tmp_source_name_167 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_167 == NULL ))
    {
        tmp_source_name_167 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_167 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 194;
        goto frame_exception_exit_1;
    }

    tmp_called_name_167 = LOOKUP_ATTRIBUTE( tmp_source_name_167, const_str_plain_Constant );
    if ( tmp_called_name_167 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 194;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 194;
    tmp_assign_source_172 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_167, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GAMMA_EXCLUDE_DESKTOP_I3D_int_pos_8271_tuple, 0 ) );

    Py_DECREF( tmp_called_name_167 );
    if ( tmp_assign_source_172 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 194;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GAMMA_EXCLUDE_DESKTOP_I3D, tmp_assign_source_172 );
    tmp_source_name_168 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_168 == NULL ))
    {
        tmp_source_name_168 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_168 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 196;
        goto frame_exception_exit_1;
    }

    tmp_called_name_168 = LOOKUP_ATTRIBUTE( tmp_source_name_168, const_str_plain_Constant );
    if ( tmp_called_name_168 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 196;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 196;
    tmp_assign_source_173 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_168, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENLOCK_SOURCE_MULTIVIEW_I3D_int_pos_8260_tuple, 0 ) );

    Py_DECREF( tmp_called_name_168 );
    if ( tmp_assign_source_173 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 196;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENLOCK_SOURCE_MULTIVIEW_I3D, tmp_assign_source_173 );
    tmp_source_name_169 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_169 == NULL ))
    {
        tmp_source_name_169 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_169 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 197;
        goto frame_exception_exit_1;
    }

    tmp_called_name_169 = LOOKUP_ATTRIBUTE( tmp_source_name_169, const_str_plain_Constant );
    if ( tmp_called_name_169 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 197;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 197;
    tmp_assign_source_174 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_169, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D_int_pos_8261_tuple, 0 ) );

    Py_DECREF( tmp_called_name_169 );
    if ( tmp_assign_source_174 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 197;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D, tmp_assign_source_174 );
    tmp_source_name_170 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_170 == NULL ))
    {
        tmp_source_name_170 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_170 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 198;
        goto frame_exception_exit_1;
    }

    tmp_called_name_170 = LOOKUP_ATTRIBUTE( tmp_source_name_170, const_str_plain_Constant );
    if ( tmp_called_name_170 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 198;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 198;
    tmp_assign_source_175 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_170, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D_int_pos_8262_tuple, 0 ) );

    Py_DECREF( tmp_called_name_170 );
    if ( tmp_assign_source_175 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 198;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D, tmp_assign_source_175 );
    tmp_source_name_171 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_171 == NULL ))
    {
        tmp_source_name_171 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_171 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 199;
        goto frame_exception_exit_1;
    }

    tmp_called_name_171 = LOOKUP_ATTRIBUTE( tmp_source_name_171, const_str_plain_Constant );
    if ( tmp_called_name_171 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 199;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 199;
    tmp_assign_source_176 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_171, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D_int_pos_8263_tuple, 0 ) );

    Py_DECREF( tmp_called_name_171 );
    if ( tmp_assign_source_176 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 199;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D, tmp_assign_source_176 );
    tmp_source_name_172 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_172 == NULL ))
    {
        tmp_source_name_172 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_172 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 200;
        goto frame_exception_exit_1;
    }

    tmp_called_name_172 = LOOKUP_ATTRIBUTE( tmp_source_name_172, const_str_plain_Constant );
    if ( tmp_called_name_172 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 200;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 200;
    tmp_assign_source_177 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_172, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D_int_pos_8264_tuple, 0 ) );

    Py_DECREF( tmp_called_name_172 );
    if ( tmp_assign_source_177 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 200;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D, tmp_assign_source_177 );
    tmp_source_name_173 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_173 == NULL ))
    {
        tmp_source_name_173 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_173 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 201;
        goto frame_exception_exit_1;
    }

    tmp_called_name_173 = LOOKUP_ATTRIBUTE( tmp_source_name_173, const_str_plain_Constant );
    if ( tmp_called_name_173 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 201;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 201;
    tmp_assign_source_178 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_173, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D_int_pos_8265_tuple, 0 ) );

    Py_DECREF( tmp_called_name_173 );
    if ( tmp_assign_source_178 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 201;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D, tmp_assign_source_178 );
    tmp_source_name_174 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_174 == NULL ))
    {
        tmp_source_name_174 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_174 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 202;
        goto frame_exception_exit_1;
    }

    tmp_called_name_174 = LOOKUP_ATTRIBUTE( tmp_source_name_174, const_str_plain_Constant );
    if ( tmp_called_name_174 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 202;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 202;
    tmp_assign_source_179 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_174, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D_int_pos_8266_tuple, 0 ) );

    Py_DECREF( tmp_called_name_174 );
    if ( tmp_assign_source_179 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 202;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D, tmp_assign_source_179 );
    tmp_source_name_175 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_175 == NULL ))
    {
        tmp_source_name_175 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_175 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 203;
        goto frame_exception_exit_1;
    }

    tmp_called_name_175 = LOOKUP_ATTRIBUTE( tmp_source_name_175, const_str_plain_Constant );
    if ( tmp_called_name_175 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 203;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 203;
    tmp_assign_source_180 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_175, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENLOCK_SOURCE_EDGE_RISING_I3D_int_pos_8267_tuple, 0 ) );

    Py_DECREF( tmp_called_name_175 );
    if ( tmp_assign_source_180 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 203;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENLOCK_SOURCE_EDGE_RISING_I3D, tmp_assign_source_180 );
    tmp_source_name_176 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_176 == NULL ))
    {
        tmp_source_name_176 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_176 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 204;
        goto frame_exception_exit_1;
    }

    tmp_called_name_176 = LOOKUP_ATTRIBUTE( tmp_source_name_176, const_str_plain_Constant );
    if ( tmp_called_name_176 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 204;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 204;
    tmp_assign_source_181 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_176, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D_int_pos_8268_tuple, 0 ) );

    Py_DECREF( tmp_called_name_176 );
    if ( tmp_assign_source_181 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 204;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D, tmp_assign_source_181 );
    tmp_source_name_177 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_177 == NULL ))
    {
        tmp_source_name_177 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_177 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 206;
        goto frame_exception_exit_1;
    }

    tmp_called_name_177 = LOOKUP_ATTRIBUTE( tmp_source_name_177, const_str_plain_Constant );
    if ( tmp_called_name_177 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 206;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 206;
    tmp_assign_source_182 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_177, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_IMAGE_BUFFER_MIN_ACCESS_I3D_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_177 );
    if ( tmp_assign_source_182 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 206;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_IMAGE_BUFFER_MIN_ACCESS_I3D, tmp_assign_source_182 );
    tmp_source_name_178 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_178 == NULL ))
    {
        tmp_source_name_178 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_178 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 207;
        goto frame_exception_exit_1;
    }

    tmp_called_name_178 = LOOKUP_ATTRIBUTE( tmp_source_name_178, const_str_plain_Constant );
    if ( tmp_called_name_178 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 207;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 207;
    tmp_assign_source_183 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_178, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_IMAGE_BUFFER_LOCK_I3D_int_pos_2_tuple, 0 ) );

    Py_DECREF( tmp_called_name_178 );
    if ( tmp_assign_source_183 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 207;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_IMAGE_BUFFER_LOCK_I3D, tmp_assign_source_183 );
    tmp_source_name_179 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_179 == NULL ))
    {
        tmp_source_name_179 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_179 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 210;
        goto frame_exception_exit_1;
    }

    tmp_called_name_179 = LOOKUP_ATTRIBUTE( tmp_source_name_179, const_str_plain_Constant );
    if ( tmp_called_name_179 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 210;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 210;
    tmp_assign_source_184 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_179, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BIND_TO_TEXTURE_DEPTH_NV_int_pos_8355_tuple, 0 ) );

    Py_DECREF( tmp_called_name_179 );
    if ( tmp_assign_source_184 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 210;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BIND_TO_TEXTURE_DEPTH_NV, tmp_assign_source_184 );
    tmp_source_name_180 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_180 == NULL ))
    {
        tmp_source_name_180 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_180 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 211;
        goto frame_exception_exit_1;
    }

    tmp_called_name_180 = LOOKUP_ATTRIBUTE( tmp_source_name_180, const_str_plain_Constant );
    if ( tmp_called_name_180 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 211;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 211;
    tmp_assign_source_185 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_180, &PyTuple_GET_ITEM( const_tuple_319bcfba869469211ee3db92c32e6cb2_tuple, 0 ) );

    Py_DECREF( tmp_called_name_180 );
    if ( tmp_assign_source_185 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 211;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV, tmp_assign_source_185 );
    tmp_source_name_181 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_181 == NULL ))
    {
        tmp_source_name_181 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_181 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 212;
        goto frame_exception_exit_1;
    }

    tmp_called_name_181 = LOOKUP_ATTRIBUTE( tmp_source_name_181, const_str_plain_Constant );
    if ( tmp_called_name_181 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 212;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 212;
    tmp_assign_source_186 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_181, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DEPTH_TEXTURE_FORMAT_NV_int_pos_8357_tuple, 0 ) );

    Py_DECREF( tmp_called_name_181 );
    if ( tmp_assign_source_186 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 212;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DEPTH_TEXTURE_FORMAT_NV, tmp_assign_source_186 );
    tmp_source_name_182 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_182 == NULL ))
    {
        tmp_source_name_182 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_182 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 213;
        goto frame_exception_exit_1;
    }

    tmp_called_name_182 = LOOKUP_ATTRIBUTE( tmp_source_name_182, const_str_plain_Constant );
    if ( tmp_called_name_182 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 213;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 213;
    tmp_assign_source_187 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_182, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_DEPTH_COMPONENT_NV_int_pos_8358_tuple, 0 ) );

    Py_DECREF( tmp_called_name_182 );
    if ( tmp_assign_source_187 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 213;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_DEPTH_COMPONENT_NV, tmp_assign_source_187 );
    tmp_source_name_183 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_183 == NULL ))
    {
        tmp_source_name_183 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_183 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 214;
        goto frame_exception_exit_1;
    }

    tmp_called_name_183 = LOOKUP_ATTRIBUTE( tmp_source_name_183, const_str_plain_Constant );
    if ( tmp_called_name_183 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 214;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 214;
    tmp_assign_source_188 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_183, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_DEPTH_COMPONENT_NV_int_pos_8359_tuple, 0 ) );

    Py_DECREF( tmp_called_name_183 );
    if ( tmp_assign_source_188 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 214;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_DEPTH_COMPONENT_NV, tmp_assign_source_188 );
    tmp_source_name_184 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_184 == NULL ))
    {
        tmp_source_name_184 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_184 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 216;
        goto frame_exception_exit_1;
    }

    tmp_called_name_184 = LOOKUP_ATTRIBUTE( tmp_source_name_184, const_str_plain_Constant );
    if ( tmp_called_name_184 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 216;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 216;
    tmp_assign_source_189 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_184, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV_int_pos_8352_tuple, 0 ) );

    Py_DECREF( tmp_called_name_184 );
    if ( tmp_assign_source_189 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 216;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV, tmp_assign_source_189 );
    tmp_source_name_185 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_185 == NULL ))
    {
        tmp_source_name_185 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_185 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 217;
        goto frame_exception_exit_1;
    }

    tmp_called_name_185 = LOOKUP_ATTRIBUTE( tmp_source_name_185, const_str_plain_Constant );
    if ( tmp_called_name_185 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 217;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 217;
    tmp_assign_source_190 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_185, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV_int_pos_8353_tuple, 0 ) );

    Py_DECREF( tmp_called_name_185 );
    if ( tmp_assign_source_190 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 217;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV, tmp_assign_source_190 );
    tmp_source_name_186 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_186 == NULL ))
    {
        tmp_source_name_186 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_186 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 218;
        goto frame_exception_exit_1;
    }

    tmp_called_name_186 = LOOKUP_ATTRIBUTE( tmp_source_name_186, const_str_plain_Constant );
    if ( tmp_called_name_186 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 218;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 218;
    tmp_assign_source_191 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_186, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_RECTANGLE_NV_int_pos_8354_tuple, 0 ) );

    Py_DECREF( tmp_called_name_186 );
    if ( tmp_assign_source_191 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 218;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_RECTANGLE_NV, tmp_assign_source_191 );
    tmp_source_name_187 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_187 == NULL ))
    {
        tmp_source_name_187 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_187 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 220;
        goto frame_exception_exit_1;
    }

    tmp_called_name_187 = LOOKUP_ATTRIBUTE( tmp_source_name_187, const_str_plain_Constant );
    if ( tmp_called_name_187 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 220;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 220;
    tmp_assign_source_192 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_187, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TYPE_RGBA_FLOAT_ATI_int_pos_8608_tuple, 0 ) );

    Py_DECREF( tmp_called_name_187 );
    if ( tmp_assign_source_192 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 220;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TYPE_RGBA_FLOAT_ATI, tmp_assign_source_192 );
    tmp_source_name_188 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_188 == NULL ))
    {
        tmp_source_name_188 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_188 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 222;
        goto frame_exception_exit_1;
    }

    tmp_called_name_188 = LOOKUP_ATTRIBUTE( tmp_source_name_188, const_str_plain_Constant );
    if ( tmp_called_name_188 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 222;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 222;
    tmp_assign_source_193 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_188, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_FLOAT_COMPONENTS_NV_int_pos_8368_tuple, 0 ) );

    Py_DECREF( tmp_called_name_188 );
    if ( tmp_assign_source_193 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 222;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_FLOAT_COMPONENTS_NV, tmp_assign_source_193 );
    tmp_source_name_189 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_189 == NULL ))
    {
        tmp_source_name_189 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_189 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 223;
        goto frame_exception_exit_1;
    }

    tmp_called_name_189 = LOOKUP_ATTRIBUTE( tmp_source_name_189, const_str_plain_Constant );
    if ( tmp_called_name_189 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 223;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 223;
    tmp_assign_source_194 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_189, &PyTuple_GET_ITEM( const_tuple_3cc1ca03b3e49c077d8c227b09bee168_tuple, 0 ) );

    Py_DECREF( tmp_called_name_189 );
    if ( tmp_assign_source_194 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 223;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV, tmp_assign_source_194 );
    tmp_source_name_190 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_190 == NULL ))
    {
        tmp_source_name_190 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_190 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 224;
        goto frame_exception_exit_1;
    }

    tmp_called_name_190 = LOOKUP_ATTRIBUTE( tmp_source_name_190, const_str_plain_Constant );
    if ( tmp_called_name_190 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 224;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 224;
    tmp_assign_source_195 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_190, &PyTuple_GET_ITEM( const_tuple_str_digest_30465bcaf64d1d4b0620be33eab3de61_int_pos_8370_tuple, 0 ) );

    Py_DECREF( tmp_called_name_190 );
    if ( tmp_assign_source_195 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 224;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_digest_30465bcaf64d1d4b0620be33eab3de61, tmp_assign_source_195 );
    tmp_source_name_191 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_191 == NULL ))
    {
        tmp_source_name_191 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_191 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 225;
        goto frame_exception_exit_1;
    }

    tmp_called_name_191 = LOOKUP_ATTRIBUTE( tmp_source_name_191, const_str_plain_Constant );
    if ( tmp_called_name_191 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 225;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 225;
    tmp_assign_source_196 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_191, &PyTuple_GET_ITEM( const_tuple_str_digest_0ea0c287cb926398b38e259bc92907fa_int_pos_8371_tuple, 0 ) );

    Py_DECREF( tmp_called_name_191 );
    if ( tmp_assign_source_196 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 225;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_digest_0ea0c287cb926398b38e259bc92907fa, tmp_assign_source_196 );
    tmp_source_name_192 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_192 == NULL ))
    {
        tmp_source_name_192 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_192 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 226;
        goto frame_exception_exit_1;
    }

    tmp_called_name_192 = LOOKUP_ATTRIBUTE( tmp_source_name_192, const_str_plain_Constant );
    if ( tmp_called_name_192 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 226;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 226;
    tmp_assign_source_197 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_192, &PyTuple_GET_ITEM( const_tuple_str_digest_47836e5a0b8ae4195bbd9a5fb0b76173_int_pos_8372_tuple, 0 ) );

    Py_DECREF( tmp_called_name_192 );
    if ( tmp_assign_source_197 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 226;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_digest_47836e5a0b8ae4195bbd9a5fb0b76173, tmp_assign_source_197 );
    tmp_source_name_193 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_193 == NULL ))
    {
        tmp_source_name_193 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_193 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 227;
        goto frame_exception_exit_1;
    }

    tmp_called_name_193 = LOOKUP_ATTRIBUTE( tmp_source_name_193, const_str_plain_Constant );
    if ( tmp_called_name_193 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 227;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 227;
    tmp_assign_source_198 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_193, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_FLOAT_R_NV_int_pos_8373_tuple, 0 ) );

    Py_DECREF( tmp_called_name_193 );
    if ( tmp_assign_source_198 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 227;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_FLOAT_R_NV, tmp_assign_source_198 );
    tmp_source_name_194 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_194 == NULL ))
    {
        tmp_source_name_194 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_194 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 228;
        goto frame_exception_exit_1;
    }

    tmp_called_name_194 = LOOKUP_ATTRIBUTE( tmp_source_name_194, const_str_plain_Constant );
    if ( tmp_called_name_194 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 228;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 228;
    tmp_assign_source_199 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_194, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_FLOAT_RG_NV_int_pos_8374_tuple, 0 ) );

    Py_DECREF( tmp_called_name_194 );
    if ( tmp_assign_source_199 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 228;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_FLOAT_RG_NV, tmp_assign_source_199 );
    tmp_source_name_195 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_195 == NULL ))
    {
        tmp_source_name_195 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_195 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 229;
        goto frame_exception_exit_1;
    }

    tmp_called_name_195 = LOOKUP_ATTRIBUTE( tmp_source_name_195, const_str_plain_Constant );
    if ( tmp_called_name_195 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 229;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 229;
    tmp_assign_source_200 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_195, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_FLOAT_RGB_NV_int_pos_8375_tuple, 0 ) );

    Py_DECREF( tmp_called_name_195 );
    if ( tmp_assign_source_200 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 229;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_FLOAT_RGB_NV, tmp_assign_source_200 );
    tmp_source_name_196 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_196 == NULL ))
    {
        tmp_source_name_196 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_196 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 230;
        goto frame_exception_exit_1;
    }

    tmp_called_name_196 = LOOKUP_ATTRIBUTE( tmp_source_name_196, const_str_plain_Constant );
    if ( tmp_called_name_196 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 230;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 230;
    tmp_assign_source_201 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_196, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_TEXTURE_FLOAT_RGBA_NV_int_pos_8376_tuple, 0 ) );

    Py_DECREF( tmp_called_name_196 );
    if ( tmp_assign_source_201 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 230;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_TEXTURE_FLOAT_RGBA_NV, tmp_assign_source_201 );
    tmp_called_name_197 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_197 == NULL ))
    {
        tmp_called_name_197 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_197 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 232;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 232;
    tmp_assign_source_202 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_197, &PyTuple_GET_ITEM( const_tuple_none_tuple, 0 ) );

    if ( tmp_assign_source_202 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 232;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE, tmp_assign_source_202 );
    tmp_assign_source_203 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_assign_source_203 == NULL ))
    {
        tmp_assign_source_203 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_assign_source_203 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 233;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB, tmp_assign_source_203 );
    tmp_assign_source_204 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_assign_source_204 == NULL ))
    {
        tmp_assign_source_204 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_assign_source_204 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 235;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT, tmp_assign_source_204 );
    tmp_source_name_197 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_197 == NULL ))
    {
        tmp_source_name_197 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_197 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 237;
        goto frame_exception_exit_1;
    }

    tmp_called_name_198 = LOOKUP_ATTRIBUTE( tmp_source_name_197, const_str_plain_Constant );
    if ( tmp_called_name_198 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 237;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 237;
    tmp_assign_source_205 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_198, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ARB_buffer_region_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_198 );
    if ( tmp_assign_source_205 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 237;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ARB_buffer_region, tmp_assign_source_205 );
    tmp_assign_source_206 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_assign_source_206 == NULL ))
    {
        tmp_assign_source_206 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_assign_source_206 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 238;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC, tmp_assign_source_206 );
    tmp_assign_source_207 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_uint );

    if (unlikely( tmp_assign_source_207 == NULL ))
    {
        tmp_assign_source_207 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_uint );
    }

    if ( tmp_assign_source_207 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_uint" );
        exception_tb = NULL;

        exception_lineno = 239;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT, tmp_assign_source_207 );
    tmp_source_name_198 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_198 == NULL ))
    {
        tmp_source_name_198 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_198 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 240;
        goto frame_exception_exit_1;
    }

    tmp_called_name_199 = LOOKUP_ATTRIBUTE( tmp_source_name_198, const_str_plain_createBaseFunction );
    if ( tmp_called_name_199 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 240;
        goto frame_exception_exit_1;
    }
    tmp_args_name_1 = const_tuple_str_plain_wglCreateBufferRegionARB_tuple;
    tmp_kw_name_1 = _PyDict_NewPresized( 5 );
    tmp_source_name_199 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_199 == NULL ))
    {
        tmp_source_name_199 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_199 == NULL )
    {
        Py_DECREF( tmp_called_name_199 );
        Py_DECREF( tmp_kw_name_1 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 241;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_1 = LOOKUP_ATTRIBUTE( tmp_source_name_199, const_str_plain_GL );
    if ( tmp_dict_value_1 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_199 );
        Py_DECREF( tmp_kw_name_1 );

        exception_lineno = 241;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_1 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_1, tmp_dict_key_1, tmp_dict_value_1 );
    Py_DECREF( tmp_dict_value_1 );
    tmp_dict_value_2 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_dict_value_2 == NULL ))
    {
        tmp_dict_value_2 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_dict_value_2 == NULL )
    {
        Py_DECREF( tmp_called_name_199 );
        Py_DECREF( tmp_kw_name_1 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 241;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_2 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_1, tmp_dict_key_2, tmp_dict_value_2 );
    tmp_dict_value_3 = PyList_New( 3 );
    tmp_list_element_1 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_1 == NULL ))
    {
        tmp_list_element_1 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_1 == NULL )
    {
        Py_DECREF( tmp_called_name_199 );
        Py_DECREF( tmp_kw_name_1 );
        Py_DECREF( tmp_dict_value_3 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 242;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_1 );
    PyList_SET_ITEM( tmp_dict_value_3, 0, tmp_list_element_1 );
    tmp_list_element_1 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_1 == NULL ))
    {
        tmp_list_element_1 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_1 == NULL )
    {
        Py_DECREF( tmp_called_name_199 );
        Py_DECREF( tmp_kw_name_1 );
        Py_DECREF( tmp_dict_value_3 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 242;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_1 );
    PyList_SET_ITEM( tmp_dict_value_3, 1, tmp_list_element_1 );
    tmp_list_element_1 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_1 == NULL ))
    {
        tmp_list_element_1 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_1 == NULL )
    {
        Py_DECREF( tmp_called_name_199 );
        Py_DECREF( tmp_kw_name_1 );
        Py_DECREF( tmp_dict_value_3 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 242;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_1 );
    PyList_SET_ITEM( tmp_dict_value_3, 2, tmp_list_element_1 );
    tmp_dict_key_3 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_1, tmp_dict_key_3, tmp_dict_value_3 );
    Py_DECREF( tmp_dict_value_3 );
    tmp_dict_value_4 = const_str_digest_71f0e641563f516f91c12581a1c6716a;
    tmp_dict_key_4 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_1, tmp_dict_key_4, tmp_dict_value_4 );
    tmp_dict_value_5 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_plain_None_list );
    tmp_dict_key_5 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_1, tmp_dict_key_5, tmp_dict_value_5 );
    Py_DECREF( tmp_dict_value_5 );
    frame_module->f_lineno = 244;
    tmp_assign_source_208 = CALL_FUNCTION( tmp_called_name_199, tmp_args_name_1, tmp_kw_name_1 );
    Py_DECREF( tmp_called_name_199 );
    Py_DECREF( tmp_kw_name_1 );
    if ( tmp_assign_source_208 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 244;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglCreateBufferRegionARB, tmp_assign_source_208 );
    tmp_assign_source_209 = Py_None;
    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_VOID, tmp_assign_source_209 );
    tmp_source_name_200 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_200 == NULL ))
    {
        tmp_source_name_200 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_200 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 248;
        goto frame_exception_exit_1;
    }

    tmp_called_name_200 = LOOKUP_ATTRIBUTE( tmp_source_name_200, const_str_plain_createBaseFunction );
    if ( tmp_called_name_200 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 248;
        goto frame_exception_exit_1;
    }
    tmp_args_name_2 = const_tuple_str_plain_wglDeleteBufferRegionARB_tuple;
    tmp_kw_name_2 = _PyDict_NewPresized( 5 );
    tmp_source_name_201 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_201 == NULL ))
    {
        tmp_source_name_201 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_201 == NULL )
    {
        Py_DECREF( tmp_called_name_200 );
        Py_DECREF( tmp_kw_name_2 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 249;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_6 = LOOKUP_ATTRIBUTE( tmp_source_name_201, const_str_plain_GL );
    if ( tmp_dict_value_6 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_200 );
        Py_DECREF( tmp_kw_name_2 );

        exception_lineno = 249;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_6 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_2, tmp_dict_key_6, tmp_dict_value_6 );
    Py_DECREF( tmp_dict_value_6 );
    tmp_dict_value_7 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_VOID );

    if (unlikely( tmp_dict_value_7 == NULL ))
    {
        tmp_dict_value_7 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_VOID );
    }

    if ( tmp_dict_value_7 == NULL )
    {
        Py_DECREF( tmp_called_name_200 );
        Py_DECREF( tmp_kw_name_2 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "VOID" );
        exception_tb = NULL;

        exception_lineno = 249;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_7 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_2, tmp_dict_key_7, tmp_dict_value_7 );
    tmp_dict_value_8 = PyList_New( 1 );
    tmp_list_element_2 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_list_element_2 == NULL ))
    {
        tmp_list_element_2 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_list_element_2 == NULL )
    {
        Py_DECREF( tmp_called_name_200 );
        Py_DECREF( tmp_kw_name_2 );
        Py_DECREF( tmp_dict_value_8 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 250;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_2 );
    PyList_SET_ITEM( tmp_dict_value_8, 0, tmp_list_element_2 );
    tmp_dict_key_8 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_2, tmp_dict_key_8, tmp_dict_value_8 );
    Py_DECREF( tmp_dict_value_8 );
    tmp_dict_value_9 = const_str_digest_3567921037b9a6b20e27b42204f2cbbe;
    tmp_dict_key_9 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_2, tmp_dict_key_9, tmp_dict_value_9 );
    tmp_dict_value_10 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_10 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_2, tmp_dict_key_10, tmp_dict_value_10 );
    Py_DECREF( tmp_dict_value_10 );
    frame_module->f_lineno = 252;
    tmp_assign_source_210 = CALL_FUNCTION( tmp_called_name_200, tmp_args_name_2, tmp_kw_name_2 );
    Py_DECREF( tmp_called_name_200 );
    Py_DECREF( tmp_kw_name_2 );
    if ( tmp_assign_source_210 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 252;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglDeleteBufferRegionARB, tmp_assign_source_210 );
    tmp_assign_source_211 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_long );

    if (unlikely( tmp_assign_source_211 == NULL ))
    {
        tmp_assign_source_211 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_long );
    }

    if ( tmp_assign_source_211 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_long" );
        exception_tb = NULL;

        exception_lineno = 255;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL, tmp_assign_source_211 );
    tmp_source_name_202 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_202 == NULL ))
    {
        tmp_source_name_202 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_202 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 256;
        goto frame_exception_exit_1;
    }

    tmp_called_name_201 = LOOKUP_ATTRIBUTE( tmp_source_name_202, const_str_plain_createBaseFunction );
    if ( tmp_called_name_201 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 256;
        goto frame_exception_exit_1;
    }
    tmp_args_name_3 = const_tuple_str_plain_wglSaveBufferRegionARB_tuple;
    tmp_kw_name_3 = _PyDict_NewPresized( 5 );
    tmp_source_name_203 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_203 == NULL ))
    {
        tmp_source_name_203 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_203 == NULL )
    {
        Py_DECREF( tmp_called_name_201 );
        Py_DECREF( tmp_kw_name_3 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 257;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_11 = LOOKUP_ATTRIBUTE( tmp_source_name_203, const_str_plain_GL );
    if ( tmp_dict_value_11 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_201 );
        Py_DECREF( tmp_kw_name_3 );

        exception_lineno = 257;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_11 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_3, tmp_dict_key_11, tmp_dict_value_11 );
    Py_DECREF( tmp_dict_value_11 );
    tmp_dict_value_12 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_12 == NULL ))
    {
        tmp_dict_value_12 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_12 == NULL )
    {
        Py_DECREF( tmp_called_name_201 );
        Py_DECREF( tmp_kw_name_3 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 257;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_12 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_3, tmp_dict_key_12, tmp_dict_value_12 );
    tmp_dict_value_13 = PyList_New( 5 );
    tmp_list_element_3 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_list_element_3 == NULL ))
    {
        tmp_list_element_3 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_list_element_3 == NULL )
    {
        Py_DECREF( tmp_called_name_201 );
        Py_DECREF( tmp_kw_name_3 );
        Py_DECREF( tmp_dict_value_13 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 258;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_3 );
    PyList_SET_ITEM( tmp_dict_value_13, 0, tmp_list_element_3 );
    tmp_list_element_3 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_3 == NULL ))
    {
        tmp_list_element_3 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_3 == NULL )
    {
        Py_DECREF( tmp_called_name_201 );
        Py_DECREF( tmp_kw_name_3 );
        Py_DECREF( tmp_dict_value_13 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 258;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_3 );
    PyList_SET_ITEM( tmp_dict_value_13, 1, tmp_list_element_3 );
    tmp_list_element_3 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_3 == NULL ))
    {
        tmp_list_element_3 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_3 == NULL )
    {
        Py_DECREF( tmp_called_name_201 );
        Py_DECREF( tmp_kw_name_3 );
        Py_DECREF( tmp_dict_value_13 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 258;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_3 );
    PyList_SET_ITEM( tmp_dict_value_13, 2, tmp_list_element_3 );
    tmp_list_element_3 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_3 == NULL ))
    {
        tmp_list_element_3 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_3 == NULL )
    {
        Py_DECREF( tmp_called_name_201 );
        Py_DECREF( tmp_kw_name_3 );
        Py_DECREF( tmp_dict_value_13 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 258;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_3 );
    PyList_SET_ITEM( tmp_dict_value_13, 3, tmp_list_element_3 );
    tmp_list_element_3 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_3 == NULL ))
    {
        tmp_list_element_3 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_3 == NULL )
    {
        Py_DECREF( tmp_called_name_201 );
        Py_DECREF( tmp_kw_name_3 );
        Py_DECREF( tmp_dict_value_13 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 258;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_3 );
    PyList_SET_ITEM( tmp_dict_value_13, 4, tmp_list_element_3 );
    tmp_dict_key_13 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_3, tmp_dict_key_13, tmp_dict_value_13 );
    Py_DECREF( tmp_dict_value_13 );
    tmp_dict_value_14 = const_str_digest_4e68b11602a579fdb5256a8e4b2525d7;
    tmp_dict_key_14 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_3, tmp_dict_key_14, tmp_dict_value_14 );
    tmp_dict_value_15 = LIST_COPY( const_list_ff8e1460aff9a2a091ff1bd4618c4db3_list );
    tmp_dict_key_15 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_3, tmp_dict_key_15, tmp_dict_value_15 );
    Py_DECREF( tmp_dict_value_15 );
    frame_module->f_lineno = 260;
    tmp_assign_source_212 = CALL_FUNCTION( tmp_called_name_201, tmp_args_name_3, tmp_kw_name_3 );
    Py_DECREF( tmp_called_name_201 );
    Py_DECREF( tmp_kw_name_3 );
    if ( tmp_assign_source_212 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 260;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglSaveBufferRegionARB, tmp_assign_source_212 );
    tmp_source_name_204 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_204 == NULL ))
    {
        tmp_source_name_204 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_204 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 263;
        goto frame_exception_exit_1;
    }

    tmp_called_name_202 = LOOKUP_ATTRIBUTE( tmp_source_name_204, const_str_plain_createBaseFunction );
    if ( tmp_called_name_202 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 263;
        goto frame_exception_exit_1;
    }
    tmp_args_name_4 = const_tuple_str_plain_wglRestoreBufferRegionARB_tuple;
    tmp_kw_name_4 = _PyDict_NewPresized( 5 );
    tmp_source_name_205 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_205 == NULL ))
    {
        tmp_source_name_205 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_205 == NULL )
    {
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 264;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_16 = LOOKUP_ATTRIBUTE( tmp_source_name_205, const_str_plain_GL );
    if ( tmp_dict_value_16 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );

        exception_lineno = 264;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_16 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_4, tmp_dict_key_16, tmp_dict_value_16 );
    Py_DECREF( tmp_dict_value_16 );
    tmp_dict_value_17 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_17 == NULL ))
    {
        tmp_dict_value_17 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_17 == NULL )
    {
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 264;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_17 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_4, tmp_dict_key_17, tmp_dict_value_17 );
    tmp_dict_value_18 = PyList_New( 7 );
    tmp_list_element_4 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_list_element_4 == NULL ))
    {
        tmp_list_element_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_list_element_4 == NULL )
    {
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );
        Py_DECREF( tmp_dict_value_18 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 265;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_4 );
    PyList_SET_ITEM( tmp_dict_value_18, 0, tmp_list_element_4 );
    tmp_list_element_4 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_4 == NULL ))
    {
        tmp_list_element_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_4 == NULL )
    {
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );
        Py_DECREF( tmp_dict_value_18 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 265;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_4 );
    PyList_SET_ITEM( tmp_dict_value_18, 1, tmp_list_element_4 );
    tmp_list_element_4 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_4 == NULL ))
    {
        tmp_list_element_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_4 == NULL )
    {
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );
        Py_DECREF( tmp_dict_value_18 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 265;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_4 );
    PyList_SET_ITEM( tmp_dict_value_18, 2, tmp_list_element_4 );
    tmp_list_element_4 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_4 == NULL ))
    {
        tmp_list_element_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_4 == NULL )
    {
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );
        Py_DECREF( tmp_dict_value_18 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 265;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_4 );
    PyList_SET_ITEM( tmp_dict_value_18, 3, tmp_list_element_4 );
    tmp_list_element_4 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_4 == NULL ))
    {
        tmp_list_element_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_4 == NULL )
    {
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );
        Py_DECREF( tmp_dict_value_18 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 265;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_4 );
    PyList_SET_ITEM( tmp_dict_value_18, 4, tmp_list_element_4 );
    tmp_list_element_4 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_4 == NULL ))
    {
        tmp_list_element_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_4 == NULL )
    {
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );
        Py_DECREF( tmp_dict_value_18 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 265;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_4 );
    PyList_SET_ITEM( tmp_dict_value_18, 5, tmp_list_element_4 );
    tmp_list_element_4 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_4 == NULL ))
    {
        tmp_list_element_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_4 == NULL )
    {
        Py_DECREF( tmp_called_name_202 );
        Py_DECREF( tmp_kw_name_4 );
        Py_DECREF( tmp_dict_value_18 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 265;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_4 );
    PyList_SET_ITEM( tmp_dict_value_18, 6, tmp_list_element_4 );
    tmp_dict_key_18 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_4, tmp_dict_key_18, tmp_dict_value_18 );
    Py_DECREF( tmp_dict_value_18 );
    tmp_dict_value_19 = const_str_digest_51651ca322fac6e00bbf0f5bc3c999e5;
    tmp_dict_key_19 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_4, tmp_dict_key_19, tmp_dict_value_19 );
    tmp_dict_value_20 = LIST_COPY( const_list_18800e1d879c57822e1bb41e51915893_list );
    tmp_dict_key_20 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_4, tmp_dict_key_20, tmp_dict_value_20 );
    Py_DECREF( tmp_dict_value_20 );
    frame_module->f_lineno = 267;
    tmp_assign_source_213 = CALL_FUNCTION( tmp_called_name_202, tmp_args_name_4, tmp_kw_name_4 );
    Py_DECREF( tmp_called_name_202 );
    Py_DECREF( tmp_kw_name_4 );
    if ( tmp_assign_source_213 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 267;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglRestoreBufferRegionARB, tmp_assign_source_213 );
    tmp_called_name_203 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_203 == NULL ))
    {
        tmp_called_name_203 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_203 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 270;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_1 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_args_element_name_1 == NULL ))
    {
        tmp_args_element_name_1 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_args_element_name_1 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 270;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_2 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_2 == NULL ))
    {
        tmp_args_element_name_2 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_2 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 270;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_3 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_3 == NULL ))
    {
        tmp_args_element_name_3 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_3 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 270;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_4 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_4 == NULL ))
    {
        tmp_args_element_name_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_4 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 270;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 270;
    {
        PyObject *call_args[] = { tmp_args_element_name_1, tmp_args_element_name_2, tmp_args_element_name_3, tmp_args_element_name_4 };
        tmp_assign_source_214 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_203, call_args );
    }

    if ( tmp_assign_source_214 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 270;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLCREATEBUFFERREGIONARBPROC, tmp_assign_source_214 );
    tmp_called_name_204 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_204 == NULL ))
    {
        tmp_called_name_204 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_204 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 271;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_5 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_VOID );

    if (unlikely( tmp_args_element_name_5 == NULL ))
    {
        tmp_args_element_name_5 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_VOID );
    }

    if ( tmp_args_element_name_5 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "VOID" );
        exception_tb = NULL;

        exception_lineno = 271;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_6 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_args_element_name_6 == NULL ))
    {
        tmp_args_element_name_6 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_args_element_name_6 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 271;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 271;
    {
        PyObject *call_args[] = { tmp_args_element_name_5, tmp_args_element_name_6 };
        tmp_assign_source_215 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_204, call_args );
    }

    if ( tmp_assign_source_215 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 271;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLDELETEBUFFERREGIONARBPROC, tmp_assign_source_215 );
    tmp_called_name_205 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_205 == NULL ))
    {
        tmp_called_name_205 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_205 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 272;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_7 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_7 == NULL ))
    {
        tmp_args_element_name_7 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_7 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 272;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_8 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_args_element_name_8 == NULL ))
    {
        tmp_args_element_name_8 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_args_element_name_8 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 272;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_9 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_9 == NULL ))
    {
        tmp_args_element_name_9 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_9 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 272;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_10 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_10 == NULL ))
    {
        tmp_args_element_name_10 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_10 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 272;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_11 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_11 == NULL ))
    {
        tmp_args_element_name_11 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_11 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 272;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_12 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_12 == NULL ))
    {
        tmp_args_element_name_12 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_12 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 272;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 272;
    {
        PyObject *call_args[] = { tmp_args_element_name_7, tmp_args_element_name_8, tmp_args_element_name_9, tmp_args_element_name_10, tmp_args_element_name_11, tmp_args_element_name_12 };
        tmp_assign_source_216 = CALL_FUNCTION_WITH_ARGS6( tmp_called_name_205, call_args );
    }

    if ( tmp_assign_source_216 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 272;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLSAVEBUFFERREGIONARBPROC, tmp_assign_source_216 );
    tmp_called_name_206 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_206 == NULL ))
    {
        tmp_called_name_206 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_206 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 273;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_13 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_13 == NULL ))
    {
        tmp_args_element_name_13 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_13 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 273;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_14 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_args_element_name_14 == NULL ))
    {
        tmp_args_element_name_14 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_args_element_name_14 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 273;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_15 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_15 == NULL ))
    {
        tmp_args_element_name_15 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_15 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 273;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_16 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_16 == NULL ))
    {
        tmp_args_element_name_16 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_16 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 273;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_17 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_17 == NULL ))
    {
        tmp_args_element_name_17 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_17 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 273;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_18 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_18 == NULL ))
    {
        tmp_args_element_name_18 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_18 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 273;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_19 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_19 == NULL ))
    {
        tmp_args_element_name_19 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_19 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 273;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_20 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_20 == NULL ))
    {
        tmp_args_element_name_20 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_20 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 273;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 273;
    {
        PyObject *call_args[] = { tmp_args_element_name_13, tmp_args_element_name_14, tmp_args_element_name_15, tmp_args_element_name_16, tmp_args_element_name_17, tmp_args_element_name_18, tmp_args_element_name_19, tmp_args_element_name_20 };
        tmp_assign_source_217 = CALL_FUNCTION_WITH_ARGS8( tmp_called_name_206, call_args );
    }

    if ( tmp_assign_source_217 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 273;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLRESTOREBUFFERREGIONARBPROC, tmp_assign_source_217 );
    tmp_source_name_206 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_206 == NULL ))
    {
        tmp_source_name_206 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_206 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 275;
        goto frame_exception_exit_1;
    }

    tmp_called_name_207 = LOOKUP_ATTRIBUTE( tmp_source_name_206, const_str_plain_Constant );
    if ( tmp_called_name_207 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 275;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 275;
    tmp_assign_source_218 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_207, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ARB_multisample_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_207 );
    if ( tmp_assign_source_218 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 275;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ARB_multisample, tmp_assign_source_218 );
    tmp_source_name_207 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_207 == NULL ))
    {
        tmp_source_name_207 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_207 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 277;
        goto frame_exception_exit_1;
    }

    tmp_called_name_208 = LOOKUP_ATTRIBUTE( tmp_source_name_207, const_str_plain_Constant );
    if ( tmp_called_name_208 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 277;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 277;
    tmp_assign_source_219 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_208, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ARB_extensions_string_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_208 );
    if ( tmp_assign_source_219 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 277;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ARB_extensions_string, tmp_assign_source_219 );
    tmp_source_name_208 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_208 == NULL ))
    {
        tmp_source_name_208 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_208 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 278;
        goto frame_exception_exit_1;
    }

    tmp_called_name_209 = LOOKUP_ATTRIBUTE( tmp_source_name_208, const_str_plain_createBaseFunction );
    if ( tmp_called_name_209 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 278;
        goto frame_exception_exit_1;
    }
    tmp_args_name_5 = const_tuple_str_plain_wglGetExtensionsStringARB_tuple;
    tmp_kw_name_5 = _PyDict_NewPresized( 5 );
    tmp_source_name_209 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_209 == NULL ))
    {
        tmp_source_name_209 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_209 == NULL )
    {
        Py_DECREF( tmp_called_name_209 );
        Py_DECREF( tmp_kw_name_5 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 279;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_21 = LOOKUP_ATTRIBUTE( tmp_source_name_209, const_str_plain_GL );
    if ( tmp_dict_value_21 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_209 );
        Py_DECREF( tmp_kw_name_5 );

        exception_lineno = 279;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_21 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_5, tmp_dict_key_21, tmp_dict_value_21 );
    Py_DECREF( tmp_dict_value_21 );
    tmp_dict_value_22 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_char_p );

    if (unlikely( tmp_dict_value_22 == NULL ))
    {
        tmp_dict_value_22 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_char_p );
    }

    if ( tmp_dict_value_22 == NULL )
    {
        Py_DECREF( tmp_called_name_209 );
        Py_DECREF( tmp_kw_name_5 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_char_p" );
        exception_tb = NULL;

        exception_lineno = 279;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_22 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_5, tmp_dict_key_22, tmp_dict_value_22 );
    tmp_dict_value_23 = PyList_New( 1 );
    tmp_list_element_5 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_5 == NULL ))
    {
        tmp_list_element_5 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_5 == NULL )
    {
        Py_DECREF( tmp_called_name_209 );
        Py_DECREF( tmp_kw_name_5 );
        Py_DECREF( tmp_dict_value_23 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 280;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_5 );
    PyList_SET_ITEM( tmp_dict_value_23, 0, tmp_list_element_5 );
    tmp_dict_key_23 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_5, tmp_dict_key_23, tmp_dict_value_23 );
    Py_DECREF( tmp_dict_value_23 );
    tmp_dict_value_24 = const_str_digest_7e7da976e66ca0e95a65ad89bba5170d;
    tmp_dict_key_24 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_5, tmp_dict_key_24, tmp_dict_value_24 );
    tmp_dict_value_25 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_25 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_5, tmp_dict_key_25, tmp_dict_value_25 );
    Py_DECREF( tmp_dict_value_25 );
    frame_module->f_lineno = 282;
    tmp_assign_source_220 = CALL_FUNCTION( tmp_called_name_209, tmp_args_name_5, tmp_kw_name_5 );
    Py_DECREF( tmp_called_name_209 );
    Py_DECREF( tmp_kw_name_5 );
    if ( tmp_assign_source_220 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 282;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetExtensionsStringARB, tmp_assign_source_220 );
    tmp_called_name_210 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_210 == NULL ))
    {
        tmp_called_name_210 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_210 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 285;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_21 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_char_p );

    if (unlikely( tmp_args_element_name_21 == NULL ))
    {
        tmp_args_element_name_21 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_char_p );
    }

    if ( tmp_args_element_name_21 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_char_p" );
        exception_tb = NULL;

        exception_lineno = 285;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_22 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_22 == NULL ))
    {
        tmp_args_element_name_22 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_22 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 285;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 285;
    {
        PyObject *call_args[] = { tmp_args_element_name_21, tmp_args_element_name_22 };
        tmp_assign_source_221 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_210, call_args );
    }

    if ( tmp_assign_source_221 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 285;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETEXTENSIONSSTRINGARBPROC, tmp_assign_source_221 );
    tmp_source_name_210 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_210 == NULL ))
    {
        tmp_source_name_210 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_210 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 287;
        goto frame_exception_exit_1;
    }

    tmp_called_name_211 = LOOKUP_ATTRIBUTE( tmp_source_name_210, const_str_plain_Constant );
    if ( tmp_called_name_211 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 287;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 287;
    tmp_assign_source_222 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_211, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ARB_pixel_format_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_211 );
    if ( tmp_assign_source_222 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 287;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ARB_pixel_format, tmp_assign_source_222 );
    tmp_source_name_211 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_211 == NULL ))
    {
        tmp_source_name_211 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_211 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 288;
        goto frame_exception_exit_1;
    }

    tmp_called_name_212 = LOOKUP_ATTRIBUTE( tmp_source_name_211, const_str_plain_createBaseFunction );
    if ( tmp_called_name_212 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 288;
        goto frame_exception_exit_1;
    }
    tmp_args_name_6 = const_tuple_str_plain_wglGetPixelFormatAttribivARB_tuple;
    tmp_kw_name_6 = _PyDict_NewPresized( 5 );
    tmp_source_name_212 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_212 == NULL ))
    {
        tmp_source_name_212 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_212 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 289;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_26 = LOOKUP_ATTRIBUTE( tmp_source_name_212, const_str_plain_GL );
    if ( tmp_dict_value_26 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );

        exception_lineno = 289;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_26 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_6, tmp_dict_key_26, tmp_dict_value_26 );
    Py_DECREF( tmp_dict_value_26 );
    tmp_dict_value_27 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_27 == NULL ))
    {
        tmp_dict_value_27 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_27 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 289;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_27 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_6, tmp_dict_key_27, tmp_dict_value_27 );
    tmp_dict_value_28 = PyList_New( 6 );
    tmp_list_element_6 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_6 == NULL ))
    {
        tmp_list_element_6 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_6 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_6 );
    PyList_SET_ITEM( tmp_dict_value_28, 0, tmp_list_element_6 );
    tmp_list_element_6 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_6 == NULL ))
    {
        tmp_list_element_6 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_6 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_6 );
    PyList_SET_ITEM( tmp_dict_value_28, 1, tmp_list_element_6 );
    tmp_list_element_6 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_6 == NULL ))
    {
        tmp_list_element_6 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_6 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_6 );
    PyList_SET_ITEM( tmp_dict_value_28, 2, tmp_list_element_6 );
    tmp_list_element_6 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_6 == NULL ))
    {
        tmp_list_element_6 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_6 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_6 );
    PyList_SET_ITEM( tmp_dict_value_28, 3, tmp_list_element_6 );
    tmp_called_name_213 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_213 == NULL ))
    {
        tmp_called_name_213 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_213 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_23 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_23 == NULL ))
    {
        tmp_args_element_name_23 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_23 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 290;
    {
        PyObject *call_args[] = { tmp_args_element_name_23 };
        tmp_list_element_6 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_213, call_args );
    }

    if ( tmp_list_element_6 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_28, 4, tmp_list_element_6 );
    tmp_called_name_214 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_214 == NULL ))
    {
        tmp_called_name_214 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_214 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_24 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_24 == NULL ))
    {
        tmp_args_element_name_24 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_24 == NULL )
    {
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 290;
    {
        PyObject *call_args[] = { tmp_args_element_name_24 };
        tmp_list_element_6 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_214, call_args );
    }

    if ( tmp_list_element_6 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_212 );
        Py_DECREF( tmp_kw_name_6 );
        Py_DECREF( tmp_dict_value_28 );

        exception_lineno = 290;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_28, 5, tmp_list_element_6 );
    tmp_dict_key_28 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_6, tmp_dict_key_28, tmp_dict_value_28 );
    Py_DECREF( tmp_dict_value_28 );
    tmp_dict_value_29 = const_str_digest_7499980c93da7a563ff037747b161db0;
    tmp_dict_key_29 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_6, tmp_dict_key_29, tmp_dict_value_29 );
    tmp_dict_value_30 = LIST_COPY( const_list_ad648f6db8e6027a0d59f72015f83cb6_list );
    tmp_dict_key_30 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_6, tmp_dict_key_30, tmp_dict_value_30 );
    Py_DECREF( tmp_dict_value_30 );
    frame_module->f_lineno = 292;
    tmp_assign_source_223 = CALL_FUNCTION( tmp_called_name_212, tmp_args_name_6, tmp_kw_name_6 );
    Py_DECREF( tmp_called_name_212 );
    Py_DECREF( tmp_kw_name_6 );
    if ( tmp_assign_source_223 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 292;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetPixelFormatAttribivARB, tmp_assign_source_223 );
    tmp_assign_source_224 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_float );

    if (unlikely( tmp_assign_source_224 == NULL ))
    {
        tmp_assign_source_224 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_float );
    }

    if ( tmp_assign_source_224 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_float" );
        exception_tb = NULL;

        exception_lineno = 295;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_FLOAT, tmp_assign_source_224 );
    tmp_source_name_213 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_213 == NULL ))
    {
        tmp_source_name_213 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_213 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 296;
        goto frame_exception_exit_1;
    }

    tmp_called_name_215 = LOOKUP_ATTRIBUTE( tmp_source_name_213, const_str_plain_createBaseFunction );
    if ( tmp_called_name_215 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 296;
        goto frame_exception_exit_1;
    }
    tmp_args_name_7 = const_tuple_str_plain_wglGetPixelFormatAttribfvARB_tuple;
    tmp_kw_name_7 = _PyDict_NewPresized( 5 );
    tmp_source_name_214 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_214 == NULL ))
    {
        tmp_source_name_214 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_214 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 297;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_31 = LOOKUP_ATTRIBUTE( tmp_source_name_214, const_str_plain_GL );
    if ( tmp_dict_value_31 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );

        exception_lineno = 297;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_31 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_7, tmp_dict_key_31, tmp_dict_value_31 );
    Py_DECREF( tmp_dict_value_31 );
    tmp_dict_value_32 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_32 == NULL ))
    {
        tmp_dict_value_32 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_32 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 297;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_32 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_7, tmp_dict_key_32, tmp_dict_value_32 );
    tmp_dict_value_33 = PyList_New( 6 );
    tmp_list_element_7 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_7 == NULL ))
    {
        tmp_list_element_7 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_7 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_7 );
    PyList_SET_ITEM( tmp_dict_value_33, 0, tmp_list_element_7 );
    tmp_list_element_7 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_7 == NULL ))
    {
        tmp_list_element_7 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_7 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_7 );
    PyList_SET_ITEM( tmp_dict_value_33, 1, tmp_list_element_7 );
    tmp_list_element_7 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_7 == NULL ))
    {
        tmp_list_element_7 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_7 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_7 );
    PyList_SET_ITEM( tmp_dict_value_33, 2, tmp_list_element_7 );
    tmp_list_element_7 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_7 == NULL ))
    {
        tmp_list_element_7 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_7 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_7 );
    PyList_SET_ITEM( tmp_dict_value_33, 3, tmp_list_element_7 );
    tmp_called_name_216 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_216 == NULL ))
    {
        tmp_called_name_216 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_216 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_25 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_25 == NULL ))
    {
        tmp_args_element_name_25 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_25 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 298;
    {
        PyObject *call_args[] = { tmp_args_element_name_25 };
        tmp_list_element_7 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_216, call_args );
    }

    if ( tmp_list_element_7 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_33, 4, tmp_list_element_7 );
    tmp_called_name_217 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_217 == NULL ))
    {
        tmp_called_name_217 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_217 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_26 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_FLOAT );

    if (unlikely( tmp_args_element_name_26 == NULL ))
    {
        tmp_args_element_name_26 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_FLOAT );
    }

    if ( tmp_args_element_name_26 == NULL )
    {
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "FLOAT" );
        exception_tb = NULL;

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 298;
    {
        PyObject *call_args[] = { tmp_args_element_name_26 };
        tmp_list_element_7 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_217, call_args );
    }

    if ( tmp_list_element_7 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_215 );
        Py_DECREF( tmp_kw_name_7 );
        Py_DECREF( tmp_dict_value_33 );

        exception_lineno = 298;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_33, 5, tmp_list_element_7 );
    tmp_dict_key_33 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_7, tmp_dict_key_33, tmp_dict_value_33 );
    Py_DECREF( tmp_dict_value_33 );
    tmp_dict_value_34 = const_str_digest_20f7b7d9baf1d09693842dbcf2e735d8;
    tmp_dict_key_34 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_7, tmp_dict_key_34, tmp_dict_value_34 );
    tmp_dict_value_35 = LIST_COPY( const_list_ad648f6db8e6027a0d59f72015f83cb6_list );
    tmp_dict_key_35 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_7, tmp_dict_key_35, tmp_dict_value_35 );
    Py_DECREF( tmp_dict_value_35 );
    frame_module->f_lineno = 300;
    tmp_assign_source_225 = CALL_FUNCTION( tmp_called_name_215, tmp_args_name_7, tmp_kw_name_7 );
    Py_DECREF( tmp_called_name_215 );
    Py_DECREF( tmp_kw_name_7 );
    if ( tmp_assign_source_225 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 300;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetPixelFormatAttribfvARB, tmp_assign_source_225 );
    tmp_source_name_215 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_215 == NULL ))
    {
        tmp_source_name_215 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_215 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 303;
        goto frame_exception_exit_1;
    }

    tmp_called_name_218 = LOOKUP_ATTRIBUTE( tmp_source_name_215, const_str_plain_createBaseFunction );
    if ( tmp_called_name_218 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 303;
        goto frame_exception_exit_1;
    }
    tmp_args_name_8 = const_tuple_str_plain_wglChoosePixelFormatARB_tuple;
    tmp_kw_name_8 = _PyDict_NewPresized( 5 );
    tmp_source_name_216 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_216 == NULL ))
    {
        tmp_source_name_216 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_216 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 304;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_36 = LOOKUP_ATTRIBUTE( tmp_source_name_216, const_str_plain_GL );
    if ( tmp_dict_value_36 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );

        exception_lineno = 304;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_36 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_8, tmp_dict_key_36, tmp_dict_value_36 );
    Py_DECREF( tmp_dict_value_36 );
    tmp_dict_value_37 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_37 == NULL ))
    {
        tmp_dict_value_37 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_37 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 304;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_37 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_8, tmp_dict_key_37, tmp_dict_value_37 );
    tmp_dict_value_38 = PyList_New( 6 );
    tmp_list_element_8 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_8 == NULL ))
    {
        tmp_list_element_8 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_8 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_8 );
    PyList_SET_ITEM( tmp_dict_value_38, 0, tmp_list_element_8 );
    tmp_called_name_219 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_219 == NULL ))
    {
        tmp_called_name_219 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_219 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_27 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_27 == NULL ))
    {
        tmp_args_element_name_27 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_27 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 305;
    {
        PyObject *call_args[] = { tmp_args_element_name_27 };
        tmp_list_element_8 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_219, call_args );
    }

    if ( tmp_list_element_8 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_38, 1, tmp_list_element_8 );
    tmp_called_name_220 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_220 == NULL ))
    {
        tmp_called_name_220 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_220 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_28 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_FLOAT );

    if (unlikely( tmp_args_element_name_28 == NULL ))
    {
        tmp_args_element_name_28 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_FLOAT );
    }

    if ( tmp_args_element_name_28 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "FLOAT" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 305;
    {
        PyObject *call_args[] = { tmp_args_element_name_28 };
        tmp_list_element_8 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_220, call_args );
    }

    if ( tmp_list_element_8 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_38, 2, tmp_list_element_8 );
    tmp_list_element_8 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_8 == NULL ))
    {
        tmp_list_element_8 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_8 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_8 );
    PyList_SET_ITEM( tmp_dict_value_38, 3, tmp_list_element_8 );
    tmp_called_name_221 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_221 == NULL ))
    {
        tmp_called_name_221 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_221 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_29 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_29 == NULL ))
    {
        tmp_args_element_name_29 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_29 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 305;
    {
        PyObject *call_args[] = { tmp_args_element_name_29 };
        tmp_list_element_8 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_221, call_args );
    }

    if ( tmp_list_element_8 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_38, 4, tmp_list_element_8 );
    tmp_called_name_222 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_222 == NULL ))
    {
        tmp_called_name_222 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_222 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_30 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_30 == NULL ))
    {
        tmp_args_element_name_30 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_30 == NULL )
    {
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 305;
    {
        PyObject *call_args[] = { tmp_args_element_name_30 };
        tmp_list_element_8 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_222, call_args );
    }

    if ( tmp_list_element_8 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_218 );
        Py_DECREF( tmp_kw_name_8 );
        Py_DECREF( tmp_dict_value_38 );

        exception_lineno = 305;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_38, 5, tmp_list_element_8 );
    tmp_dict_key_38 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_8, tmp_dict_key_38, tmp_dict_value_38 );
    Py_DECREF( tmp_dict_value_38 );
    tmp_dict_value_39 = const_str_digest_7f6c875a77fad266116bdda1c3cd8a52;
    tmp_dict_key_39 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_8, tmp_dict_key_39, tmp_dict_value_39 );
    tmp_dict_value_40 = LIST_COPY( const_list_d8a0444503e8b298f461aa47ef746043_list );
    tmp_dict_key_40 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_8, tmp_dict_key_40, tmp_dict_value_40 );
    Py_DECREF( tmp_dict_value_40 );
    frame_module->f_lineno = 307;
    tmp_assign_source_226 = CALL_FUNCTION( tmp_called_name_218, tmp_args_name_8, tmp_kw_name_8 );
    Py_DECREF( tmp_called_name_218 );
    Py_DECREF( tmp_kw_name_8 );
    if ( tmp_assign_source_226 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 307;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglChoosePixelFormatARB, tmp_assign_source_226 );
    tmp_called_name_223 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_223 == NULL ))
    {
        tmp_called_name_223 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_223 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_31 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_31 == NULL ))
    {
        tmp_args_element_name_31 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_31 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_32 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_32 == NULL ))
    {
        tmp_args_element_name_32 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_32 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_33 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_33 == NULL ))
    {
        tmp_args_element_name_33 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_33 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_34 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_34 == NULL ))
    {
        tmp_args_element_name_34 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_34 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_35 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_35 == NULL ))
    {
        tmp_args_element_name_35 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_35 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    tmp_called_name_224 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_224 == NULL ))
    {
        tmp_called_name_224 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_224 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_37 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_37 == NULL ))
    {
        tmp_args_element_name_37 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_37 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 310;
    {
        PyObject *call_args[] = { tmp_args_element_name_37 };
        tmp_args_element_name_36 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_224, call_args );
    }

    if ( tmp_args_element_name_36 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 310;
        goto frame_exception_exit_1;
    }
    tmp_called_name_225 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_225 == NULL ))
    {
        tmp_called_name_225 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_225 == NULL )
    {
        Py_DECREF( tmp_args_element_name_36 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_39 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_39 == NULL ))
    {
        tmp_args_element_name_39 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_39 == NULL )
    {
        Py_DECREF( tmp_args_element_name_36 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 310;
    {
        PyObject *call_args[] = { tmp_args_element_name_39 };
        tmp_args_element_name_38 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_225, call_args );
    }

    if ( tmp_args_element_name_38 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_36 );

        exception_lineno = 310;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 310;
    {
        PyObject *call_args[] = { tmp_args_element_name_31, tmp_args_element_name_32, tmp_args_element_name_33, tmp_args_element_name_34, tmp_args_element_name_35, tmp_args_element_name_36, tmp_args_element_name_38 };
        tmp_assign_source_227 = CALL_FUNCTION_WITH_ARGS7( tmp_called_name_223, call_args );
    }

    Py_DECREF( tmp_args_element_name_36 );
    Py_DECREF( tmp_args_element_name_38 );
    if ( tmp_assign_source_227 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 310;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETPIXELFORMATATTRIBIVARBPROC, tmp_assign_source_227 );
    tmp_called_name_226 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_226 == NULL ))
    {
        tmp_called_name_226 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_226 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_40 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_40 == NULL ))
    {
        tmp_args_element_name_40 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_40 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_41 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_41 == NULL ))
    {
        tmp_args_element_name_41 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_41 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_42 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_42 == NULL ))
    {
        tmp_args_element_name_42 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_42 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_43 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_43 == NULL ))
    {
        tmp_args_element_name_43 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_43 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_44 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_44 == NULL ))
    {
        tmp_args_element_name_44 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_44 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    tmp_called_name_227 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_227 == NULL ))
    {
        tmp_called_name_227 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_227 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_46 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_46 == NULL ))
    {
        tmp_args_element_name_46 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_46 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 311;
    {
        PyObject *call_args[] = { tmp_args_element_name_46 };
        tmp_args_element_name_45 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_227, call_args );
    }

    if ( tmp_args_element_name_45 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 311;
        goto frame_exception_exit_1;
    }
    tmp_called_name_228 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_228 == NULL ))
    {
        tmp_called_name_228 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_228 == NULL )
    {
        Py_DECREF( tmp_args_element_name_45 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_48 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_FLOAT );

    if (unlikely( tmp_args_element_name_48 == NULL ))
    {
        tmp_args_element_name_48 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_FLOAT );
    }

    if ( tmp_args_element_name_48 == NULL )
    {
        Py_DECREF( tmp_args_element_name_45 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "FLOAT" );
        exception_tb = NULL;

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 311;
    {
        PyObject *call_args[] = { tmp_args_element_name_48 };
        tmp_args_element_name_47 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_228, call_args );
    }

    if ( tmp_args_element_name_47 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_45 );

        exception_lineno = 311;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 311;
    {
        PyObject *call_args[] = { tmp_args_element_name_40, tmp_args_element_name_41, tmp_args_element_name_42, tmp_args_element_name_43, tmp_args_element_name_44, tmp_args_element_name_45, tmp_args_element_name_47 };
        tmp_assign_source_228 = CALL_FUNCTION_WITH_ARGS7( tmp_called_name_226, call_args );
    }

    Py_DECREF( tmp_args_element_name_45 );
    Py_DECREF( tmp_args_element_name_47 );
    if ( tmp_assign_source_228 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 311;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETPIXELFORMATATTRIBFVARBPROC, tmp_assign_source_228 );
    tmp_called_name_229 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_229 == NULL ))
    {
        tmp_called_name_229 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_229 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_49 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_49 == NULL ))
    {
        tmp_args_element_name_49 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_49 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_50 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_50 == NULL ))
    {
        tmp_args_element_name_50 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_50 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    tmp_called_name_230 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_230 == NULL ))
    {
        tmp_called_name_230 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_230 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_52 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_52 == NULL ))
    {
        tmp_args_element_name_52 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_52 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 312;
    {
        PyObject *call_args[] = { tmp_args_element_name_52 };
        tmp_args_element_name_51 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_230, call_args );
    }

    if ( tmp_args_element_name_51 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 312;
        goto frame_exception_exit_1;
    }
    tmp_called_name_231 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_231 == NULL ))
    {
        tmp_called_name_231 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_231 == NULL )
    {
        Py_DECREF( tmp_args_element_name_51 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_54 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_FLOAT );

    if (unlikely( tmp_args_element_name_54 == NULL ))
    {
        tmp_args_element_name_54 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_FLOAT );
    }

    if ( tmp_args_element_name_54 == NULL )
    {
        Py_DECREF( tmp_args_element_name_51 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "FLOAT" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 312;
    {
        PyObject *call_args[] = { tmp_args_element_name_54 };
        tmp_args_element_name_53 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_231, call_args );
    }

    if ( tmp_args_element_name_53 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_51 );

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }
    tmp_args_element_name_55 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_55 == NULL ))
    {
        tmp_args_element_name_55 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_55 == NULL )
    {
        Py_DECREF( tmp_args_element_name_51 );
        Py_DECREF( tmp_args_element_name_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    tmp_called_name_232 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_232 == NULL ))
    {
        tmp_called_name_232 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_232 == NULL )
    {
        Py_DECREF( tmp_args_element_name_51 );
        Py_DECREF( tmp_args_element_name_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_57 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_57 == NULL ))
    {
        tmp_args_element_name_57 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_57 == NULL )
    {
        Py_DECREF( tmp_args_element_name_51 );
        Py_DECREF( tmp_args_element_name_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 312;
    {
        PyObject *call_args[] = { tmp_args_element_name_57 };
        tmp_args_element_name_56 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_232, call_args );
    }

    if ( tmp_args_element_name_56 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_51 );
        Py_DECREF( tmp_args_element_name_53 );

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }
    tmp_called_name_233 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_233 == NULL ))
    {
        tmp_called_name_233 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_233 == NULL )
    {
        Py_DECREF( tmp_args_element_name_51 );
        Py_DECREF( tmp_args_element_name_53 );
        Py_DECREF( tmp_args_element_name_56 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_59 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_59 == NULL ))
    {
        tmp_args_element_name_59 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_59 == NULL )
    {
        Py_DECREF( tmp_args_element_name_51 );
        Py_DECREF( tmp_args_element_name_53 );
        Py_DECREF( tmp_args_element_name_56 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 312;
    {
        PyObject *call_args[] = { tmp_args_element_name_59 };
        tmp_args_element_name_58 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_233, call_args );
    }

    if ( tmp_args_element_name_58 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_51 );
        Py_DECREF( tmp_args_element_name_53 );
        Py_DECREF( tmp_args_element_name_56 );

        exception_lineno = 312;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 312;
    {
        PyObject *call_args[] = { tmp_args_element_name_49, tmp_args_element_name_50, tmp_args_element_name_51, tmp_args_element_name_53, tmp_args_element_name_55, tmp_args_element_name_56, tmp_args_element_name_58 };
        tmp_assign_source_229 = CALL_FUNCTION_WITH_ARGS7( tmp_called_name_229, call_args );
    }

    Py_DECREF( tmp_args_element_name_51 );
    Py_DECREF( tmp_args_element_name_53 );
    Py_DECREF( tmp_args_element_name_56 );
    Py_DECREF( tmp_args_element_name_58 );
    if ( tmp_assign_source_229 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 312;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLCHOOSEPIXELFORMATARBPROC, tmp_assign_source_229 );
    tmp_source_name_217 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_217 == NULL ))
    {
        tmp_source_name_217 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_217 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 314;
        goto frame_exception_exit_1;
    }

    tmp_called_name_234 = LOOKUP_ATTRIBUTE( tmp_source_name_217, const_str_plain_Constant );
    if ( tmp_called_name_234 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 314;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 314;
    tmp_assign_source_230 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_234, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ARB_make_current_read_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_234 );
    if ( tmp_assign_source_230 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 314;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ARB_make_current_read, tmp_assign_source_230 );
    tmp_assign_source_231 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_assign_source_231 == NULL ))
    {
        tmp_assign_source_231 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_assign_source_231 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 315;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HGLRC, tmp_assign_source_231 );
    tmp_source_name_218 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_218 == NULL ))
    {
        tmp_source_name_218 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_218 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 316;
        goto frame_exception_exit_1;
    }

    tmp_called_name_235 = LOOKUP_ATTRIBUTE( tmp_source_name_218, const_str_plain_createBaseFunction );
    if ( tmp_called_name_235 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 316;
        goto frame_exception_exit_1;
    }
    tmp_args_name_9 = const_tuple_str_plain_wglMakeContextCurrentARB_tuple;
    tmp_kw_name_9 = _PyDict_NewPresized( 5 );
    tmp_source_name_219 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_219 == NULL ))
    {
        tmp_source_name_219 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_219 == NULL )
    {
        Py_DECREF( tmp_called_name_235 );
        Py_DECREF( tmp_kw_name_9 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 317;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_41 = LOOKUP_ATTRIBUTE( tmp_source_name_219, const_str_plain_GL );
    if ( tmp_dict_value_41 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_235 );
        Py_DECREF( tmp_kw_name_9 );

        exception_lineno = 317;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_41 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_9, tmp_dict_key_41, tmp_dict_value_41 );
    Py_DECREF( tmp_dict_value_41 );
    tmp_dict_value_42 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_42 == NULL ))
    {
        tmp_dict_value_42 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_42 == NULL )
    {
        Py_DECREF( tmp_called_name_235 );
        Py_DECREF( tmp_kw_name_9 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 317;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_42 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_9, tmp_dict_key_42, tmp_dict_value_42 );
    tmp_dict_value_43 = PyList_New( 3 );
    tmp_list_element_9 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_9 == NULL ))
    {
        tmp_list_element_9 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_9 == NULL )
    {
        Py_DECREF( tmp_called_name_235 );
        Py_DECREF( tmp_kw_name_9 );
        Py_DECREF( tmp_dict_value_43 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 318;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_9 );
    PyList_SET_ITEM( tmp_dict_value_43, 0, tmp_list_element_9 );
    tmp_list_element_9 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_9 == NULL ))
    {
        tmp_list_element_9 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_9 == NULL )
    {
        Py_DECREF( tmp_called_name_235 );
        Py_DECREF( tmp_kw_name_9 );
        Py_DECREF( tmp_dict_value_43 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 318;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_9 );
    PyList_SET_ITEM( tmp_dict_value_43, 1, tmp_list_element_9 );
    tmp_list_element_9 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HGLRC );

    if (unlikely( tmp_list_element_9 == NULL ))
    {
        tmp_list_element_9 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HGLRC );
    }

    if ( tmp_list_element_9 == NULL )
    {
        Py_DECREF( tmp_called_name_235 );
        Py_DECREF( tmp_kw_name_9 );
        Py_DECREF( tmp_dict_value_43 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HGLRC" );
        exception_tb = NULL;

        exception_lineno = 318;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_9 );
    PyList_SET_ITEM( tmp_dict_value_43, 2, tmp_list_element_9 );
    tmp_dict_key_43 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_9, tmp_dict_key_43, tmp_dict_value_43 );
    Py_DECREF( tmp_dict_value_43 );
    tmp_dict_value_44 = const_str_digest_7d1601f8ef4eae27b26000dafed4d3ff;
    tmp_dict_key_44 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_9, tmp_dict_key_44, tmp_dict_value_44 );
    tmp_dict_value_45 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_plain_None_list );
    tmp_dict_key_45 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_9, tmp_dict_key_45, tmp_dict_value_45 );
    Py_DECREF( tmp_dict_value_45 );
    frame_module->f_lineno = 320;
    tmp_assign_source_232 = CALL_FUNCTION( tmp_called_name_235, tmp_args_name_9, tmp_kw_name_9 );
    Py_DECREF( tmp_called_name_235 );
    Py_DECREF( tmp_kw_name_9 );
    if ( tmp_assign_source_232 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 320;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglMakeContextCurrentARB, tmp_assign_source_232 );
    tmp_source_name_220 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_220 == NULL ))
    {
        tmp_source_name_220 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_220 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 323;
        goto frame_exception_exit_1;
    }

    tmp_called_name_236 = LOOKUP_ATTRIBUTE( tmp_source_name_220, const_str_plain_createBaseFunction );
    if ( tmp_called_name_236 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 323;
        goto frame_exception_exit_1;
    }
    tmp_args_name_10 = const_tuple_str_plain_wglGetCurrentReadDCARB_tuple;
    tmp_kw_name_10 = _PyDict_NewPresized( 5 );
    tmp_source_name_221 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_221 == NULL ))
    {
        tmp_source_name_221 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_221 == NULL )
    {
        Py_DECREF( tmp_called_name_236 );
        Py_DECREF( tmp_kw_name_10 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 324;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_46 = LOOKUP_ATTRIBUTE( tmp_source_name_221, const_str_plain_GL );
    if ( tmp_dict_value_46 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_236 );
        Py_DECREF( tmp_kw_name_10 );

        exception_lineno = 324;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_46 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_10, tmp_dict_key_46, tmp_dict_value_46 );
    Py_DECREF( tmp_dict_value_46 );
    tmp_dict_value_47 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_dict_value_47 == NULL ))
    {
        tmp_dict_value_47 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_dict_value_47 == NULL )
    {
        Py_DECREF( tmp_called_name_236 );
        Py_DECREF( tmp_kw_name_10 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 324;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_47 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_10, tmp_dict_key_47, tmp_dict_value_47 );
    tmp_dict_value_48 = PyList_New( 0 );
    tmp_dict_key_48 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_10, tmp_dict_key_48, tmp_dict_value_48 );
    Py_DECREF( tmp_dict_value_48 );
    tmp_dict_value_49 = const_str_digest_e1b035e816f7751d5ec02c0bc4a3e9a4;
    tmp_dict_key_49 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_10, tmp_dict_key_49, tmp_dict_value_49 );
    tmp_dict_value_50 = PyList_New( 0 );
    tmp_dict_key_50 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_10, tmp_dict_key_50, tmp_dict_value_50 );
    Py_DECREF( tmp_dict_value_50 );
    frame_module->f_lineno = 327;
    tmp_assign_source_233 = CALL_FUNCTION( tmp_called_name_236, tmp_args_name_10, tmp_kw_name_10 );
    Py_DECREF( tmp_called_name_236 );
    Py_DECREF( tmp_kw_name_10 );
    if ( tmp_assign_source_233 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 327;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetCurrentReadDCARB, tmp_assign_source_233 );
    tmp_called_name_237 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_237 == NULL ))
    {
        tmp_called_name_237 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_237 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 330;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_60 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_60 == NULL ))
    {
        tmp_args_element_name_60 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_60 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 330;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_61 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_61 == NULL ))
    {
        tmp_args_element_name_61 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_61 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 330;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_62 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_62 == NULL ))
    {
        tmp_args_element_name_62 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_62 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 330;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_63 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HGLRC );

    if (unlikely( tmp_args_element_name_63 == NULL ))
    {
        tmp_args_element_name_63 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HGLRC );
    }

    if ( tmp_args_element_name_63 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HGLRC" );
        exception_tb = NULL;

        exception_lineno = 330;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 330;
    {
        PyObject *call_args[] = { tmp_args_element_name_60, tmp_args_element_name_61, tmp_args_element_name_62, tmp_args_element_name_63 };
        tmp_assign_source_234 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_237, call_args );
    }

    if ( tmp_assign_source_234 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 330;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLMAKECONTEXTCURRENTARBPROC, tmp_assign_source_234 );
    tmp_called_name_238 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_238 == NULL ))
    {
        tmp_called_name_238 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_238 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 331;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_64 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_64 == NULL ))
    {
        tmp_args_element_name_64 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_64 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 331;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 331;
    {
        PyObject *call_args[] = { tmp_args_element_name_64 };
        tmp_assign_source_235 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_238, call_args );
    }

    if ( tmp_assign_source_235 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 331;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETCURRENTREADDCARBPROC, tmp_assign_source_235 );
    tmp_source_name_222 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_222 == NULL ))
    {
        tmp_source_name_222 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_222 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 333;
        goto frame_exception_exit_1;
    }

    tmp_called_name_239 = LOOKUP_ATTRIBUTE( tmp_source_name_222, const_str_plain_Constant );
    if ( tmp_called_name_239 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 333;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 333;
    tmp_assign_source_236 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_239, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ARB_pbuffer_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_239 );
    if ( tmp_assign_source_236 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 333;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ARB_pbuffer, tmp_assign_source_236 );
    tmp_source_name_223 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_223 == NULL ))
    {
        tmp_source_name_223 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_223 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 334;
        goto frame_exception_exit_1;
    }

    tmp_called_name_240 = LOOKUP_ATTRIBUTE( tmp_source_name_223, const_str_plain_createBaseFunction );
    if ( tmp_called_name_240 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 334;
        goto frame_exception_exit_1;
    }
    tmp_args_name_11 = const_tuple_str_plain_wglCreatePbufferARB_tuple;
    tmp_kw_name_11 = _PyDict_NewPresized( 5 );
    tmp_source_name_224 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_224 == NULL ))
    {
        tmp_source_name_224 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_224 == NULL )
    {
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 335;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_51 = LOOKUP_ATTRIBUTE( tmp_source_name_224, const_str_plain_GL );
    if ( tmp_dict_value_51 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );

        exception_lineno = 335;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_51 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_11, tmp_dict_key_51, tmp_dict_value_51 );
    Py_DECREF( tmp_dict_value_51 );
    tmp_dict_value_52 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_dict_value_52 == NULL ))
    {
        tmp_dict_value_52 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_dict_value_52 == NULL )
    {
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 335;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_52 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_11, tmp_dict_key_52, tmp_dict_value_52 );
    tmp_dict_value_53 = PyList_New( 5 );
    tmp_list_element_10 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_10 == NULL ))
    {
        tmp_list_element_10 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_10 == NULL )
    {
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );
        Py_DECREF( tmp_dict_value_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 336;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_10 );
    PyList_SET_ITEM( tmp_dict_value_53, 0, tmp_list_element_10 );
    tmp_list_element_10 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_10 == NULL ))
    {
        tmp_list_element_10 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_10 == NULL )
    {
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );
        Py_DECREF( tmp_dict_value_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 336;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_10 );
    PyList_SET_ITEM( tmp_dict_value_53, 1, tmp_list_element_10 );
    tmp_list_element_10 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_10 == NULL ))
    {
        tmp_list_element_10 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_10 == NULL )
    {
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );
        Py_DECREF( tmp_dict_value_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 336;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_10 );
    PyList_SET_ITEM( tmp_dict_value_53, 2, tmp_list_element_10 );
    tmp_list_element_10 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_10 == NULL ))
    {
        tmp_list_element_10 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_10 == NULL )
    {
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );
        Py_DECREF( tmp_dict_value_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 336;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_10 );
    PyList_SET_ITEM( tmp_dict_value_53, 3, tmp_list_element_10 );
    tmp_called_name_241 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_241 == NULL ))
    {
        tmp_called_name_241 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_241 == NULL )
    {
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );
        Py_DECREF( tmp_dict_value_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 336;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_65 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_65 == NULL ))
    {
        tmp_args_element_name_65 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_65 == NULL )
    {
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );
        Py_DECREF( tmp_dict_value_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 336;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 336;
    {
        PyObject *call_args[] = { tmp_args_element_name_65 };
        tmp_list_element_10 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_241, call_args );
    }

    if ( tmp_list_element_10 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_240 );
        Py_DECREF( tmp_kw_name_11 );
        Py_DECREF( tmp_dict_value_53 );

        exception_lineno = 336;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_53, 4, tmp_list_element_10 );
    tmp_dict_key_53 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_11, tmp_dict_key_53, tmp_dict_value_53 );
    Py_DECREF( tmp_dict_value_53 );
    tmp_dict_value_54 = const_str_digest_422c1f843d5161b96b6709d931880f5c;
    tmp_dict_key_54 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_11, tmp_dict_key_54, tmp_dict_value_54 );
    tmp_dict_value_55 = LIST_COPY( const_list_fd90a4c5cb8370fe56e71dd0a27664ad_list );
    tmp_dict_key_55 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_11, tmp_dict_key_55, tmp_dict_value_55 );
    Py_DECREF( tmp_dict_value_55 );
    frame_module->f_lineno = 338;
    tmp_assign_source_237 = CALL_FUNCTION( tmp_called_name_240, tmp_args_name_11, tmp_kw_name_11 );
    Py_DECREF( tmp_called_name_240 );
    Py_DECREF( tmp_kw_name_11 );
    if ( tmp_assign_source_237 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 338;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglCreatePbufferARB, tmp_assign_source_237 );
    tmp_source_name_225 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_225 == NULL ))
    {
        tmp_source_name_225 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_225 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 341;
        goto frame_exception_exit_1;
    }

    tmp_called_name_242 = LOOKUP_ATTRIBUTE( tmp_source_name_225, const_str_plain_createBaseFunction );
    if ( tmp_called_name_242 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 341;
        goto frame_exception_exit_1;
    }
    tmp_args_name_12 = const_tuple_str_plain_wglGetPbufferDCARB_tuple;
    tmp_kw_name_12 = _PyDict_NewPresized( 5 );
    tmp_source_name_226 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_226 == NULL ))
    {
        tmp_source_name_226 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_226 == NULL )
    {
        Py_DECREF( tmp_called_name_242 );
        Py_DECREF( tmp_kw_name_12 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 342;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_56 = LOOKUP_ATTRIBUTE( tmp_source_name_226, const_str_plain_GL );
    if ( tmp_dict_value_56 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_242 );
        Py_DECREF( tmp_kw_name_12 );

        exception_lineno = 342;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_56 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_12, tmp_dict_key_56, tmp_dict_value_56 );
    Py_DECREF( tmp_dict_value_56 );
    tmp_dict_value_57 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_dict_value_57 == NULL ))
    {
        tmp_dict_value_57 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_dict_value_57 == NULL )
    {
        Py_DECREF( tmp_called_name_242 );
        Py_DECREF( tmp_kw_name_12 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 342;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_57 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_12, tmp_dict_key_57, tmp_dict_value_57 );
    tmp_dict_value_58 = PyList_New( 1 );
    tmp_list_element_11 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_list_element_11 == NULL ))
    {
        tmp_list_element_11 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_list_element_11 == NULL )
    {
        Py_DECREF( tmp_called_name_242 );
        Py_DECREF( tmp_kw_name_12 );
        Py_DECREF( tmp_dict_value_58 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 343;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_11 );
    PyList_SET_ITEM( tmp_dict_value_58, 0, tmp_list_element_11 );
    tmp_dict_key_58 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_12, tmp_dict_key_58, tmp_dict_value_58 );
    Py_DECREF( tmp_dict_value_58 );
    tmp_dict_value_59 = const_str_digest_54b5330bc1479df8d7d826db27cfe8cb;
    tmp_dict_key_59 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_12, tmp_dict_key_59, tmp_dict_value_59 );
    tmp_dict_value_60 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_60 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_12, tmp_dict_key_60, tmp_dict_value_60 );
    Py_DECREF( tmp_dict_value_60 );
    frame_module->f_lineno = 345;
    tmp_assign_source_238 = CALL_FUNCTION( tmp_called_name_242, tmp_args_name_12, tmp_kw_name_12 );
    Py_DECREF( tmp_called_name_242 );
    Py_DECREF( tmp_kw_name_12 );
    if ( tmp_assign_source_238 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 345;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetPbufferDCARB, tmp_assign_source_238 );
    tmp_source_name_227 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_227 == NULL ))
    {
        tmp_source_name_227 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_227 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 348;
        goto frame_exception_exit_1;
    }

    tmp_called_name_243 = LOOKUP_ATTRIBUTE( tmp_source_name_227, const_str_plain_createBaseFunction );
    if ( tmp_called_name_243 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 348;
        goto frame_exception_exit_1;
    }
    tmp_args_name_13 = const_tuple_str_plain_wglReleasePbufferDCARB_tuple;
    tmp_kw_name_13 = _PyDict_NewPresized( 5 );
    tmp_source_name_228 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_228 == NULL ))
    {
        tmp_source_name_228 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_228 == NULL )
    {
        Py_DECREF( tmp_called_name_243 );
        Py_DECREF( tmp_kw_name_13 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 349;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_61 = LOOKUP_ATTRIBUTE( tmp_source_name_228, const_str_plain_GL );
    if ( tmp_dict_value_61 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_243 );
        Py_DECREF( tmp_kw_name_13 );

        exception_lineno = 349;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_61 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_13, tmp_dict_key_61, tmp_dict_value_61 );
    Py_DECREF( tmp_dict_value_61 );
    tmp_dict_value_62 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_dict_value_62 == NULL ))
    {
        tmp_dict_value_62 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_dict_value_62 == NULL )
    {
        Py_DECREF( tmp_called_name_243 );
        Py_DECREF( tmp_kw_name_13 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 349;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_62 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_13, tmp_dict_key_62, tmp_dict_value_62 );
    tmp_dict_value_63 = PyList_New( 2 );
    tmp_list_element_12 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_list_element_12 == NULL ))
    {
        tmp_list_element_12 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_list_element_12 == NULL )
    {
        Py_DECREF( tmp_called_name_243 );
        Py_DECREF( tmp_kw_name_13 );
        Py_DECREF( tmp_dict_value_63 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 350;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_12 );
    PyList_SET_ITEM( tmp_dict_value_63, 0, tmp_list_element_12 );
    tmp_list_element_12 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_12 == NULL ))
    {
        tmp_list_element_12 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_12 == NULL )
    {
        Py_DECREF( tmp_called_name_243 );
        Py_DECREF( tmp_kw_name_13 );
        Py_DECREF( tmp_dict_value_63 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 350;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_12 );
    PyList_SET_ITEM( tmp_dict_value_63, 1, tmp_list_element_12 );
    tmp_dict_key_63 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_13, tmp_dict_key_63, tmp_dict_value_63 );
    Py_DECREF( tmp_dict_value_63 );
    tmp_dict_value_64 = const_str_digest_1e29b8fb5b60340bf9dcc6018b7b2220;
    tmp_dict_key_64 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_13, tmp_dict_key_64, tmp_dict_value_64 );
    tmp_dict_value_65 = LIST_COPY( const_list_str_plain_None_str_plain_None_list );
    tmp_dict_key_65 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_13, tmp_dict_key_65, tmp_dict_value_65 );
    Py_DECREF( tmp_dict_value_65 );
    frame_module->f_lineno = 352;
    tmp_assign_source_239 = CALL_FUNCTION( tmp_called_name_243, tmp_args_name_13, tmp_kw_name_13 );
    Py_DECREF( tmp_called_name_243 );
    Py_DECREF( tmp_kw_name_13 );
    if ( tmp_assign_source_239 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 352;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglReleasePbufferDCARB, tmp_assign_source_239 );
    tmp_source_name_229 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_229 == NULL ))
    {
        tmp_source_name_229 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_229 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 355;
        goto frame_exception_exit_1;
    }

    tmp_called_name_244 = LOOKUP_ATTRIBUTE( tmp_source_name_229, const_str_plain_createBaseFunction );
    if ( tmp_called_name_244 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 355;
        goto frame_exception_exit_1;
    }
    tmp_args_name_14 = const_tuple_str_plain_wglDestroyPbufferARB_tuple;
    tmp_kw_name_14 = _PyDict_NewPresized( 5 );
    tmp_source_name_230 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_230 == NULL ))
    {
        tmp_source_name_230 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_230 == NULL )
    {
        Py_DECREF( tmp_called_name_244 );
        Py_DECREF( tmp_kw_name_14 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 356;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_66 = LOOKUP_ATTRIBUTE( tmp_source_name_230, const_str_plain_GL );
    if ( tmp_dict_value_66 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_244 );
        Py_DECREF( tmp_kw_name_14 );

        exception_lineno = 356;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_66 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_14, tmp_dict_key_66, tmp_dict_value_66 );
    Py_DECREF( tmp_dict_value_66 );
    tmp_dict_value_67 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_67 == NULL ))
    {
        tmp_dict_value_67 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_67 == NULL )
    {
        Py_DECREF( tmp_called_name_244 );
        Py_DECREF( tmp_kw_name_14 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 356;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_67 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_14, tmp_dict_key_67, tmp_dict_value_67 );
    tmp_dict_value_68 = PyList_New( 1 );
    tmp_list_element_13 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_list_element_13 == NULL ))
    {
        tmp_list_element_13 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_list_element_13 == NULL )
    {
        Py_DECREF( tmp_called_name_244 );
        Py_DECREF( tmp_kw_name_14 );
        Py_DECREF( tmp_dict_value_68 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 357;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_13 );
    PyList_SET_ITEM( tmp_dict_value_68, 0, tmp_list_element_13 );
    tmp_dict_key_68 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_14, tmp_dict_key_68, tmp_dict_value_68 );
    Py_DECREF( tmp_dict_value_68 );
    tmp_dict_value_69 = const_str_digest_8cbdd1ae4c928f811777d058dc2f1aa4;
    tmp_dict_key_69 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_14, tmp_dict_key_69, tmp_dict_value_69 );
    tmp_dict_value_70 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_70 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_14, tmp_dict_key_70, tmp_dict_value_70 );
    Py_DECREF( tmp_dict_value_70 );
    frame_module->f_lineno = 359;
    tmp_assign_source_240 = CALL_FUNCTION( tmp_called_name_244, tmp_args_name_14, tmp_kw_name_14 );
    Py_DECREF( tmp_called_name_244 );
    Py_DECREF( tmp_kw_name_14 );
    if ( tmp_assign_source_240 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 359;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglDestroyPbufferARB, tmp_assign_source_240 );
    tmp_source_name_231 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_231 == NULL ))
    {
        tmp_source_name_231 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_231 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 362;
        goto frame_exception_exit_1;
    }

    tmp_called_name_245 = LOOKUP_ATTRIBUTE( tmp_source_name_231, const_str_plain_createBaseFunction );
    if ( tmp_called_name_245 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 362;
        goto frame_exception_exit_1;
    }
    tmp_args_name_15 = const_tuple_str_plain_wglQueryPbufferARB_tuple;
    tmp_kw_name_15 = _PyDict_NewPresized( 5 );
    tmp_source_name_232 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_232 == NULL ))
    {
        tmp_source_name_232 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_232 == NULL )
    {
        Py_DECREF( tmp_called_name_245 );
        Py_DECREF( tmp_kw_name_15 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 363;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_71 = LOOKUP_ATTRIBUTE( tmp_source_name_232, const_str_plain_GL );
    if ( tmp_dict_value_71 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_245 );
        Py_DECREF( tmp_kw_name_15 );

        exception_lineno = 363;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_71 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_15, tmp_dict_key_71, tmp_dict_value_71 );
    Py_DECREF( tmp_dict_value_71 );
    tmp_dict_value_72 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_72 == NULL ))
    {
        tmp_dict_value_72 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_72 == NULL )
    {
        Py_DECREF( tmp_called_name_245 );
        Py_DECREF( tmp_kw_name_15 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 363;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_72 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_15, tmp_dict_key_72, tmp_dict_value_72 );
    tmp_dict_value_73 = PyList_New( 3 );
    tmp_list_element_14 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_list_element_14 == NULL ))
    {
        tmp_list_element_14 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_list_element_14 == NULL )
    {
        Py_DECREF( tmp_called_name_245 );
        Py_DECREF( tmp_kw_name_15 );
        Py_DECREF( tmp_dict_value_73 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 364;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_14 );
    PyList_SET_ITEM( tmp_dict_value_73, 0, tmp_list_element_14 );
    tmp_list_element_14 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_14 == NULL ))
    {
        tmp_list_element_14 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_14 == NULL )
    {
        Py_DECREF( tmp_called_name_245 );
        Py_DECREF( tmp_kw_name_15 );
        Py_DECREF( tmp_dict_value_73 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 364;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_14 );
    PyList_SET_ITEM( tmp_dict_value_73, 1, tmp_list_element_14 );
    tmp_called_name_246 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_246 == NULL ))
    {
        tmp_called_name_246 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_246 == NULL )
    {
        Py_DECREF( tmp_called_name_245 );
        Py_DECREF( tmp_kw_name_15 );
        Py_DECREF( tmp_dict_value_73 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 364;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_66 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_66 == NULL ))
    {
        tmp_args_element_name_66 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_66 == NULL )
    {
        Py_DECREF( tmp_called_name_245 );
        Py_DECREF( tmp_kw_name_15 );
        Py_DECREF( tmp_dict_value_73 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 364;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 364;
    {
        PyObject *call_args[] = { tmp_args_element_name_66 };
        tmp_list_element_14 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_246, call_args );
    }

    if ( tmp_list_element_14 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_245 );
        Py_DECREF( tmp_kw_name_15 );
        Py_DECREF( tmp_dict_value_73 );

        exception_lineno = 364;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_73, 2, tmp_list_element_14 );
    tmp_dict_key_73 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_15, tmp_dict_key_73, tmp_dict_value_73 );
    Py_DECREF( tmp_dict_value_73 );
    tmp_dict_value_74 = const_str_digest_c765e6673d0ed12472ad1338b822fdcc;
    tmp_dict_key_74 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_15, tmp_dict_key_74, tmp_dict_value_74 );
    tmp_dict_value_75 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_empty_list );
    tmp_dict_key_75 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_15, tmp_dict_key_75, tmp_dict_value_75 );
    Py_DECREF( tmp_dict_value_75 );
    frame_module->f_lineno = 366;
    tmp_assign_source_241 = CALL_FUNCTION( tmp_called_name_245, tmp_args_name_15, tmp_kw_name_15 );
    Py_DECREF( tmp_called_name_245 );
    Py_DECREF( tmp_kw_name_15 );
    if ( tmp_assign_source_241 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 366;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglQueryPbufferARB, tmp_assign_source_241 );
    tmp_called_name_247 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_247 == NULL ))
    {
        tmp_called_name_247 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_247 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 369;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_67 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_args_element_name_67 == NULL ))
    {
        tmp_args_element_name_67 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_args_element_name_67 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 369;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_68 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_68 == NULL ))
    {
        tmp_args_element_name_68 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_68 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 369;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_69 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_69 == NULL ))
    {
        tmp_args_element_name_69 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_69 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 369;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_70 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_70 == NULL ))
    {
        tmp_args_element_name_70 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_70 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 369;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_71 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_71 == NULL ))
    {
        tmp_args_element_name_71 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_71 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 369;
        goto frame_exception_exit_1;
    }

    tmp_called_name_248 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_248 == NULL ))
    {
        tmp_called_name_248 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_248 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 369;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_73 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_73 == NULL ))
    {
        tmp_args_element_name_73 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_73 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 369;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 369;
    {
        PyObject *call_args[] = { tmp_args_element_name_73 };
        tmp_args_element_name_72 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_248, call_args );
    }

    if ( tmp_args_element_name_72 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 369;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 369;
    {
        PyObject *call_args[] = { tmp_args_element_name_67, tmp_args_element_name_68, tmp_args_element_name_69, tmp_args_element_name_70, tmp_args_element_name_71, tmp_args_element_name_72 };
        tmp_assign_source_242 = CALL_FUNCTION_WITH_ARGS6( tmp_called_name_247, call_args );
    }

    Py_DECREF( tmp_args_element_name_72 );
    if ( tmp_assign_source_242 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 369;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLCREATEPBUFFERARBPROC, tmp_assign_source_242 );
    tmp_called_name_249 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_249 == NULL ))
    {
        tmp_called_name_249 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_249 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 370;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_74 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_74 == NULL ))
    {
        tmp_args_element_name_74 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_74 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 370;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_75 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_args_element_name_75 == NULL ))
    {
        tmp_args_element_name_75 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_args_element_name_75 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 370;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 370;
    {
        PyObject *call_args[] = { tmp_args_element_name_74, tmp_args_element_name_75 };
        tmp_assign_source_243 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_249, call_args );
    }

    if ( tmp_assign_source_243 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 370;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETPBUFFERDCARBPROC, tmp_assign_source_243 );
    tmp_called_name_250 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_250 == NULL ))
    {
        tmp_called_name_250 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_250 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 371;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_76 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_76 == NULL ))
    {
        tmp_args_element_name_76 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_76 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 371;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_77 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_args_element_name_77 == NULL ))
    {
        tmp_args_element_name_77 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_args_element_name_77 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 371;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_78 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_78 == NULL ))
    {
        tmp_args_element_name_78 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_78 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 371;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 371;
    {
        PyObject *call_args[] = { tmp_args_element_name_76, tmp_args_element_name_77, tmp_args_element_name_78 };
        tmp_assign_source_244 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_250, call_args );
    }

    if ( tmp_assign_source_244 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 371;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLRELEASEPBUFFERDCARBPROC, tmp_assign_source_244 );
    tmp_called_name_251 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_251 == NULL ))
    {
        tmp_called_name_251 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_251 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 372;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_79 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_79 == NULL ))
    {
        tmp_args_element_name_79 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_79 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 372;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_80 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_args_element_name_80 == NULL ))
    {
        tmp_args_element_name_80 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_args_element_name_80 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 372;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 372;
    {
        PyObject *call_args[] = { tmp_args_element_name_79, tmp_args_element_name_80 };
        tmp_assign_source_245 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_251, call_args );
    }

    if ( tmp_assign_source_245 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 372;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLDESTROYPBUFFERARBPROC, tmp_assign_source_245 );
    tmp_called_name_252 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_252 == NULL ))
    {
        tmp_called_name_252 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_252 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 373;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_81 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_81 == NULL ))
    {
        tmp_args_element_name_81 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_81 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 373;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_82 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_args_element_name_82 == NULL ))
    {
        tmp_args_element_name_82 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_args_element_name_82 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 373;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_83 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_83 == NULL ))
    {
        tmp_args_element_name_83 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_83 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 373;
        goto frame_exception_exit_1;
    }

    tmp_called_name_253 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_253 == NULL ))
    {
        tmp_called_name_253 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_253 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 373;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_85 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_85 == NULL ))
    {
        tmp_args_element_name_85 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_85 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 373;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 373;
    {
        PyObject *call_args[] = { tmp_args_element_name_85 };
        tmp_args_element_name_84 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_253, call_args );
    }

    if ( tmp_args_element_name_84 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 373;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 373;
    {
        PyObject *call_args[] = { tmp_args_element_name_81, tmp_args_element_name_82, tmp_args_element_name_83, tmp_args_element_name_84 };
        tmp_assign_source_246 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_252, call_args );
    }

    Py_DECREF( tmp_args_element_name_84 );
    if ( tmp_assign_source_246 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 373;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLQUERYPBUFFERARBPROC, tmp_assign_source_246 );
    tmp_source_name_233 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_233 == NULL ))
    {
        tmp_source_name_233 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_233 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 375;
        goto frame_exception_exit_1;
    }

    tmp_called_name_254 = LOOKUP_ATTRIBUTE( tmp_source_name_233, const_str_plain_Constant );
    if ( tmp_called_name_254 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 375;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 375;
    tmp_assign_source_247 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_254, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ARB_render_texture_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_254 );
    if ( tmp_assign_source_247 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 375;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ARB_render_texture, tmp_assign_source_247 );
    tmp_source_name_234 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_234 == NULL ))
    {
        tmp_source_name_234 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_234 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 376;
        goto frame_exception_exit_1;
    }

    tmp_called_name_255 = LOOKUP_ATTRIBUTE( tmp_source_name_234, const_str_plain_createBaseFunction );
    if ( tmp_called_name_255 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 376;
        goto frame_exception_exit_1;
    }
    tmp_args_name_16 = const_tuple_str_plain_wglBindTexImageARB_tuple;
    tmp_kw_name_16 = _PyDict_NewPresized( 5 );
    tmp_source_name_235 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_235 == NULL ))
    {
        tmp_source_name_235 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_235 == NULL )
    {
        Py_DECREF( tmp_called_name_255 );
        Py_DECREF( tmp_kw_name_16 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 377;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_76 = LOOKUP_ATTRIBUTE( tmp_source_name_235, const_str_plain_GL );
    if ( tmp_dict_value_76 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_255 );
        Py_DECREF( tmp_kw_name_16 );

        exception_lineno = 377;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_76 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_16, tmp_dict_key_76, tmp_dict_value_76 );
    Py_DECREF( tmp_dict_value_76 );
    tmp_dict_value_77 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_77 == NULL ))
    {
        tmp_dict_value_77 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_77 == NULL )
    {
        Py_DECREF( tmp_called_name_255 );
        Py_DECREF( tmp_kw_name_16 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 377;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_77 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_16, tmp_dict_key_77, tmp_dict_value_77 );
    tmp_dict_value_78 = PyList_New( 2 );
    tmp_list_element_15 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_list_element_15 == NULL ))
    {
        tmp_list_element_15 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_list_element_15 == NULL )
    {
        Py_DECREF( tmp_called_name_255 );
        Py_DECREF( tmp_kw_name_16 );
        Py_DECREF( tmp_dict_value_78 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 378;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_15 );
    PyList_SET_ITEM( tmp_dict_value_78, 0, tmp_list_element_15 );
    tmp_list_element_15 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_15 == NULL ))
    {
        tmp_list_element_15 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_15 == NULL )
    {
        Py_DECREF( tmp_called_name_255 );
        Py_DECREF( tmp_kw_name_16 );
        Py_DECREF( tmp_dict_value_78 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 378;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_15 );
    PyList_SET_ITEM( tmp_dict_value_78, 1, tmp_list_element_15 );
    tmp_dict_key_78 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_16, tmp_dict_key_78, tmp_dict_value_78 );
    Py_DECREF( tmp_dict_value_78 );
    tmp_dict_value_79 = const_str_digest_ec551b33dfa847324c632cf0ef0bb850;
    tmp_dict_key_79 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_16, tmp_dict_key_79, tmp_dict_value_79 );
    tmp_dict_value_80 = LIST_COPY( const_list_str_plain_None_str_plain_None_list );
    tmp_dict_key_80 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_16, tmp_dict_key_80, tmp_dict_value_80 );
    Py_DECREF( tmp_dict_value_80 );
    frame_module->f_lineno = 380;
    tmp_assign_source_248 = CALL_FUNCTION( tmp_called_name_255, tmp_args_name_16, tmp_kw_name_16 );
    Py_DECREF( tmp_called_name_255 );
    Py_DECREF( tmp_kw_name_16 );
    if ( tmp_assign_source_248 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 380;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglBindTexImageARB, tmp_assign_source_248 );
    tmp_source_name_236 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_236 == NULL ))
    {
        tmp_source_name_236 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_236 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 383;
        goto frame_exception_exit_1;
    }

    tmp_called_name_256 = LOOKUP_ATTRIBUTE( tmp_source_name_236, const_str_plain_createBaseFunction );
    if ( tmp_called_name_256 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 383;
        goto frame_exception_exit_1;
    }
    tmp_args_name_17 = const_tuple_str_plain_wglReleaseTexImageARB_tuple;
    tmp_kw_name_17 = _PyDict_NewPresized( 5 );
    tmp_source_name_237 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_237 == NULL ))
    {
        tmp_source_name_237 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_237 == NULL )
    {
        Py_DECREF( tmp_called_name_256 );
        Py_DECREF( tmp_kw_name_17 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 384;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_81 = LOOKUP_ATTRIBUTE( tmp_source_name_237, const_str_plain_GL );
    if ( tmp_dict_value_81 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_256 );
        Py_DECREF( tmp_kw_name_17 );

        exception_lineno = 384;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_81 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_17, tmp_dict_key_81, tmp_dict_value_81 );
    Py_DECREF( tmp_dict_value_81 );
    tmp_dict_value_82 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_82 == NULL ))
    {
        tmp_dict_value_82 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_82 == NULL )
    {
        Py_DECREF( tmp_called_name_256 );
        Py_DECREF( tmp_kw_name_17 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 384;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_82 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_17, tmp_dict_key_82, tmp_dict_value_82 );
    tmp_dict_value_83 = PyList_New( 2 );
    tmp_list_element_16 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_list_element_16 == NULL ))
    {
        tmp_list_element_16 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_list_element_16 == NULL )
    {
        Py_DECREF( tmp_called_name_256 );
        Py_DECREF( tmp_kw_name_17 );
        Py_DECREF( tmp_dict_value_83 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 385;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_16 );
    PyList_SET_ITEM( tmp_dict_value_83, 0, tmp_list_element_16 );
    tmp_list_element_16 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_16 == NULL ))
    {
        tmp_list_element_16 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_16 == NULL )
    {
        Py_DECREF( tmp_called_name_256 );
        Py_DECREF( tmp_kw_name_17 );
        Py_DECREF( tmp_dict_value_83 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 385;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_16 );
    PyList_SET_ITEM( tmp_dict_value_83, 1, tmp_list_element_16 );
    tmp_dict_key_83 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_17, tmp_dict_key_83, tmp_dict_value_83 );
    Py_DECREF( tmp_dict_value_83 );
    tmp_dict_value_84 = const_str_digest_9de82e7dfc50f53dbba63c180550aaa0;
    tmp_dict_key_84 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_17, tmp_dict_key_84, tmp_dict_value_84 );
    tmp_dict_value_85 = LIST_COPY( const_list_str_plain_None_str_plain_None_list );
    tmp_dict_key_85 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_17, tmp_dict_key_85, tmp_dict_value_85 );
    Py_DECREF( tmp_dict_value_85 );
    frame_module->f_lineno = 387;
    tmp_assign_source_249 = CALL_FUNCTION( tmp_called_name_256, tmp_args_name_17, tmp_kw_name_17 );
    Py_DECREF( tmp_called_name_256 );
    Py_DECREF( tmp_kw_name_17 );
    if ( tmp_assign_source_249 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 387;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglReleaseTexImageARB, tmp_assign_source_249 );
    tmp_source_name_238 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_238 == NULL ))
    {
        tmp_source_name_238 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_238 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 390;
        goto frame_exception_exit_1;
    }

    tmp_called_name_257 = LOOKUP_ATTRIBUTE( tmp_source_name_238, const_str_plain_createBaseFunction );
    if ( tmp_called_name_257 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 390;
        goto frame_exception_exit_1;
    }
    tmp_args_name_18 = const_tuple_str_plain_wglSetPbufferAttribARB_tuple;
    tmp_kw_name_18 = _PyDict_NewPresized( 5 );
    tmp_source_name_239 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_239 == NULL ))
    {
        tmp_source_name_239 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_239 == NULL )
    {
        Py_DECREF( tmp_called_name_257 );
        Py_DECREF( tmp_kw_name_18 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 391;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_86 = LOOKUP_ATTRIBUTE( tmp_source_name_239, const_str_plain_GL );
    if ( tmp_dict_value_86 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_257 );
        Py_DECREF( tmp_kw_name_18 );

        exception_lineno = 391;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_86 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_18, tmp_dict_key_86, tmp_dict_value_86 );
    Py_DECREF( tmp_dict_value_86 );
    tmp_dict_value_87 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_87 == NULL ))
    {
        tmp_dict_value_87 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_87 == NULL )
    {
        Py_DECREF( tmp_called_name_257 );
        Py_DECREF( tmp_kw_name_18 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 391;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_87 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_18, tmp_dict_key_87, tmp_dict_value_87 );
    tmp_dict_value_88 = PyList_New( 2 );
    tmp_list_element_17 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_list_element_17 == NULL ))
    {
        tmp_list_element_17 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_list_element_17 == NULL )
    {
        Py_DECREF( tmp_called_name_257 );
        Py_DECREF( tmp_kw_name_18 );
        Py_DECREF( tmp_dict_value_88 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 392;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_17 );
    PyList_SET_ITEM( tmp_dict_value_88, 0, tmp_list_element_17 );
    tmp_called_name_258 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_258 == NULL ))
    {
        tmp_called_name_258 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_258 == NULL )
    {
        Py_DECREF( tmp_called_name_257 );
        Py_DECREF( tmp_kw_name_18 );
        Py_DECREF( tmp_dict_value_88 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 392;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_86 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_86 == NULL ))
    {
        tmp_args_element_name_86 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_86 == NULL )
    {
        Py_DECREF( tmp_called_name_257 );
        Py_DECREF( tmp_kw_name_18 );
        Py_DECREF( tmp_dict_value_88 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 392;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 392;
    {
        PyObject *call_args[] = { tmp_args_element_name_86 };
        tmp_list_element_17 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_258, call_args );
    }

    if ( tmp_list_element_17 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_257 );
        Py_DECREF( tmp_kw_name_18 );
        Py_DECREF( tmp_dict_value_88 );

        exception_lineno = 392;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_88, 1, tmp_list_element_17 );
    tmp_dict_key_88 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_18, tmp_dict_key_88, tmp_dict_value_88 );
    Py_DECREF( tmp_dict_value_88 );
    tmp_dict_value_89 = const_str_digest_0b022b670f275c3db7cb43e5478c173b;
    tmp_dict_key_89 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_18, tmp_dict_key_89, tmp_dict_value_89 );
    tmp_dict_value_90 = LIST_COPY( const_list_str_plain_None_str_empty_list );
    tmp_dict_key_90 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_18, tmp_dict_key_90, tmp_dict_value_90 );
    Py_DECREF( tmp_dict_value_90 );
    frame_module->f_lineno = 394;
    tmp_assign_source_250 = CALL_FUNCTION( tmp_called_name_257, tmp_args_name_18, tmp_kw_name_18 );
    Py_DECREF( tmp_called_name_257 );
    Py_DECREF( tmp_kw_name_18 );
    if ( tmp_assign_source_250 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 394;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglSetPbufferAttribARB, tmp_assign_source_250 );
    tmp_called_name_259 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_259 == NULL ))
    {
        tmp_called_name_259 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_259 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 397;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_87 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_87 == NULL ))
    {
        tmp_args_element_name_87 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_87 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 397;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_88 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_args_element_name_88 == NULL ))
    {
        tmp_args_element_name_88 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_args_element_name_88 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 397;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_89 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_89 == NULL ))
    {
        tmp_args_element_name_89 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_89 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 397;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 397;
    {
        PyObject *call_args[] = { tmp_args_element_name_87, tmp_args_element_name_88, tmp_args_element_name_89 };
        tmp_assign_source_251 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_259, call_args );
    }

    if ( tmp_assign_source_251 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 397;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLBINDTEXIMAGEARBPROC, tmp_assign_source_251 );
    tmp_called_name_260 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_260 == NULL ))
    {
        tmp_called_name_260 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_260 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 398;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_90 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_90 == NULL ))
    {
        tmp_args_element_name_90 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_90 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 398;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_91 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_args_element_name_91 == NULL ))
    {
        tmp_args_element_name_91 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_args_element_name_91 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 398;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_92 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_92 == NULL ))
    {
        tmp_args_element_name_92 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_92 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 398;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 398;
    {
        PyObject *call_args[] = { tmp_args_element_name_90, tmp_args_element_name_91, tmp_args_element_name_92 };
        tmp_assign_source_252 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_260, call_args );
    }

    if ( tmp_assign_source_252 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 398;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLRELEASETEXIMAGEARBPROC, tmp_assign_source_252 );
    tmp_called_name_261 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_261 == NULL ))
    {
        tmp_called_name_261 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_261 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 399;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_93 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_93 == NULL ))
    {
        tmp_args_element_name_93 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_93 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 399;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_94 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );

    if (unlikely( tmp_args_element_name_94 == NULL ))
    {
        tmp_args_element_name_94 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFERARB );
    }

    if ( tmp_args_element_name_94 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFERARB" );
        exception_tb = NULL;

        exception_lineno = 399;
        goto frame_exception_exit_1;
    }

    tmp_called_name_262 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_262 == NULL ))
    {
        tmp_called_name_262 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_262 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 399;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_96 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_96 == NULL ))
    {
        tmp_args_element_name_96 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_96 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 399;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 399;
    {
        PyObject *call_args[] = { tmp_args_element_name_96 };
        tmp_args_element_name_95 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_262, call_args );
    }

    if ( tmp_args_element_name_95 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 399;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 399;
    {
        PyObject *call_args[] = { tmp_args_element_name_93, tmp_args_element_name_94, tmp_args_element_name_95 };
        tmp_assign_source_253 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_261, call_args );
    }

    Py_DECREF( tmp_args_element_name_95 );
    if ( tmp_assign_source_253 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 399;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLSETPBUFFERATTRIBARBPROC, tmp_assign_source_253 );
    tmp_source_name_240 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_240 == NULL ))
    {
        tmp_source_name_240 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_240 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 401;
        goto frame_exception_exit_1;
    }

    tmp_called_name_263 = LOOKUP_ATTRIBUTE( tmp_source_name_240, const_str_plain_Constant );
    if ( tmp_called_name_263 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 401;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 401;
    tmp_assign_source_254 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_263, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ARB_pixel_format_float_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_263 );
    if ( tmp_assign_source_254 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 401;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ARB_pixel_format_float, tmp_assign_source_254 );
    tmp_source_name_241 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_241 == NULL ))
    {
        tmp_source_name_241 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_241 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 403;
        goto frame_exception_exit_1;
    }

    tmp_called_name_264 = LOOKUP_ATTRIBUTE( tmp_source_name_241, const_str_plain_Constant );
    if ( tmp_called_name_264 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 403;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 403;
    tmp_assign_source_255 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_264, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_EXT_display_color_table_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_264 );
    if ( tmp_assign_source_255 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 403;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_EXT_display_color_table, tmp_assign_source_255 );
    tmp_assign_source_256 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_ubyte );

    if (unlikely( tmp_assign_source_256 == NULL ))
    {
        tmp_assign_source_256 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_ubyte );
    }

    if ( tmp_assign_source_256 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_ubyte" );
        exception_tb = NULL;

        exception_lineno = 404;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLboolean, tmp_assign_source_256 );
    tmp_assign_source_257 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_ushort );

    if (unlikely( tmp_assign_source_257 == NULL ))
    {
        tmp_assign_source_257 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_ushort );
    }

    if ( tmp_assign_source_257 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_ushort" );
        exception_tb = NULL;

        exception_lineno = 405;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLushort, tmp_assign_source_257 );
    tmp_source_name_242 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_242 == NULL ))
    {
        tmp_source_name_242 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_242 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 406;
        goto frame_exception_exit_1;
    }

    tmp_called_name_265 = LOOKUP_ATTRIBUTE( tmp_source_name_242, const_str_plain_createBaseFunction );
    if ( tmp_called_name_265 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 406;
        goto frame_exception_exit_1;
    }
    tmp_args_name_19 = const_tuple_str_plain_wglCreateDisplayColorTableEXT_tuple;
    tmp_kw_name_19 = _PyDict_NewPresized( 5 );
    tmp_source_name_243 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_243 == NULL ))
    {
        tmp_source_name_243 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_243 == NULL )
    {
        Py_DECREF( tmp_called_name_265 );
        Py_DECREF( tmp_kw_name_19 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 407;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_91 = LOOKUP_ATTRIBUTE( tmp_source_name_243, const_str_plain_GL );
    if ( tmp_dict_value_91 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_265 );
        Py_DECREF( tmp_kw_name_19 );

        exception_lineno = 407;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_91 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_19, tmp_dict_key_91, tmp_dict_value_91 );
    Py_DECREF( tmp_dict_value_91 );
    tmp_dict_value_92 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLboolean );

    if (unlikely( tmp_dict_value_92 == NULL ))
    {
        tmp_dict_value_92 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLboolean );
    }

    if ( tmp_dict_value_92 == NULL )
    {
        Py_DECREF( tmp_called_name_265 );
        Py_DECREF( tmp_kw_name_19 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLboolean" );
        exception_tb = NULL;

        exception_lineno = 407;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_92 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_19, tmp_dict_key_92, tmp_dict_value_92 );
    tmp_dict_value_93 = PyList_New( 1 );
    tmp_list_element_18 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLushort );

    if (unlikely( tmp_list_element_18 == NULL ))
    {
        tmp_list_element_18 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLushort );
    }

    if ( tmp_list_element_18 == NULL )
    {
        Py_DECREF( tmp_called_name_265 );
        Py_DECREF( tmp_kw_name_19 );
        Py_DECREF( tmp_dict_value_93 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLushort" );
        exception_tb = NULL;

        exception_lineno = 408;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_18 );
    PyList_SET_ITEM( tmp_dict_value_93, 0, tmp_list_element_18 );
    tmp_dict_key_93 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_19, tmp_dict_key_93, tmp_dict_value_93 );
    Py_DECREF( tmp_dict_value_93 );
    tmp_dict_value_94 = const_str_digest_ec500bbfcb661568c2982ed87e10d7d2;
    tmp_dict_key_94 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_19, tmp_dict_key_94, tmp_dict_value_94 );
    tmp_dict_value_95 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_95 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_19, tmp_dict_key_95, tmp_dict_value_95 );
    Py_DECREF( tmp_dict_value_95 );
    frame_module->f_lineno = 410;
    tmp_assign_source_258 = CALL_FUNCTION( tmp_called_name_265, tmp_args_name_19, tmp_kw_name_19 );
    Py_DECREF( tmp_called_name_265 );
    Py_DECREF( tmp_kw_name_19 );
    if ( tmp_assign_source_258 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 410;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglCreateDisplayColorTableEXT, tmp_assign_source_258 );
    tmp_assign_source_259 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_uint );

    if (unlikely( tmp_assign_source_259 == NULL ))
    {
        tmp_assign_source_259 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_uint );
    }

    if ( tmp_assign_source_259 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_uint" );
        exception_tb = NULL;

        exception_lineno = 413;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLuint, tmp_assign_source_259 );
    tmp_source_name_244 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_244 == NULL ))
    {
        tmp_source_name_244 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_244 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 414;
        goto frame_exception_exit_1;
    }

    tmp_called_name_266 = LOOKUP_ATTRIBUTE( tmp_source_name_244, const_str_plain_createBaseFunction );
    if ( tmp_called_name_266 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 414;
        goto frame_exception_exit_1;
    }
    tmp_args_name_20 = const_tuple_str_plain_wglLoadDisplayColorTableEXT_tuple;
    tmp_kw_name_20 = _PyDict_NewPresized( 5 );
    tmp_source_name_245 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_245 == NULL ))
    {
        tmp_source_name_245 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_245 == NULL )
    {
        Py_DECREF( tmp_called_name_266 );
        Py_DECREF( tmp_kw_name_20 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 415;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_96 = LOOKUP_ATTRIBUTE( tmp_source_name_245, const_str_plain_GL );
    if ( tmp_dict_value_96 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_266 );
        Py_DECREF( tmp_kw_name_20 );

        exception_lineno = 415;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_96 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_20, tmp_dict_key_96, tmp_dict_value_96 );
    Py_DECREF( tmp_dict_value_96 );
    tmp_dict_value_97 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLboolean );

    if (unlikely( tmp_dict_value_97 == NULL ))
    {
        tmp_dict_value_97 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLboolean );
    }

    if ( tmp_dict_value_97 == NULL )
    {
        Py_DECREF( tmp_called_name_266 );
        Py_DECREF( tmp_kw_name_20 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLboolean" );
        exception_tb = NULL;

        exception_lineno = 415;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_97 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_20, tmp_dict_key_97, tmp_dict_value_97 );
    tmp_dict_value_98 = PyList_New( 2 );
    tmp_called_name_267 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_267 == NULL ))
    {
        tmp_called_name_267 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_267 == NULL )
    {
        Py_DECREF( tmp_called_name_266 );
        Py_DECREF( tmp_kw_name_20 );
        Py_DECREF( tmp_dict_value_98 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 416;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_97 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLushort );

    if (unlikely( tmp_args_element_name_97 == NULL ))
    {
        tmp_args_element_name_97 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLushort );
    }

    if ( tmp_args_element_name_97 == NULL )
    {
        Py_DECREF( tmp_called_name_266 );
        Py_DECREF( tmp_kw_name_20 );
        Py_DECREF( tmp_dict_value_98 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLushort" );
        exception_tb = NULL;

        exception_lineno = 416;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 416;
    {
        PyObject *call_args[] = { tmp_args_element_name_97 };
        tmp_list_element_19 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_267, call_args );
    }

    if ( tmp_list_element_19 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_266 );
        Py_DECREF( tmp_kw_name_20 );
        Py_DECREF( tmp_dict_value_98 );

        exception_lineno = 416;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_98, 0, tmp_list_element_19 );
    tmp_list_element_19 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLuint );

    if (unlikely( tmp_list_element_19 == NULL ))
    {
        tmp_list_element_19 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLuint );
    }

    if ( tmp_list_element_19 == NULL )
    {
        Py_DECREF( tmp_called_name_266 );
        Py_DECREF( tmp_kw_name_20 );
        Py_DECREF( tmp_dict_value_98 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLuint" );
        exception_tb = NULL;

        exception_lineno = 416;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_19 );
    PyList_SET_ITEM( tmp_dict_value_98, 1, tmp_list_element_19 );
    tmp_dict_key_98 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_20, tmp_dict_key_98, tmp_dict_value_98 );
    Py_DECREF( tmp_dict_value_98 );
    tmp_dict_value_99 = const_str_digest_4d9dd2c7f0d4ef419d757bc9f8f1a8fd;
    tmp_dict_key_99 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_20, tmp_dict_key_99, tmp_dict_value_99 );
    tmp_dict_value_100 = LIST_COPY( const_list_str_empty_str_plain_None_list );
    tmp_dict_key_100 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_20, tmp_dict_key_100, tmp_dict_value_100 );
    Py_DECREF( tmp_dict_value_100 );
    frame_module->f_lineno = 418;
    tmp_assign_source_260 = CALL_FUNCTION( tmp_called_name_266, tmp_args_name_20, tmp_kw_name_20 );
    Py_DECREF( tmp_called_name_266 );
    Py_DECREF( tmp_kw_name_20 );
    if ( tmp_assign_source_260 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 418;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglLoadDisplayColorTableEXT, tmp_assign_source_260 );
    tmp_source_name_246 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_246 == NULL ))
    {
        tmp_source_name_246 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_246 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 421;
        goto frame_exception_exit_1;
    }

    tmp_called_name_268 = LOOKUP_ATTRIBUTE( tmp_source_name_246, const_str_plain_createBaseFunction );
    if ( tmp_called_name_268 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 421;
        goto frame_exception_exit_1;
    }
    tmp_args_name_21 = const_tuple_str_plain_wglBindDisplayColorTableEXT_tuple;
    tmp_kw_name_21 = _PyDict_NewPresized( 5 );
    tmp_source_name_247 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_247 == NULL ))
    {
        tmp_source_name_247 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_247 == NULL )
    {
        Py_DECREF( tmp_called_name_268 );
        Py_DECREF( tmp_kw_name_21 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 422;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_101 = LOOKUP_ATTRIBUTE( tmp_source_name_247, const_str_plain_GL );
    if ( tmp_dict_value_101 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_268 );
        Py_DECREF( tmp_kw_name_21 );

        exception_lineno = 422;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_101 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_21, tmp_dict_key_101, tmp_dict_value_101 );
    Py_DECREF( tmp_dict_value_101 );
    tmp_dict_value_102 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLboolean );

    if (unlikely( tmp_dict_value_102 == NULL ))
    {
        tmp_dict_value_102 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLboolean );
    }

    if ( tmp_dict_value_102 == NULL )
    {
        Py_DECREF( tmp_called_name_268 );
        Py_DECREF( tmp_kw_name_21 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLboolean" );
        exception_tb = NULL;

        exception_lineno = 422;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_102 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_21, tmp_dict_key_102, tmp_dict_value_102 );
    tmp_dict_value_103 = PyList_New( 1 );
    tmp_list_element_20 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLushort );

    if (unlikely( tmp_list_element_20 == NULL ))
    {
        tmp_list_element_20 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLushort );
    }

    if ( tmp_list_element_20 == NULL )
    {
        Py_DECREF( tmp_called_name_268 );
        Py_DECREF( tmp_kw_name_21 );
        Py_DECREF( tmp_dict_value_103 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLushort" );
        exception_tb = NULL;

        exception_lineno = 423;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_20 );
    PyList_SET_ITEM( tmp_dict_value_103, 0, tmp_list_element_20 );
    tmp_dict_key_103 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_21, tmp_dict_key_103, tmp_dict_value_103 );
    Py_DECREF( tmp_dict_value_103 );
    tmp_dict_value_104 = const_str_digest_ea4d73112d8315d78b1cc35366f55d8b;
    tmp_dict_key_104 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_21, tmp_dict_key_104, tmp_dict_value_104 );
    tmp_dict_value_105 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_105 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_21, tmp_dict_key_105, tmp_dict_value_105 );
    Py_DECREF( tmp_dict_value_105 );
    frame_module->f_lineno = 425;
    tmp_assign_source_261 = CALL_FUNCTION( tmp_called_name_268, tmp_args_name_21, tmp_kw_name_21 );
    Py_DECREF( tmp_called_name_268 );
    Py_DECREF( tmp_kw_name_21 );
    if ( tmp_assign_source_261 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 425;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglBindDisplayColorTableEXT, tmp_assign_source_261 );
    tmp_source_name_248 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_248 == NULL ))
    {
        tmp_source_name_248 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_248 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 428;
        goto frame_exception_exit_1;
    }

    tmp_called_name_269 = LOOKUP_ATTRIBUTE( tmp_source_name_248, const_str_plain_createBaseFunction );
    if ( tmp_called_name_269 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 428;
        goto frame_exception_exit_1;
    }
    tmp_args_name_22 = const_tuple_str_plain_wglDestroyDisplayColorTableEXT_tuple;
    tmp_kw_name_22 = _PyDict_NewPresized( 5 );
    tmp_source_name_249 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_249 == NULL ))
    {
        tmp_source_name_249 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_249 == NULL )
    {
        Py_DECREF( tmp_called_name_269 );
        Py_DECREF( tmp_kw_name_22 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 429;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_106 = LOOKUP_ATTRIBUTE( tmp_source_name_249, const_str_plain_GL );
    if ( tmp_dict_value_106 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_269 );
        Py_DECREF( tmp_kw_name_22 );

        exception_lineno = 429;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_106 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_22, tmp_dict_key_106, tmp_dict_value_106 );
    Py_DECREF( tmp_dict_value_106 );
    tmp_dict_value_107 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_VOID );

    if (unlikely( tmp_dict_value_107 == NULL ))
    {
        tmp_dict_value_107 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_VOID );
    }

    if ( tmp_dict_value_107 == NULL )
    {
        Py_DECREF( tmp_called_name_269 );
        Py_DECREF( tmp_kw_name_22 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "VOID" );
        exception_tb = NULL;

        exception_lineno = 429;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_107 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_22, tmp_dict_key_107, tmp_dict_value_107 );
    tmp_dict_value_108 = PyList_New( 1 );
    tmp_list_element_21 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLushort );

    if (unlikely( tmp_list_element_21 == NULL ))
    {
        tmp_list_element_21 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLushort );
    }

    if ( tmp_list_element_21 == NULL )
    {
        Py_DECREF( tmp_called_name_269 );
        Py_DECREF( tmp_kw_name_22 );
        Py_DECREF( tmp_dict_value_108 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLushort" );
        exception_tb = NULL;

        exception_lineno = 430;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_21 );
    PyList_SET_ITEM( tmp_dict_value_108, 0, tmp_list_element_21 );
    tmp_dict_key_108 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_22, tmp_dict_key_108, tmp_dict_value_108 );
    Py_DECREF( tmp_dict_value_108 );
    tmp_dict_value_109 = const_str_digest_78b8bb21b539a15d2b3ea1194255bf7d;
    tmp_dict_key_109 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_22, tmp_dict_key_109, tmp_dict_value_109 );
    tmp_dict_value_110 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_110 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_22, tmp_dict_key_110, tmp_dict_value_110 );
    Py_DECREF( tmp_dict_value_110 );
    frame_module->f_lineno = 432;
    tmp_assign_source_262 = CALL_FUNCTION( tmp_called_name_269, tmp_args_name_22, tmp_kw_name_22 );
    Py_DECREF( tmp_called_name_269 );
    Py_DECREF( tmp_kw_name_22 );
    if ( tmp_assign_source_262 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 432;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglDestroyDisplayColorTableEXT, tmp_assign_source_262 );
    tmp_called_name_270 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_270 == NULL ))
    {
        tmp_called_name_270 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_270 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 435;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_98 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLboolean );

    if (unlikely( tmp_args_element_name_98 == NULL ))
    {
        tmp_args_element_name_98 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLboolean );
    }

    if ( tmp_args_element_name_98 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLboolean" );
        exception_tb = NULL;

        exception_lineno = 435;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_99 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLushort );

    if (unlikely( tmp_args_element_name_99 == NULL ))
    {
        tmp_args_element_name_99 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLushort );
    }

    if ( tmp_args_element_name_99 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLushort" );
        exception_tb = NULL;

        exception_lineno = 435;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 435;
    {
        PyObject *call_args[] = { tmp_args_element_name_98, tmp_args_element_name_99 };
        tmp_assign_source_263 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_270, call_args );
    }

    if ( tmp_assign_source_263 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 435;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC, tmp_assign_source_263 );
    tmp_called_name_271 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_271 == NULL ))
    {
        tmp_called_name_271 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_271 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 436;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_100 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLboolean );

    if (unlikely( tmp_args_element_name_100 == NULL ))
    {
        tmp_args_element_name_100 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLboolean );
    }

    if ( tmp_args_element_name_100 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLboolean" );
        exception_tb = NULL;

        exception_lineno = 436;
        goto frame_exception_exit_1;
    }

    tmp_called_name_272 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_272 == NULL ))
    {
        tmp_called_name_272 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_272 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 436;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_102 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLushort );

    if (unlikely( tmp_args_element_name_102 == NULL ))
    {
        tmp_args_element_name_102 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLushort );
    }

    if ( tmp_args_element_name_102 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLushort" );
        exception_tb = NULL;

        exception_lineno = 436;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 436;
    {
        PyObject *call_args[] = { tmp_args_element_name_102 };
        tmp_args_element_name_101 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_272, call_args );
    }

    if ( tmp_args_element_name_101 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 436;
        goto frame_exception_exit_1;
    }
    tmp_args_element_name_103 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLuint );

    if (unlikely( tmp_args_element_name_103 == NULL ))
    {
        tmp_args_element_name_103 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLuint );
    }

    if ( tmp_args_element_name_103 == NULL )
    {
        Py_DECREF( tmp_args_element_name_101 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLuint" );
        exception_tb = NULL;

        exception_lineno = 436;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 436;
    {
        PyObject *call_args[] = { tmp_args_element_name_100, tmp_args_element_name_101, tmp_args_element_name_103 };
        tmp_assign_source_264 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_271, call_args );
    }

    Py_DECREF( tmp_args_element_name_101 );
    if ( tmp_assign_source_264 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 436;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLLOADDISPLAYCOLORTABLEEXTPROC, tmp_assign_source_264 );
    tmp_called_name_273 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_273 == NULL ))
    {
        tmp_called_name_273 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_273 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 437;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_104 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLboolean );

    if (unlikely( tmp_args_element_name_104 == NULL ))
    {
        tmp_args_element_name_104 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLboolean );
    }

    if ( tmp_args_element_name_104 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLboolean" );
        exception_tb = NULL;

        exception_lineno = 437;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_105 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLushort );

    if (unlikely( tmp_args_element_name_105 == NULL ))
    {
        tmp_args_element_name_105 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLushort );
    }

    if ( tmp_args_element_name_105 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLushort" );
        exception_tb = NULL;

        exception_lineno = 437;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 437;
    {
        PyObject *call_args[] = { tmp_args_element_name_104, tmp_args_element_name_105 };
        tmp_assign_source_265 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_273, call_args );
    }

    if ( tmp_assign_source_265 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 437;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLBINDDISPLAYCOLORTABLEEXTPROC, tmp_assign_source_265 );
    tmp_called_name_274 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_274 == NULL ))
    {
        tmp_called_name_274 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_274 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 438;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_106 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_VOID );

    if (unlikely( tmp_args_element_name_106 == NULL ))
    {
        tmp_args_element_name_106 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_VOID );
    }

    if ( tmp_args_element_name_106 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "VOID" );
        exception_tb = NULL;

        exception_lineno = 438;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_107 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLushort );

    if (unlikely( tmp_args_element_name_107 == NULL ))
    {
        tmp_args_element_name_107 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLushort );
    }

    if ( tmp_args_element_name_107 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLushort" );
        exception_tb = NULL;

        exception_lineno = 438;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 438;
    {
        PyObject *call_args[] = { tmp_args_element_name_106, tmp_args_element_name_107 };
        tmp_assign_source_266 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_274, call_args );
    }

    if ( tmp_assign_source_266 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 438;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC, tmp_assign_source_266 );
    tmp_source_name_250 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_250 == NULL ))
    {
        tmp_source_name_250 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_250 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 440;
        goto frame_exception_exit_1;
    }

    tmp_called_name_275 = LOOKUP_ATTRIBUTE( tmp_source_name_250, const_str_plain_Constant );
    if ( tmp_called_name_275 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 440;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 440;
    tmp_assign_source_267 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_275, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_EXT_extensions_string_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_275 );
    if ( tmp_assign_source_267 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 440;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_EXT_extensions_string, tmp_assign_source_267 );
    tmp_source_name_251 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_251 == NULL ))
    {
        tmp_source_name_251 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_251 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 441;
        goto frame_exception_exit_1;
    }

    tmp_called_name_276 = LOOKUP_ATTRIBUTE( tmp_source_name_251, const_str_plain_createBaseFunction );
    if ( tmp_called_name_276 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 441;
        goto frame_exception_exit_1;
    }
    tmp_args_name_23 = const_tuple_str_plain_wglGetExtensionsStringEXT_tuple;
    tmp_kw_name_23 = _PyDict_NewPresized( 5 );
    tmp_source_name_252 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_252 == NULL ))
    {
        tmp_source_name_252 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_252 == NULL )
    {
        Py_DECREF( tmp_called_name_276 );
        Py_DECREF( tmp_kw_name_23 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 442;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_111 = LOOKUP_ATTRIBUTE( tmp_source_name_252, const_str_plain_GL );
    if ( tmp_dict_value_111 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_276 );
        Py_DECREF( tmp_kw_name_23 );

        exception_lineno = 442;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_111 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_23, tmp_dict_key_111, tmp_dict_value_111 );
    Py_DECREF( tmp_dict_value_111 );
    tmp_dict_value_112 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_char_p );

    if (unlikely( tmp_dict_value_112 == NULL ))
    {
        tmp_dict_value_112 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_char_p );
    }

    if ( tmp_dict_value_112 == NULL )
    {
        Py_DECREF( tmp_called_name_276 );
        Py_DECREF( tmp_kw_name_23 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_char_p" );
        exception_tb = NULL;

        exception_lineno = 442;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_112 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_23, tmp_dict_key_112, tmp_dict_value_112 );
    tmp_dict_value_113 = PyList_New( 0 );
    tmp_dict_key_113 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_23, tmp_dict_key_113, tmp_dict_value_113 );
    Py_DECREF( tmp_dict_value_113 );
    tmp_dict_value_114 = const_str_digest_ac53c5eb533d138ddfa18088ceca426a;
    tmp_dict_key_114 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_23, tmp_dict_key_114, tmp_dict_value_114 );
    tmp_dict_value_115 = PyList_New( 0 );
    tmp_dict_key_115 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_23, tmp_dict_key_115, tmp_dict_value_115 );
    Py_DECREF( tmp_dict_value_115 );
    frame_module->f_lineno = 445;
    tmp_assign_source_268 = CALL_FUNCTION( tmp_called_name_276, tmp_args_name_23, tmp_kw_name_23 );
    Py_DECREF( tmp_called_name_276 );
    Py_DECREF( tmp_kw_name_23 );
    if ( tmp_assign_source_268 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 445;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetExtensionsStringEXT, tmp_assign_source_268 );
    tmp_called_name_277 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_277 == NULL ))
    {
        tmp_called_name_277 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_277 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 448;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_108 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_char_p );

    if (unlikely( tmp_args_element_name_108 == NULL ))
    {
        tmp_args_element_name_108 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_char_p );
    }

    if ( tmp_args_element_name_108 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_char_p" );
        exception_tb = NULL;

        exception_lineno = 448;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 448;
    {
        PyObject *call_args[] = { tmp_args_element_name_108 };
        tmp_assign_source_269 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_277, call_args );
    }

    if ( tmp_assign_source_269 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 448;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETEXTENSIONSSTRINGEXTPROC, tmp_assign_source_269 );
    tmp_source_name_253 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_253 == NULL ))
    {
        tmp_source_name_253 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_253 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 450;
        goto frame_exception_exit_1;
    }

    tmp_called_name_278 = LOOKUP_ATTRIBUTE( tmp_source_name_253, const_str_plain_Constant );
    if ( tmp_called_name_278 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 450;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 450;
    tmp_assign_source_270 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_278, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_EXT_make_current_read_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_278 );
    if ( tmp_assign_source_270 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 450;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_EXT_make_current_read, tmp_assign_source_270 );
    tmp_source_name_254 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_254 == NULL ))
    {
        tmp_source_name_254 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_254 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 451;
        goto frame_exception_exit_1;
    }

    tmp_called_name_279 = LOOKUP_ATTRIBUTE( tmp_source_name_254, const_str_plain_createBaseFunction );
    if ( tmp_called_name_279 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 451;
        goto frame_exception_exit_1;
    }
    tmp_args_name_24 = const_tuple_str_plain_wglMakeContextCurrentEXT_tuple;
    tmp_kw_name_24 = _PyDict_NewPresized( 5 );
    tmp_source_name_255 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_255 == NULL ))
    {
        tmp_source_name_255 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_255 == NULL )
    {
        Py_DECREF( tmp_called_name_279 );
        Py_DECREF( tmp_kw_name_24 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 452;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_116 = LOOKUP_ATTRIBUTE( tmp_source_name_255, const_str_plain_GL );
    if ( tmp_dict_value_116 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_279 );
        Py_DECREF( tmp_kw_name_24 );

        exception_lineno = 452;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_116 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_24, tmp_dict_key_116, tmp_dict_value_116 );
    Py_DECREF( tmp_dict_value_116 );
    tmp_dict_value_117 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_117 == NULL ))
    {
        tmp_dict_value_117 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_117 == NULL )
    {
        Py_DECREF( tmp_called_name_279 );
        Py_DECREF( tmp_kw_name_24 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 452;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_117 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_24, tmp_dict_key_117, tmp_dict_value_117 );
    tmp_dict_value_118 = PyList_New( 3 );
    tmp_list_element_22 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_22 == NULL ))
    {
        tmp_list_element_22 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_22 == NULL )
    {
        Py_DECREF( tmp_called_name_279 );
        Py_DECREF( tmp_kw_name_24 );
        Py_DECREF( tmp_dict_value_118 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 453;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_22 );
    PyList_SET_ITEM( tmp_dict_value_118, 0, tmp_list_element_22 );
    tmp_list_element_22 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_22 == NULL ))
    {
        tmp_list_element_22 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_22 == NULL )
    {
        Py_DECREF( tmp_called_name_279 );
        Py_DECREF( tmp_kw_name_24 );
        Py_DECREF( tmp_dict_value_118 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 453;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_22 );
    PyList_SET_ITEM( tmp_dict_value_118, 1, tmp_list_element_22 );
    tmp_list_element_22 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HGLRC );

    if (unlikely( tmp_list_element_22 == NULL ))
    {
        tmp_list_element_22 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HGLRC );
    }

    if ( tmp_list_element_22 == NULL )
    {
        Py_DECREF( tmp_called_name_279 );
        Py_DECREF( tmp_kw_name_24 );
        Py_DECREF( tmp_dict_value_118 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HGLRC" );
        exception_tb = NULL;

        exception_lineno = 453;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_22 );
    PyList_SET_ITEM( tmp_dict_value_118, 2, tmp_list_element_22 );
    tmp_dict_key_118 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_24, tmp_dict_key_118, tmp_dict_value_118 );
    Py_DECREF( tmp_dict_value_118 );
    tmp_dict_value_119 = const_str_digest_c79d15590a491407c93d639cdfea7567;
    tmp_dict_key_119 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_24, tmp_dict_key_119, tmp_dict_value_119 );
    tmp_dict_value_120 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_plain_None_list );
    tmp_dict_key_120 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_24, tmp_dict_key_120, tmp_dict_value_120 );
    Py_DECREF( tmp_dict_value_120 );
    frame_module->f_lineno = 455;
    tmp_assign_source_271 = CALL_FUNCTION( tmp_called_name_279, tmp_args_name_24, tmp_kw_name_24 );
    Py_DECREF( tmp_called_name_279 );
    Py_DECREF( tmp_kw_name_24 );
    if ( tmp_assign_source_271 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 455;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglMakeContextCurrentEXT, tmp_assign_source_271 );
    tmp_source_name_256 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_256 == NULL ))
    {
        tmp_source_name_256 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_256 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 458;
        goto frame_exception_exit_1;
    }

    tmp_called_name_280 = LOOKUP_ATTRIBUTE( tmp_source_name_256, const_str_plain_createBaseFunction );
    if ( tmp_called_name_280 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 458;
        goto frame_exception_exit_1;
    }
    tmp_args_name_25 = const_tuple_str_plain_wglGetCurrentReadDCEXT_tuple;
    tmp_kw_name_25 = _PyDict_NewPresized( 5 );
    tmp_source_name_257 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_257 == NULL ))
    {
        tmp_source_name_257 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_257 == NULL )
    {
        Py_DECREF( tmp_called_name_280 );
        Py_DECREF( tmp_kw_name_25 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 459;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_121 = LOOKUP_ATTRIBUTE( tmp_source_name_257, const_str_plain_GL );
    if ( tmp_dict_value_121 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_280 );
        Py_DECREF( tmp_kw_name_25 );

        exception_lineno = 459;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_121 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_25, tmp_dict_key_121, tmp_dict_value_121 );
    Py_DECREF( tmp_dict_value_121 );
    tmp_dict_value_122 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_dict_value_122 == NULL ))
    {
        tmp_dict_value_122 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_dict_value_122 == NULL )
    {
        Py_DECREF( tmp_called_name_280 );
        Py_DECREF( tmp_kw_name_25 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 459;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_122 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_25, tmp_dict_key_122, tmp_dict_value_122 );
    tmp_dict_value_123 = PyList_New( 0 );
    tmp_dict_key_123 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_25, tmp_dict_key_123, tmp_dict_value_123 );
    Py_DECREF( tmp_dict_value_123 );
    tmp_dict_value_124 = const_str_digest_67357c0934da8901ac85bf0174bdca3a;
    tmp_dict_key_124 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_25, tmp_dict_key_124, tmp_dict_value_124 );
    tmp_dict_value_125 = PyList_New( 0 );
    tmp_dict_key_125 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_25, tmp_dict_key_125, tmp_dict_value_125 );
    Py_DECREF( tmp_dict_value_125 );
    frame_module->f_lineno = 462;
    tmp_assign_source_272 = CALL_FUNCTION( tmp_called_name_280, tmp_args_name_25, tmp_kw_name_25 );
    Py_DECREF( tmp_called_name_280 );
    Py_DECREF( tmp_kw_name_25 );
    if ( tmp_assign_source_272 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 462;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetCurrentReadDCEXT, tmp_assign_source_272 );
    tmp_called_name_281 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_281 == NULL ))
    {
        tmp_called_name_281 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_281 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 465;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_109 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_109 == NULL ))
    {
        tmp_args_element_name_109 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_109 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 465;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_110 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_110 == NULL ))
    {
        tmp_args_element_name_110 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_110 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 465;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_111 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_111 == NULL ))
    {
        tmp_args_element_name_111 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_111 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 465;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_112 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HGLRC );

    if (unlikely( tmp_args_element_name_112 == NULL ))
    {
        tmp_args_element_name_112 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HGLRC );
    }

    if ( tmp_args_element_name_112 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HGLRC" );
        exception_tb = NULL;

        exception_lineno = 465;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 465;
    {
        PyObject *call_args[] = { tmp_args_element_name_109, tmp_args_element_name_110, tmp_args_element_name_111, tmp_args_element_name_112 };
        tmp_assign_source_273 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_281, call_args );
    }

    if ( tmp_assign_source_273 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 465;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLMAKECONTEXTCURRENTEXTPROC, tmp_assign_source_273 );
    tmp_called_name_282 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_282 == NULL ))
    {
        tmp_called_name_282 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_282 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 466;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_113 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_113 == NULL ))
    {
        tmp_args_element_name_113 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_113 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 466;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 466;
    {
        PyObject *call_args[] = { tmp_args_element_name_113 };
        tmp_assign_source_274 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_282, call_args );
    }

    if ( tmp_assign_source_274 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 466;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETCURRENTREADDCEXTPROC, tmp_assign_source_274 );
    tmp_source_name_258 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_258 == NULL ))
    {
        tmp_source_name_258 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_258 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 468;
        goto frame_exception_exit_1;
    }

    tmp_called_name_283 = LOOKUP_ATTRIBUTE( tmp_source_name_258, const_str_plain_Constant );
    if ( tmp_called_name_283 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 468;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 468;
    tmp_assign_source_275 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_283, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_EXT_pbuffer_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_283 );
    if ( tmp_assign_source_275 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 468;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_EXT_pbuffer, tmp_assign_source_275 );
    tmp_source_name_259 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_259 == NULL ))
    {
        tmp_source_name_259 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_259 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 469;
        goto frame_exception_exit_1;
    }

    tmp_called_name_284 = LOOKUP_ATTRIBUTE( tmp_source_name_259, const_str_plain_createBaseFunction );
    if ( tmp_called_name_284 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 469;
        goto frame_exception_exit_1;
    }
    tmp_args_name_26 = const_tuple_str_plain_wglCreatePbufferEXT_tuple;
    tmp_kw_name_26 = _PyDict_NewPresized( 5 );
    tmp_source_name_260 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_260 == NULL ))
    {
        tmp_source_name_260 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_260 == NULL )
    {
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 470;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_126 = LOOKUP_ATTRIBUTE( tmp_source_name_260, const_str_plain_GL );
    if ( tmp_dict_value_126 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );

        exception_lineno = 470;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_126 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_26, tmp_dict_key_126, tmp_dict_value_126 );
    Py_DECREF( tmp_dict_value_126 );
    tmp_dict_value_127 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_dict_value_127 == NULL ))
    {
        tmp_dict_value_127 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_dict_value_127 == NULL )
    {
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 470;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_127 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_26, tmp_dict_key_127, tmp_dict_value_127 );
    tmp_dict_value_128 = PyList_New( 5 );
    tmp_list_element_23 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_23 == NULL ))
    {
        tmp_list_element_23 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_23 == NULL )
    {
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );
        Py_DECREF( tmp_dict_value_128 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 471;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_23 );
    PyList_SET_ITEM( tmp_dict_value_128, 0, tmp_list_element_23 );
    tmp_list_element_23 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_23 == NULL ))
    {
        tmp_list_element_23 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_23 == NULL )
    {
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );
        Py_DECREF( tmp_dict_value_128 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 471;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_23 );
    PyList_SET_ITEM( tmp_dict_value_128, 1, tmp_list_element_23 );
    tmp_list_element_23 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_23 == NULL ))
    {
        tmp_list_element_23 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_23 == NULL )
    {
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );
        Py_DECREF( tmp_dict_value_128 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 471;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_23 );
    PyList_SET_ITEM( tmp_dict_value_128, 2, tmp_list_element_23 );
    tmp_list_element_23 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_23 == NULL ))
    {
        tmp_list_element_23 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_23 == NULL )
    {
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );
        Py_DECREF( tmp_dict_value_128 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 471;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_23 );
    PyList_SET_ITEM( tmp_dict_value_128, 3, tmp_list_element_23 );
    tmp_called_name_285 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_285 == NULL ))
    {
        tmp_called_name_285 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_285 == NULL )
    {
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );
        Py_DECREF( tmp_dict_value_128 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 471;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_114 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_114 == NULL ))
    {
        tmp_args_element_name_114 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_114 == NULL )
    {
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );
        Py_DECREF( tmp_dict_value_128 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 471;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 471;
    {
        PyObject *call_args[] = { tmp_args_element_name_114 };
        tmp_list_element_23 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_285, call_args );
    }

    if ( tmp_list_element_23 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_284 );
        Py_DECREF( tmp_kw_name_26 );
        Py_DECREF( tmp_dict_value_128 );

        exception_lineno = 471;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_128, 4, tmp_list_element_23 );
    tmp_dict_key_128 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_26, tmp_dict_key_128, tmp_dict_value_128 );
    Py_DECREF( tmp_dict_value_128 );
    tmp_dict_value_129 = const_str_digest_ffa6fb29db073fbbe133e85f2fc03304;
    tmp_dict_key_129 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_26, tmp_dict_key_129, tmp_dict_value_129 );
    tmp_dict_value_130 = LIST_COPY( const_list_fd90a4c5cb8370fe56e71dd0a27664ad_list );
    tmp_dict_key_130 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_26, tmp_dict_key_130, tmp_dict_value_130 );
    Py_DECREF( tmp_dict_value_130 );
    frame_module->f_lineno = 473;
    tmp_assign_source_276 = CALL_FUNCTION( tmp_called_name_284, tmp_args_name_26, tmp_kw_name_26 );
    Py_DECREF( tmp_called_name_284 );
    Py_DECREF( tmp_kw_name_26 );
    if ( tmp_assign_source_276 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 473;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglCreatePbufferEXT, tmp_assign_source_276 );
    tmp_source_name_261 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_261 == NULL ))
    {
        tmp_source_name_261 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_261 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 476;
        goto frame_exception_exit_1;
    }

    tmp_called_name_286 = LOOKUP_ATTRIBUTE( tmp_source_name_261, const_str_plain_createBaseFunction );
    if ( tmp_called_name_286 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 476;
        goto frame_exception_exit_1;
    }
    tmp_args_name_27 = const_tuple_str_plain_wglGetPbufferDCEXT_tuple;
    tmp_kw_name_27 = _PyDict_NewPresized( 5 );
    tmp_source_name_262 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_262 == NULL ))
    {
        tmp_source_name_262 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_262 == NULL )
    {
        Py_DECREF( tmp_called_name_286 );
        Py_DECREF( tmp_kw_name_27 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 477;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_131 = LOOKUP_ATTRIBUTE( tmp_source_name_262, const_str_plain_GL );
    if ( tmp_dict_value_131 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_286 );
        Py_DECREF( tmp_kw_name_27 );

        exception_lineno = 477;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_131 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_27, tmp_dict_key_131, tmp_dict_value_131 );
    Py_DECREF( tmp_dict_value_131 );
    tmp_dict_value_132 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_dict_value_132 == NULL ))
    {
        tmp_dict_value_132 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_dict_value_132 == NULL )
    {
        Py_DECREF( tmp_called_name_286 );
        Py_DECREF( tmp_kw_name_27 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 477;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_132 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_27, tmp_dict_key_132, tmp_dict_value_132 );
    tmp_dict_value_133 = PyList_New( 1 );
    tmp_list_element_24 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_list_element_24 == NULL ))
    {
        tmp_list_element_24 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_list_element_24 == NULL )
    {
        Py_DECREF( tmp_called_name_286 );
        Py_DECREF( tmp_kw_name_27 );
        Py_DECREF( tmp_dict_value_133 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 478;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_24 );
    PyList_SET_ITEM( tmp_dict_value_133, 0, tmp_list_element_24 );
    tmp_dict_key_133 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_27, tmp_dict_key_133, tmp_dict_value_133 );
    Py_DECREF( tmp_dict_value_133 );
    tmp_dict_value_134 = const_str_digest_a3e7125d39ba6bab41ed154fac3fd39b;
    tmp_dict_key_134 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_27, tmp_dict_key_134, tmp_dict_value_134 );
    tmp_dict_value_135 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_135 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_27, tmp_dict_key_135, tmp_dict_value_135 );
    Py_DECREF( tmp_dict_value_135 );
    frame_module->f_lineno = 480;
    tmp_assign_source_277 = CALL_FUNCTION( tmp_called_name_286, tmp_args_name_27, tmp_kw_name_27 );
    Py_DECREF( tmp_called_name_286 );
    Py_DECREF( tmp_kw_name_27 );
    if ( tmp_assign_source_277 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 480;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetPbufferDCEXT, tmp_assign_source_277 );
    tmp_source_name_263 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_263 == NULL ))
    {
        tmp_source_name_263 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_263 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 483;
        goto frame_exception_exit_1;
    }

    tmp_called_name_287 = LOOKUP_ATTRIBUTE( tmp_source_name_263, const_str_plain_createBaseFunction );
    if ( tmp_called_name_287 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 483;
        goto frame_exception_exit_1;
    }
    tmp_args_name_28 = const_tuple_str_plain_wglReleasePbufferDCEXT_tuple;
    tmp_kw_name_28 = _PyDict_NewPresized( 5 );
    tmp_source_name_264 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_264 == NULL ))
    {
        tmp_source_name_264 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_264 == NULL )
    {
        Py_DECREF( tmp_called_name_287 );
        Py_DECREF( tmp_kw_name_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 484;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_136 = LOOKUP_ATTRIBUTE( tmp_source_name_264, const_str_plain_GL );
    if ( tmp_dict_value_136 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_287 );
        Py_DECREF( tmp_kw_name_28 );

        exception_lineno = 484;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_136 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_28, tmp_dict_key_136, tmp_dict_value_136 );
    Py_DECREF( tmp_dict_value_136 );
    tmp_dict_value_137 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_dict_value_137 == NULL ))
    {
        tmp_dict_value_137 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_dict_value_137 == NULL )
    {
        Py_DECREF( tmp_called_name_287 );
        Py_DECREF( tmp_kw_name_28 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 484;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_137 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_28, tmp_dict_key_137, tmp_dict_value_137 );
    tmp_dict_value_138 = PyList_New( 2 );
    tmp_list_element_25 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_list_element_25 == NULL ))
    {
        tmp_list_element_25 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_list_element_25 == NULL )
    {
        Py_DECREF( tmp_called_name_287 );
        Py_DECREF( tmp_kw_name_28 );
        Py_DECREF( tmp_dict_value_138 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 485;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_25 );
    PyList_SET_ITEM( tmp_dict_value_138, 0, tmp_list_element_25 );
    tmp_list_element_25 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_25 == NULL ))
    {
        tmp_list_element_25 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_25 == NULL )
    {
        Py_DECREF( tmp_called_name_287 );
        Py_DECREF( tmp_kw_name_28 );
        Py_DECREF( tmp_dict_value_138 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 485;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_25 );
    PyList_SET_ITEM( tmp_dict_value_138, 1, tmp_list_element_25 );
    tmp_dict_key_138 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_28, tmp_dict_key_138, tmp_dict_value_138 );
    Py_DECREF( tmp_dict_value_138 );
    tmp_dict_value_139 = const_str_digest_eacb4c9338febb98cc581bf4d92ada57;
    tmp_dict_key_139 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_28, tmp_dict_key_139, tmp_dict_value_139 );
    tmp_dict_value_140 = LIST_COPY( const_list_str_plain_None_str_plain_None_list );
    tmp_dict_key_140 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_28, tmp_dict_key_140, tmp_dict_value_140 );
    Py_DECREF( tmp_dict_value_140 );
    frame_module->f_lineno = 487;
    tmp_assign_source_278 = CALL_FUNCTION( tmp_called_name_287, tmp_args_name_28, tmp_kw_name_28 );
    Py_DECREF( tmp_called_name_287 );
    Py_DECREF( tmp_kw_name_28 );
    if ( tmp_assign_source_278 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 487;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglReleasePbufferDCEXT, tmp_assign_source_278 );
    tmp_source_name_265 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_265 == NULL ))
    {
        tmp_source_name_265 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_265 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 490;
        goto frame_exception_exit_1;
    }

    tmp_called_name_288 = LOOKUP_ATTRIBUTE( tmp_source_name_265, const_str_plain_createBaseFunction );
    if ( tmp_called_name_288 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 490;
        goto frame_exception_exit_1;
    }
    tmp_args_name_29 = const_tuple_str_plain_wglDestroyPbufferEXT_tuple;
    tmp_kw_name_29 = _PyDict_NewPresized( 5 );
    tmp_source_name_266 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_266 == NULL ))
    {
        tmp_source_name_266 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_266 == NULL )
    {
        Py_DECREF( tmp_called_name_288 );
        Py_DECREF( tmp_kw_name_29 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 491;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_141 = LOOKUP_ATTRIBUTE( tmp_source_name_266, const_str_plain_GL );
    if ( tmp_dict_value_141 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_288 );
        Py_DECREF( tmp_kw_name_29 );

        exception_lineno = 491;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_141 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_29, tmp_dict_key_141, tmp_dict_value_141 );
    Py_DECREF( tmp_dict_value_141 );
    tmp_dict_value_142 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_142 == NULL ))
    {
        tmp_dict_value_142 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_142 == NULL )
    {
        Py_DECREF( tmp_called_name_288 );
        Py_DECREF( tmp_kw_name_29 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 491;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_142 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_29, tmp_dict_key_142, tmp_dict_value_142 );
    tmp_dict_value_143 = PyList_New( 1 );
    tmp_list_element_26 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_list_element_26 == NULL ))
    {
        tmp_list_element_26 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_list_element_26 == NULL )
    {
        Py_DECREF( tmp_called_name_288 );
        Py_DECREF( tmp_kw_name_29 );
        Py_DECREF( tmp_dict_value_143 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 492;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_26 );
    PyList_SET_ITEM( tmp_dict_value_143, 0, tmp_list_element_26 );
    tmp_dict_key_143 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_29, tmp_dict_key_143, tmp_dict_value_143 );
    Py_DECREF( tmp_dict_value_143 );
    tmp_dict_value_144 = const_str_digest_fd972fd0bb7e774f747da8f00829ad38;
    tmp_dict_key_144 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_29, tmp_dict_key_144, tmp_dict_value_144 );
    tmp_dict_value_145 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_145 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_29, tmp_dict_key_145, tmp_dict_value_145 );
    Py_DECREF( tmp_dict_value_145 );
    frame_module->f_lineno = 494;
    tmp_assign_source_279 = CALL_FUNCTION( tmp_called_name_288, tmp_args_name_29, tmp_kw_name_29 );
    Py_DECREF( tmp_called_name_288 );
    Py_DECREF( tmp_kw_name_29 );
    if ( tmp_assign_source_279 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 494;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglDestroyPbufferEXT, tmp_assign_source_279 );
    tmp_source_name_267 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_267 == NULL ))
    {
        tmp_source_name_267 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_267 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 497;
        goto frame_exception_exit_1;
    }

    tmp_called_name_289 = LOOKUP_ATTRIBUTE( tmp_source_name_267, const_str_plain_createBaseFunction );
    if ( tmp_called_name_289 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 497;
        goto frame_exception_exit_1;
    }
    tmp_args_name_30 = const_tuple_str_plain_wglQueryPbufferEXT_tuple;
    tmp_kw_name_30 = _PyDict_NewPresized( 5 );
    tmp_source_name_268 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_268 == NULL ))
    {
        tmp_source_name_268 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_268 == NULL )
    {
        Py_DECREF( tmp_called_name_289 );
        Py_DECREF( tmp_kw_name_30 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 498;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_146 = LOOKUP_ATTRIBUTE( tmp_source_name_268, const_str_plain_GL );
    if ( tmp_dict_value_146 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_289 );
        Py_DECREF( tmp_kw_name_30 );

        exception_lineno = 498;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_146 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_30, tmp_dict_key_146, tmp_dict_value_146 );
    Py_DECREF( tmp_dict_value_146 );
    tmp_dict_value_147 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_147 == NULL ))
    {
        tmp_dict_value_147 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_147 == NULL )
    {
        Py_DECREF( tmp_called_name_289 );
        Py_DECREF( tmp_kw_name_30 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 498;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_147 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_30, tmp_dict_key_147, tmp_dict_value_147 );
    tmp_dict_value_148 = PyList_New( 3 );
    tmp_list_element_27 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_list_element_27 == NULL ))
    {
        tmp_list_element_27 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_list_element_27 == NULL )
    {
        Py_DECREF( tmp_called_name_289 );
        Py_DECREF( tmp_kw_name_30 );
        Py_DECREF( tmp_dict_value_148 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 499;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_27 );
    PyList_SET_ITEM( tmp_dict_value_148, 0, tmp_list_element_27 );
    tmp_list_element_27 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_27 == NULL ))
    {
        tmp_list_element_27 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_27 == NULL )
    {
        Py_DECREF( tmp_called_name_289 );
        Py_DECREF( tmp_kw_name_30 );
        Py_DECREF( tmp_dict_value_148 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 499;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_27 );
    PyList_SET_ITEM( tmp_dict_value_148, 1, tmp_list_element_27 );
    tmp_called_name_290 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_290 == NULL ))
    {
        tmp_called_name_290 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_290 == NULL )
    {
        Py_DECREF( tmp_called_name_289 );
        Py_DECREF( tmp_kw_name_30 );
        Py_DECREF( tmp_dict_value_148 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 499;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_115 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_115 == NULL ))
    {
        tmp_args_element_name_115 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_115 == NULL )
    {
        Py_DECREF( tmp_called_name_289 );
        Py_DECREF( tmp_kw_name_30 );
        Py_DECREF( tmp_dict_value_148 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 499;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 499;
    {
        PyObject *call_args[] = { tmp_args_element_name_115 };
        tmp_list_element_27 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_290, call_args );
    }

    if ( tmp_list_element_27 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_289 );
        Py_DECREF( tmp_kw_name_30 );
        Py_DECREF( tmp_dict_value_148 );

        exception_lineno = 499;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_148, 2, tmp_list_element_27 );
    tmp_dict_key_148 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_30, tmp_dict_key_148, tmp_dict_value_148 );
    Py_DECREF( tmp_dict_value_148 );
    tmp_dict_value_149 = const_str_digest_364869fbdd74d965cc9e885225e2fd3f;
    tmp_dict_key_149 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_30, tmp_dict_key_149, tmp_dict_value_149 );
    tmp_dict_value_150 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_empty_list );
    tmp_dict_key_150 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_30, tmp_dict_key_150, tmp_dict_value_150 );
    Py_DECREF( tmp_dict_value_150 );
    frame_module->f_lineno = 501;
    tmp_assign_source_280 = CALL_FUNCTION( tmp_called_name_289, tmp_args_name_30, tmp_kw_name_30 );
    Py_DECREF( tmp_called_name_289 );
    Py_DECREF( tmp_kw_name_30 );
    if ( tmp_assign_source_280 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 501;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglQueryPbufferEXT, tmp_assign_source_280 );
    tmp_called_name_291 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_291 == NULL ))
    {
        tmp_called_name_291 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_291 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 504;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_116 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_args_element_name_116 == NULL ))
    {
        tmp_args_element_name_116 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_args_element_name_116 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 504;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_117 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_117 == NULL ))
    {
        tmp_args_element_name_117 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_117 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 504;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_118 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_118 == NULL ))
    {
        tmp_args_element_name_118 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_118 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 504;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_119 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_119 == NULL ))
    {
        tmp_args_element_name_119 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_119 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 504;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_120 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_120 == NULL ))
    {
        tmp_args_element_name_120 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_120 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 504;
        goto frame_exception_exit_1;
    }

    tmp_called_name_292 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_292 == NULL ))
    {
        tmp_called_name_292 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_292 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 504;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_122 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_122 == NULL ))
    {
        tmp_args_element_name_122 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_122 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 504;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 504;
    {
        PyObject *call_args[] = { tmp_args_element_name_122 };
        tmp_args_element_name_121 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_292, call_args );
    }

    if ( tmp_args_element_name_121 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 504;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 504;
    {
        PyObject *call_args[] = { tmp_args_element_name_116, tmp_args_element_name_117, tmp_args_element_name_118, tmp_args_element_name_119, tmp_args_element_name_120, tmp_args_element_name_121 };
        tmp_assign_source_281 = CALL_FUNCTION_WITH_ARGS6( tmp_called_name_291, call_args );
    }

    Py_DECREF( tmp_args_element_name_121 );
    if ( tmp_assign_source_281 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 504;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLCREATEPBUFFEREXTPROC, tmp_assign_source_281 );
    tmp_called_name_293 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_293 == NULL ))
    {
        tmp_called_name_293 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_293 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 505;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_123 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_123 == NULL ))
    {
        tmp_args_element_name_123 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_123 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 505;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_124 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_args_element_name_124 == NULL ))
    {
        tmp_args_element_name_124 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_args_element_name_124 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 505;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 505;
    {
        PyObject *call_args[] = { tmp_args_element_name_123, tmp_args_element_name_124 };
        tmp_assign_source_282 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_293, call_args );
    }

    if ( tmp_assign_source_282 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 505;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETPBUFFERDCEXTPROC, tmp_assign_source_282 );
    tmp_called_name_294 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_294 == NULL ))
    {
        tmp_called_name_294 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_294 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 506;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_125 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_125 == NULL ))
    {
        tmp_args_element_name_125 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_125 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 506;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_126 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_args_element_name_126 == NULL ))
    {
        tmp_args_element_name_126 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_args_element_name_126 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 506;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_127 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_127 == NULL ))
    {
        tmp_args_element_name_127 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_127 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 506;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 506;
    {
        PyObject *call_args[] = { tmp_args_element_name_125, tmp_args_element_name_126, tmp_args_element_name_127 };
        tmp_assign_source_283 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_294, call_args );
    }

    if ( tmp_assign_source_283 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 506;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLRELEASEPBUFFERDCEXTPROC, tmp_assign_source_283 );
    tmp_called_name_295 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_295 == NULL ))
    {
        tmp_called_name_295 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_295 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 507;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_128 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_128 == NULL ))
    {
        tmp_args_element_name_128 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_128 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 507;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_129 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_args_element_name_129 == NULL ))
    {
        tmp_args_element_name_129 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_args_element_name_129 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 507;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 507;
    {
        PyObject *call_args[] = { tmp_args_element_name_128, tmp_args_element_name_129 };
        tmp_assign_source_284 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_295, call_args );
    }

    if ( tmp_assign_source_284 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 507;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLDESTROYPBUFFEREXTPROC, tmp_assign_source_284 );
    tmp_called_name_296 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_296 == NULL ))
    {
        tmp_called_name_296 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_296 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 508;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_130 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_130 == NULL ))
    {
        tmp_args_element_name_130 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_130 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 508;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_131 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );

    if (unlikely( tmp_args_element_name_131 == NULL ))
    {
        tmp_args_element_name_131 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HPBUFFEREXT );
    }

    if ( tmp_args_element_name_131 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HPBUFFEREXT" );
        exception_tb = NULL;

        exception_lineno = 508;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_132 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_132 == NULL ))
    {
        tmp_args_element_name_132 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_132 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 508;
        goto frame_exception_exit_1;
    }

    tmp_called_name_297 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_297 == NULL ))
    {
        tmp_called_name_297 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_297 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 508;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_134 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_134 == NULL ))
    {
        tmp_args_element_name_134 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_134 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 508;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 508;
    {
        PyObject *call_args[] = { tmp_args_element_name_134 };
        tmp_args_element_name_133 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_297, call_args );
    }

    if ( tmp_args_element_name_133 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 508;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 508;
    {
        PyObject *call_args[] = { tmp_args_element_name_130, tmp_args_element_name_131, tmp_args_element_name_132, tmp_args_element_name_133 };
        tmp_assign_source_285 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_296, call_args );
    }

    Py_DECREF( tmp_args_element_name_133 );
    if ( tmp_assign_source_285 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 508;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLQUERYPBUFFEREXTPROC, tmp_assign_source_285 );
    tmp_source_name_269 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_269 == NULL ))
    {
        tmp_source_name_269 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_269 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 510;
        goto frame_exception_exit_1;
    }

    tmp_called_name_298 = LOOKUP_ATTRIBUTE( tmp_source_name_269, const_str_plain_Constant );
    if ( tmp_called_name_298 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 510;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 510;
    tmp_assign_source_286 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_298, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_EXT_pixel_format_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_298 );
    if ( tmp_assign_source_286 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 510;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_EXT_pixel_format, tmp_assign_source_286 );
    tmp_source_name_270 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_270 == NULL ))
    {
        tmp_source_name_270 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_270 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 511;
        goto frame_exception_exit_1;
    }

    tmp_called_name_299 = LOOKUP_ATTRIBUTE( tmp_source_name_270, const_str_plain_createBaseFunction );
    if ( tmp_called_name_299 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 511;
        goto frame_exception_exit_1;
    }
    tmp_args_name_31 = const_tuple_str_plain_wglGetPixelFormatAttribivEXT_tuple;
    tmp_kw_name_31 = _PyDict_NewPresized( 5 );
    tmp_source_name_271 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_271 == NULL ))
    {
        tmp_source_name_271 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_271 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 512;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_151 = LOOKUP_ATTRIBUTE( tmp_source_name_271, const_str_plain_GL );
    if ( tmp_dict_value_151 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );

        exception_lineno = 512;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_151 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_31, tmp_dict_key_151, tmp_dict_value_151 );
    Py_DECREF( tmp_dict_value_151 );
    tmp_dict_value_152 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_152 == NULL ))
    {
        tmp_dict_value_152 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_152 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 512;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_152 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_31, tmp_dict_key_152, tmp_dict_value_152 );
    tmp_dict_value_153 = PyList_New( 6 );
    tmp_list_element_28 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_28 == NULL ))
    {
        tmp_list_element_28 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_28 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_28 );
    PyList_SET_ITEM( tmp_dict_value_153, 0, tmp_list_element_28 );
    tmp_list_element_28 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_28 == NULL ))
    {
        tmp_list_element_28 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_28 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_28 );
    PyList_SET_ITEM( tmp_dict_value_153, 1, tmp_list_element_28 );
    tmp_list_element_28 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_28 == NULL ))
    {
        tmp_list_element_28 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_28 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_28 );
    PyList_SET_ITEM( tmp_dict_value_153, 2, tmp_list_element_28 );
    tmp_list_element_28 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_28 == NULL ))
    {
        tmp_list_element_28 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_28 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_28 );
    PyList_SET_ITEM( tmp_dict_value_153, 3, tmp_list_element_28 );
    tmp_called_name_300 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_300 == NULL ))
    {
        tmp_called_name_300 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_300 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_135 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_135 == NULL ))
    {
        tmp_args_element_name_135 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_135 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 513;
    {
        PyObject *call_args[] = { tmp_args_element_name_135 };
        tmp_list_element_28 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_300, call_args );
    }

    if ( tmp_list_element_28 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_153, 4, tmp_list_element_28 );
    tmp_called_name_301 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_301 == NULL ))
    {
        tmp_called_name_301 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_301 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_136 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_136 == NULL ))
    {
        tmp_args_element_name_136 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_136 == NULL )
    {
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 513;
    {
        PyObject *call_args[] = { tmp_args_element_name_136 };
        tmp_list_element_28 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_301, call_args );
    }

    if ( tmp_list_element_28 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_299 );
        Py_DECREF( tmp_kw_name_31 );
        Py_DECREF( tmp_dict_value_153 );

        exception_lineno = 513;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_153, 5, tmp_list_element_28 );
    tmp_dict_key_153 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_31, tmp_dict_key_153, tmp_dict_value_153 );
    Py_DECREF( tmp_dict_value_153 );
    tmp_dict_value_154 = const_str_digest_c38b5c4bc9a259186dd9eb36b45293e0;
    tmp_dict_key_154 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_31, tmp_dict_key_154, tmp_dict_value_154 );
    tmp_dict_value_155 = LIST_COPY( const_list_ad648f6db8e6027a0d59f72015f83cb6_list );
    tmp_dict_key_155 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_31, tmp_dict_key_155, tmp_dict_value_155 );
    Py_DECREF( tmp_dict_value_155 );
    frame_module->f_lineno = 515;
    tmp_assign_source_287 = CALL_FUNCTION( tmp_called_name_299, tmp_args_name_31, tmp_kw_name_31 );
    Py_DECREF( tmp_called_name_299 );
    Py_DECREF( tmp_kw_name_31 );
    if ( tmp_assign_source_287 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 515;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetPixelFormatAttribivEXT, tmp_assign_source_287 );
    tmp_source_name_272 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_272 == NULL ))
    {
        tmp_source_name_272 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_272 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 518;
        goto frame_exception_exit_1;
    }

    tmp_called_name_302 = LOOKUP_ATTRIBUTE( tmp_source_name_272, const_str_plain_createBaseFunction );
    if ( tmp_called_name_302 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 518;
        goto frame_exception_exit_1;
    }
    tmp_args_name_32 = const_tuple_str_plain_wglGetPixelFormatAttribfvEXT_tuple;
    tmp_kw_name_32 = _PyDict_NewPresized( 5 );
    tmp_source_name_273 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_273 == NULL ))
    {
        tmp_source_name_273 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_273 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 519;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_156 = LOOKUP_ATTRIBUTE( tmp_source_name_273, const_str_plain_GL );
    if ( tmp_dict_value_156 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );

        exception_lineno = 519;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_156 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_32, tmp_dict_key_156, tmp_dict_value_156 );
    Py_DECREF( tmp_dict_value_156 );
    tmp_dict_value_157 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_157 == NULL ))
    {
        tmp_dict_value_157 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_157 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 519;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_157 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_32, tmp_dict_key_157, tmp_dict_value_157 );
    tmp_dict_value_158 = PyList_New( 6 );
    tmp_list_element_29 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_29 == NULL ))
    {
        tmp_list_element_29 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_29 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_29 );
    PyList_SET_ITEM( tmp_dict_value_158, 0, tmp_list_element_29 );
    tmp_list_element_29 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_29 == NULL ))
    {
        tmp_list_element_29 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_29 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_29 );
    PyList_SET_ITEM( tmp_dict_value_158, 1, tmp_list_element_29 );
    tmp_list_element_29 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_29 == NULL ))
    {
        tmp_list_element_29 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_29 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_29 );
    PyList_SET_ITEM( tmp_dict_value_158, 2, tmp_list_element_29 );
    tmp_list_element_29 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_29 == NULL ))
    {
        tmp_list_element_29 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_29 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_29 );
    PyList_SET_ITEM( tmp_dict_value_158, 3, tmp_list_element_29 );
    tmp_called_name_303 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_303 == NULL ))
    {
        tmp_called_name_303 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_303 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_137 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_137 == NULL ))
    {
        tmp_args_element_name_137 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_137 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 520;
    {
        PyObject *call_args[] = { tmp_args_element_name_137 };
        tmp_list_element_29 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_303, call_args );
    }

    if ( tmp_list_element_29 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_158, 4, tmp_list_element_29 );
    tmp_called_name_304 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_304 == NULL ))
    {
        tmp_called_name_304 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_304 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_138 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_FLOAT );

    if (unlikely( tmp_args_element_name_138 == NULL ))
    {
        tmp_args_element_name_138 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_FLOAT );
    }

    if ( tmp_args_element_name_138 == NULL )
    {
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "FLOAT" );
        exception_tb = NULL;

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 520;
    {
        PyObject *call_args[] = { tmp_args_element_name_138 };
        tmp_list_element_29 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_304, call_args );
    }

    if ( tmp_list_element_29 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_302 );
        Py_DECREF( tmp_kw_name_32 );
        Py_DECREF( tmp_dict_value_158 );

        exception_lineno = 520;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_158, 5, tmp_list_element_29 );
    tmp_dict_key_158 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_32, tmp_dict_key_158, tmp_dict_value_158 );
    Py_DECREF( tmp_dict_value_158 );
    tmp_dict_value_159 = const_str_digest_096a16069c8cc6eab5f2a120fbf89299;
    tmp_dict_key_159 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_32, tmp_dict_key_159, tmp_dict_value_159 );
    tmp_dict_value_160 = LIST_COPY( const_list_ad648f6db8e6027a0d59f72015f83cb6_list );
    tmp_dict_key_160 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_32, tmp_dict_key_160, tmp_dict_value_160 );
    Py_DECREF( tmp_dict_value_160 );
    frame_module->f_lineno = 522;
    tmp_assign_source_288 = CALL_FUNCTION( tmp_called_name_302, tmp_args_name_32, tmp_kw_name_32 );
    Py_DECREF( tmp_called_name_302 );
    Py_DECREF( tmp_kw_name_32 );
    if ( tmp_assign_source_288 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 522;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetPixelFormatAttribfvEXT, tmp_assign_source_288 );
    tmp_source_name_274 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_274 == NULL ))
    {
        tmp_source_name_274 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_274 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 525;
        goto frame_exception_exit_1;
    }

    tmp_called_name_305 = LOOKUP_ATTRIBUTE( tmp_source_name_274, const_str_plain_createBaseFunction );
    if ( tmp_called_name_305 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 525;
        goto frame_exception_exit_1;
    }
    tmp_args_name_33 = const_tuple_str_plain_wglChoosePixelFormatEXT_tuple;
    tmp_kw_name_33 = _PyDict_NewPresized( 5 );
    tmp_source_name_275 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_275 == NULL ))
    {
        tmp_source_name_275 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_275 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 526;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_161 = LOOKUP_ATTRIBUTE( tmp_source_name_275, const_str_plain_GL );
    if ( tmp_dict_value_161 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );

        exception_lineno = 526;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_161 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_33, tmp_dict_key_161, tmp_dict_value_161 );
    Py_DECREF( tmp_dict_value_161 );
    tmp_dict_value_162 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_162 == NULL ))
    {
        tmp_dict_value_162 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_162 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 526;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_162 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_33, tmp_dict_key_162, tmp_dict_value_162 );
    tmp_dict_value_163 = PyList_New( 6 );
    tmp_list_element_30 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_30 == NULL ))
    {
        tmp_list_element_30 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_30 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_30 );
    PyList_SET_ITEM( tmp_dict_value_163, 0, tmp_list_element_30 );
    tmp_called_name_306 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_306 == NULL ))
    {
        tmp_called_name_306 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_306 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_139 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_139 == NULL ))
    {
        tmp_args_element_name_139 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_139 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 527;
    {
        PyObject *call_args[] = { tmp_args_element_name_139 };
        tmp_list_element_30 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_306, call_args );
    }

    if ( tmp_list_element_30 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_163, 1, tmp_list_element_30 );
    tmp_called_name_307 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_307 == NULL ))
    {
        tmp_called_name_307 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_307 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_140 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_FLOAT );

    if (unlikely( tmp_args_element_name_140 == NULL ))
    {
        tmp_args_element_name_140 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_FLOAT );
    }

    if ( tmp_args_element_name_140 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "FLOAT" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 527;
    {
        PyObject *call_args[] = { tmp_args_element_name_140 };
        tmp_list_element_30 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_307, call_args );
    }

    if ( tmp_list_element_30 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_163, 2, tmp_list_element_30 );
    tmp_list_element_30 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_30 == NULL ))
    {
        tmp_list_element_30 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_30 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_30 );
    PyList_SET_ITEM( tmp_dict_value_163, 3, tmp_list_element_30 );
    tmp_called_name_308 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_308 == NULL ))
    {
        tmp_called_name_308 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_308 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_141 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_141 == NULL ))
    {
        tmp_args_element_name_141 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_141 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 527;
    {
        PyObject *call_args[] = { tmp_args_element_name_141 };
        tmp_list_element_30 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_308, call_args );
    }

    if ( tmp_list_element_30 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_163, 4, tmp_list_element_30 );
    tmp_called_name_309 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_309 == NULL ))
    {
        tmp_called_name_309 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_309 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_142 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_142 == NULL ))
    {
        tmp_args_element_name_142 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_142 == NULL )
    {
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 527;
    {
        PyObject *call_args[] = { tmp_args_element_name_142 };
        tmp_list_element_30 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_309, call_args );
    }

    if ( tmp_list_element_30 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_305 );
        Py_DECREF( tmp_kw_name_33 );
        Py_DECREF( tmp_dict_value_163 );

        exception_lineno = 527;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_163, 5, tmp_list_element_30 );
    tmp_dict_key_163 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_33, tmp_dict_key_163, tmp_dict_value_163 );
    Py_DECREF( tmp_dict_value_163 );
    tmp_dict_value_164 = const_str_digest_6f79139e4033338ada508ab2955f4bda;
    tmp_dict_key_164 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_33, tmp_dict_key_164, tmp_dict_value_164 );
    tmp_dict_value_165 = LIST_COPY( const_list_d8a0444503e8b298f461aa47ef746043_list );
    tmp_dict_key_165 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_33, tmp_dict_key_165, tmp_dict_value_165 );
    Py_DECREF( tmp_dict_value_165 );
    frame_module->f_lineno = 529;
    tmp_assign_source_289 = CALL_FUNCTION( tmp_called_name_305, tmp_args_name_33, tmp_kw_name_33 );
    Py_DECREF( tmp_called_name_305 );
    Py_DECREF( tmp_kw_name_33 );
    if ( tmp_assign_source_289 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 529;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglChoosePixelFormatEXT, tmp_assign_source_289 );
    tmp_called_name_310 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_310 == NULL ))
    {
        tmp_called_name_310 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_310 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_143 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_143 == NULL ))
    {
        tmp_args_element_name_143 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_143 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_144 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_144 == NULL ))
    {
        tmp_args_element_name_144 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_144 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_145 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_145 == NULL ))
    {
        tmp_args_element_name_145 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_145 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_146 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_146 == NULL ))
    {
        tmp_args_element_name_146 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_146 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_147 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_147 == NULL ))
    {
        tmp_args_element_name_147 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_147 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    tmp_called_name_311 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_311 == NULL ))
    {
        tmp_called_name_311 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_311 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_149 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_149 == NULL ))
    {
        tmp_args_element_name_149 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_149 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 532;
    {
        PyObject *call_args[] = { tmp_args_element_name_149 };
        tmp_args_element_name_148 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_311, call_args );
    }

    if ( tmp_args_element_name_148 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 532;
        goto frame_exception_exit_1;
    }
    tmp_called_name_312 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_312 == NULL ))
    {
        tmp_called_name_312 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_312 == NULL )
    {
        Py_DECREF( tmp_args_element_name_148 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_151 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_151 == NULL ))
    {
        tmp_args_element_name_151 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_151 == NULL )
    {
        Py_DECREF( tmp_args_element_name_148 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 532;
    {
        PyObject *call_args[] = { tmp_args_element_name_151 };
        tmp_args_element_name_150 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_312, call_args );
    }

    if ( tmp_args_element_name_150 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_148 );

        exception_lineno = 532;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 532;
    {
        PyObject *call_args[] = { tmp_args_element_name_143, tmp_args_element_name_144, tmp_args_element_name_145, tmp_args_element_name_146, tmp_args_element_name_147, tmp_args_element_name_148, tmp_args_element_name_150 };
        tmp_assign_source_290 = CALL_FUNCTION_WITH_ARGS7( tmp_called_name_310, call_args );
    }

    Py_DECREF( tmp_args_element_name_148 );
    Py_DECREF( tmp_args_element_name_150 );
    if ( tmp_assign_source_290 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 532;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETPIXELFORMATATTRIBIVEXTPROC, tmp_assign_source_290 );
    tmp_called_name_313 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_313 == NULL ))
    {
        tmp_called_name_313 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_313 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_152 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_152 == NULL ))
    {
        tmp_args_element_name_152 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_152 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_153 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_153 == NULL ))
    {
        tmp_args_element_name_153 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_153 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_154 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_154 == NULL ))
    {
        tmp_args_element_name_154 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_154 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_155 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_155 == NULL ))
    {
        tmp_args_element_name_155 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_155 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_156 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_156 == NULL ))
    {
        tmp_args_element_name_156 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_156 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    tmp_called_name_314 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_314 == NULL ))
    {
        tmp_called_name_314 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_314 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_158 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_158 == NULL ))
    {
        tmp_args_element_name_158 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_158 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 533;
    {
        PyObject *call_args[] = { tmp_args_element_name_158 };
        tmp_args_element_name_157 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_314, call_args );
    }

    if ( tmp_args_element_name_157 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 533;
        goto frame_exception_exit_1;
    }
    tmp_called_name_315 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_315 == NULL ))
    {
        tmp_called_name_315 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_315 == NULL )
    {
        Py_DECREF( tmp_args_element_name_157 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_160 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_FLOAT );

    if (unlikely( tmp_args_element_name_160 == NULL ))
    {
        tmp_args_element_name_160 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_FLOAT );
    }

    if ( tmp_args_element_name_160 == NULL )
    {
        Py_DECREF( tmp_args_element_name_157 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "FLOAT" );
        exception_tb = NULL;

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 533;
    {
        PyObject *call_args[] = { tmp_args_element_name_160 };
        tmp_args_element_name_159 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_315, call_args );
    }

    if ( tmp_args_element_name_159 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_157 );

        exception_lineno = 533;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 533;
    {
        PyObject *call_args[] = { tmp_args_element_name_152, tmp_args_element_name_153, tmp_args_element_name_154, tmp_args_element_name_155, tmp_args_element_name_156, tmp_args_element_name_157, tmp_args_element_name_159 };
        tmp_assign_source_291 = CALL_FUNCTION_WITH_ARGS7( tmp_called_name_313, call_args );
    }

    Py_DECREF( tmp_args_element_name_157 );
    Py_DECREF( tmp_args_element_name_159 );
    if ( tmp_assign_source_291 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 533;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETPIXELFORMATATTRIBFVEXTPROC, tmp_assign_source_291 );
    tmp_called_name_316 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_316 == NULL ))
    {
        tmp_called_name_316 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_316 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_161 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_161 == NULL ))
    {
        tmp_args_element_name_161 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_161 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_162 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_162 == NULL ))
    {
        tmp_args_element_name_162 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_162 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    tmp_called_name_317 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_317 == NULL ))
    {
        tmp_called_name_317 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_317 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_164 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_164 == NULL ))
    {
        tmp_args_element_name_164 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_164 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 534;
    {
        PyObject *call_args[] = { tmp_args_element_name_164 };
        tmp_args_element_name_163 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_317, call_args );
    }

    if ( tmp_args_element_name_163 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 534;
        goto frame_exception_exit_1;
    }
    tmp_called_name_318 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_318 == NULL ))
    {
        tmp_called_name_318 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_318 == NULL )
    {
        Py_DECREF( tmp_args_element_name_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_166 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_FLOAT );

    if (unlikely( tmp_args_element_name_166 == NULL ))
    {
        tmp_args_element_name_166 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_FLOAT );
    }

    if ( tmp_args_element_name_166 == NULL )
    {
        Py_DECREF( tmp_args_element_name_163 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "FLOAT" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 534;
    {
        PyObject *call_args[] = { tmp_args_element_name_166 };
        tmp_args_element_name_165 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_318, call_args );
    }

    if ( tmp_args_element_name_165 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_163 );

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }
    tmp_args_element_name_167 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_167 == NULL ))
    {
        tmp_args_element_name_167 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_167 == NULL )
    {
        Py_DECREF( tmp_args_element_name_163 );
        Py_DECREF( tmp_args_element_name_165 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    tmp_called_name_319 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_319 == NULL ))
    {
        tmp_called_name_319 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_319 == NULL )
    {
        Py_DECREF( tmp_args_element_name_163 );
        Py_DECREF( tmp_args_element_name_165 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_169 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_169 == NULL ))
    {
        tmp_args_element_name_169 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_169 == NULL )
    {
        Py_DECREF( tmp_args_element_name_163 );
        Py_DECREF( tmp_args_element_name_165 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 534;
    {
        PyObject *call_args[] = { tmp_args_element_name_169 };
        tmp_args_element_name_168 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_319, call_args );
    }

    if ( tmp_args_element_name_168 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_163 );
        Py_DECREF( tmp_args_element_name_165 );

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }
    tmp_called_name_320 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_320 == NULL ))
    {
        tmp_called_name_320 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_320 == NULL )
    {
        Py_DECREF( tmp_args_element_name_163 );
        Py_DECREF( tmp_args_element_name_165 );
        Py_DECREF( tmp_args_element_name_168 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_171 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_171 == NULL ))
    {
        tmp_args_element_name_171 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_171 == NULL )
    {
        Py_DECREF( tmp_args_element_name_163 );
        Py_DECREF( tmp_args_element_name_165 );
        Py_DECREF( tmp_args_element_name_168 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 534;
    {
        PyObject *call_args[] = { tmp_args_element_name_171 };
        tmp_args_element_name_170 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_320, call_args );
    }

    if ( tmp_args_element_name_170 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_163 );
        Py_DECREF( tmp_args_element_name_165 );
        Py_DECREF( tmp_args_element_name_168 );

        exception_lineno = 534;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 534;
    {
        PyObject *call_args[] = { tmp_args_element_name_161, tmp_args_element_name_162, tmp_args_element_name_163, tmp_args_element_name_165, tmp_args_element_name_167, tmp_args_element_name_168, tmp_args_element_name_170 };
        tmp_assign_source_292 = CALL_FUNCTION_WITH_ARGS7( tmp_called_name_316, call_args );
    }

    Py_DECREF( tmp_args_element_name_163 );
    Py_DECREF( tmp_args_element_name_165 );
    Py_DECREF( tmp_args_element_name_168 );
    Py_DECREF( tmp_args_element_name_170 );
    if ( tmp_assign_source_292 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 534;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLCHOOSEPIXELFORMATEXTPROC, tmp_assign_source_292 );
    tmp_source_name_276 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_276 == NULL ))
    {
        tmp_source_name_276 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_276 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 536;
        goto frame_exception_exit_1;
    }

    tmp_called_name_321 = LOOKUP_ATTRIBUTE( tmp_source_name_276, const_str_plain_Constant );
    if ( tmp_called_name_321 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 536;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 536;
    tmp_assign_source_293 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_321, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_EXT_swap_control_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_321 );
    if ( tmp_assign_source_293 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 536;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_EXT_swap_control, tmp_assign_source_293 );
    tmp_source_name_277 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_277 == NULL ))
    {
        tmp_source_name_277 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_277 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 537;
        goto frame_exception_exit_1;
    }

    tmp_called_name_322 = LOOKUP_ATTRIBUTE( tmp_source_name_277, const_str_plain_createBaseFunction );
    if ( tmp_called_name_322 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 537;
        goto frame_exception_exit_1;
    }
    tmp_args_name_34 = const_tuple_str_plain_wglSwapIntervalEXT_tuple;
    tmp_kw_name_34 = _PyDict_NewPresized( 5 );
    tmp_source_name_278 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_278 == NULL ))
    {
        tmp_source_name_278 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_278 == NULL )
    {
        Py_DECREF( tmp_called_name_322 );
        Py_DECREF( tmp_kw_name_34 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 538;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_166 = LOOKUP_ATTRIBUTE( tmp_source_name_278, const_str_plain_GL );
    if ( tmp_dict_value_166 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_322 );
        Py_DECREF( tmp_kw_name_34 );

        exception_lineno = 538;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_166 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_34, tmp_dict_key_166, tmp_dict_value_166 );
    Py_DECREF( tmp_dict_value_166 );
    tmp_dict_value_167 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_167 == NULL ))
    {
        tmp_dict_value_167 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_167 == NULL )
    {
        Py_DECREF( tmp_called_name_322 );
        Py_DECREF( tmp_kw_name_34 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 538;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_167 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_34, tmp_dict_key_167, tmp_dict_value_167 );
    tmp_dict_value_168 = PyList_New( 1 );
    tmp_list_element_31 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_31 == NULL ))
    {
        tmp_list_element_31 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_31 == NULL )
    {
        Py_DECREF( tmp_called_name_322 );
        Py_DECREF( tmp_kw_name_34 );
        Py_DECREF( tmp_dict_value_168 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 539;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_31 );
    PyList_SET_ITEM( tmp_dict_value_168, 0, tmp_list_element_31 );
    tmp_dict_key_168 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_34, tmp_dict_key_168, tmp_dict_value_168 );
    Py_DECREF( tmp_dict_value_168 );
    tmp_dict_value_169 = const_str_digest_d114361d99cea6390880c82cea64b077;
    tmp_dict_key_169 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_34, tmp_dict_key_169, tmp_dict_value_169 );
    tmp_dict_value_170 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_170 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_34, tmp_dict_key_170, tmp_dict_value_170 );
    Py_DECREF( tmp_dict_value_170 );
    frame_module->f_lineno = 541;
    tmp_assign_source_294 = CALL_FUNCTION( tmp_called_name_322, tmp_args_name_34, tmp_kw_name_34 );
    Py_DECREF( tmp_called_name_322 );
    Py_DECREF( tmp_kw_name_34 );
    if ( tmp_assign_source_294 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 541;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglSwapIntervalEXT, tmp_assign_source_294 );
    tmp_source_name_279 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_279 == NULL ))
    {
        tmp_source_name_279 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_279 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 544;
        goto frame_exception_exit_1;
    }

    tmp_called_name_323 = LOOKUP_ATTRIBUTE( tmp_source_name_279, const_str_plain_createBaseFunction );
    if ( tmp_called_name_323 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 544;
        goto frame_exception_exit_1;
    }
    tmp_args_name_35 = const_tuple_str_plain_wglGetSwapIntervalEXT_tuple;
    tmp_kw_name_35 = _PyDict_NewPresized( 5 );
    tmp_source_name_280 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_280 == NULL ))
    {
        tmp_source_name_280 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_280 == NULL )
    {
        Py_DECREF( tmp_called_name_323 );
        Py_DECREF( tmp_kw_name_35 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 545;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_171 = LOOKUP_ATTRIBUTE( tmp_source_name_280, const_str_plain_GL );
    if ( tmp_dict_value_171 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_323 );
        Py_DECREF( tmp_kw_name_35 );

        exception_lineno = 545;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_171 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_35, tmp_dict_key_171, tmp_dict_value_171 );
    Py_DECREF( tmp_dict_value_171 );
    tmp_dict_value_172 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_dict_value_172 == NULL ))
    {
        tmp_dict_value_172 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_dict_value_172 == NULL )
    {
        Py_DECREF( tmp_called_name_323 );
        Py_DECREF( tmp_kw_name_35 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 545;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_172 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_35, tmp_dict_key_172, tmp_dict_value_172 );
    tmp_dict_value_173 = PyList_New( 0 );
    tmp_dict_key_173 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_35, tmp_dict_key_173, tmp_dict_value_173 );
    Py_DECREF( tmp_dict_value_173 );
    tmp_dict_value_174 = const_str_digest_caa18e96dad7d983b003c96eb46b0606;
    tmp_dict_key_174 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_35, tmp_dict_key_174, tmp_dict_value_174 );
    tmp_dict_value_175 = PyList_New( 0 );
    tmp_dict_key_175 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_35, tmp_dict_key_175, tmp_dict_value_175 );
    Py_DECREF( tmp_dict_value_175 );
    frame_module->f_lineno = 548;
    tmp_assign_source_295 = CALL_FUNCTION( tmp_called_name_323, tmp_args_name_35, tmp_kw_name_35 );
    Py_DECREF( tmp_called_name_323 );
    Py_DECREF( tmp_kw_name_35 );
    if ( tmp_assign_source_295 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 548;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetSwapIntervalEXT, tmp_assign_source_295 );
    tmp_called_name_324 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_324 == NULL ))
    {
        tmp_called_name_324 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_324 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 551;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_172 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_172 == NULL ))
    {
        tmp_args_element_name_172 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_172 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 551;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_173 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_173 == NULL ))
    {
        tmp_args_element_name_173 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_173 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 551;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 551;
    {
        PyObject *call_args[] = { tmp_args_element_name_172, tmp_args_element_name_173 };
        tmp_assign_source_296 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_324, call_args );
    }

    if ( tmp_assign_source_296 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 551;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLSWAPINTERVALEXTPROC, tmp_assign_source_296 );
    tmp_called_name_325 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_325 == NULL ))
    {
        tmp_called_name_325 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_325 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 552;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_174 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_174 == NULL ))
    {
        tmp_args_element_name_174 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_174 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 552;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 552;
    {
        PyObject *call_args[] = { tmp_args_element_name_174 };
        tmp_assign_source_297 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_325, call_args );
    }

    if ( tmp_assign_source_297 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 552;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETSWAPINTERVALEXTPROC, tmp_assign_source_297 );
    tmp_source_name_281 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_281 == NULL ))
    {
        tmp_source_name_281 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_281 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 554;
        goto frame_exception_exit_1;
    }

    tmp_called_name_326 = LOOKUP_ATTRIBUTE( tmp_source_name_281, const_str_plain_Constant );
    if ( tmp_called_name_326 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 554;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 554;
    tmp_assign_source_298 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_326, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_EXT_depth_float_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_326 );
    if ( tmp_assign_source_298 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 554;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_EXT_depth_float, tmp_assign_source_298 );
    tmp_source_name_282 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_282 == NULL ))
    {
        tmp_source_name_282 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_282 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 556;
        goto frame_exception_exit_1;
    }

    tmp_called_name_327 = LOOKUP_ATTRIBUTE( tmp_source_name_282, const_str_plain_Constant );
    if ( tmp_called_name_327 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 556;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 556;
    tmp_assign_source_299 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_327, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NV_vertex_array_range_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_327 );
    if ( tmp_assign_source_299 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 556;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NV_vertex_array_range, tmp_assign_source_299 );
    tmp_assign_source_300 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_assign_source_300 == NULL ))
    {
        tmp_assign_source_300 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_assign_source_300 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 557;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLsizei, tmp_assign_source_300 );
    tmp_assign_source_301 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_float );

    if (unlikely( tmp_assign_source_301 == NULL ))
    {
        tmp_assign_source_301 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_float );
    }

    if ( tmp_assign_source_301 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_float" );
        exception_tb = NULL;

        exception_lineno = 558;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLfloat, tmp_assign_source_301 );
    tmp_source_name_283 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_283 == NULL ))
    {
        tmp_source_name_283 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_283 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 559;
        goto frame_exception_exit_1;
    }

    tmp_called_name_328 = LOOKUP_ATTRIBUTE( tmp_source_name_283, const_str_plain_createBaseFunction );
    if ( tmp_called_name_328 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 559;
        goto frame_exception_exit_1;
    }
    tmp_args_name_36 = const_tuple_str_plain_wglAllocateMemoryNV_tuple;
    tmp_kw_name_36 = _PyDict_NewPresized( 5 );
    tmp_source_name_284 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_284 == NULL ))
    {
        tmp_source_name_284 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_284 == NULL )
    {
        Py_DECREF( tmp_called_name_328 );
        Py_DECREF( tmp_kw_name_36 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 560;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_176 = LOOKUP_ATTRIBUTE( tmp_source_name_284, const_str_plain_GL );
    if ( tmp_dict_value_176 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_328 );
        Py_DECREF( tmp_kw_name_36 );

        exception_lineno = 560;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_176 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_36, tmp_dict_key_176, tmp_dict_value_176 );
    Py_DECREF( tmp_dict_value_176 );
    tmp_called_name_329 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_329 == NULL ))
    {
        tmp_called_name_329 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_329 == NULL )
    {
        Py_DECREF( tmp_called_name_328 );
        Py_DECREF( tmp_kw_name_36 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 560;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_175 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_void );

    if (unlikely( tmp_args_element_name_175 == NULL ))
    {
        tmp_args_element_name_175 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_void );
    }

    if ( tmp_args_element_name_175 == NULL )
    {
        Py_DECREF( tmp_called_name_328 );
        Py_DECREF( tmp_kw_name_36 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_void" );
        exception_tb = NULL;

        exception_lineno = 560;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 560;
    {
        PyObject *call_args[] = { tmp_args_element_name_175 };
        tmp_dict_value_177 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_329, call_args );
    }

    if ( tmp_dict_value_177 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_328 );
        Py_DECREF( tmp_kw_name_36 );

        exception_lineno = 560;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_177 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_36, tmp_dict_key_177, tmp_dict_value_177 );
    Py_DECREF( tmp_dict_value_177 );
    tmp_dict_value_178 = PyList_New( 4 );
    tmp_list_element_32 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLsizei );

    if (unlikely( tmp_list_element_32 == NULL ))
    {
        tmp_list_element_32 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLsizei );
    }

    if ( tmp_list_element_32 == NULL )
    {
        Py_DECREF( tmp_called_name_328 );
        Py_DECREF( tmp_kw_name_36 );
        Py_DECREF( tmp_dict_value_178 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLsizei" );
        exception_tb = NULL;

        exception_lineno = 561;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_32 );
    PyList_SET_ITEM( tmp_dict_value_178, 0, tmp_list_element_32 );
    tmp_list_element_32 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLfloat );

    if (unlikely( tmp_list_element_32 == NULL ))
    {
        tmp_list_element_32 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLfloat );
    }

    if ( tmp_list_element_32 == NULL )
    {
        Py_DECREF( tmp_called_name_328 );
        Py_DECREF( tmp_kw_name_36 );
        Py_DECREF( tmp_dict_value_178 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLfloat" );
        exception_tb = NULL;

        exception_lineno = 561;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_32 );
    PyList_SET_ITEM( tmp_dict_value_178, 1, tmp_list_element_32 );
    tmp_list_element_32 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLfloat );

    if (unlikely( tmp_list_element_32 == NULL ))
    {
        tmp_list_element_32 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLfloat );
    }

    if ( tmp_list_element_32 == NULL )
    {
        Py_DECREF( tmp_called_name_328 );
        Py_DECREF( tmp_kw_name_36 );
        Py_DECREF( tmp_dict_value_178 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLfloat" );
        exception_tb = NULL;

        exception_lineno = 561;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_32 );
    PyList_SET_ITEM( tmp_dict_value_178, 2, tmp_list_element_32 );
    tmp_list_element_32 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLfloat );

    if (unlikely( tmp_list_element_32 == NULL ))
    {
        tmp_list_element_32 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLfloat );
    }

    if ( tmp_list_element_32 == NULL )
    {
        Py_DECREF( tmp_called_name_328 );
        Py_DECREF( tmp_kw_name_36 );
        Py_DECREF( tmp_dict_value_178 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLfloat" );
        exception_tb = NULL;

        exception_lineno = 561;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_32 );
    PyList_SET_ITEM( tmp_dict_value_178, 3, tmp_list_element_32 );
    tmp_dict_key_178 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_36, tmp_dict_key_178, tmp_dict_value_178 );
    Py_DECREF( tmp_dict_value_178 );
    tmp_dict_value_179 = const_str_digest_ac38933d8c1b72110119b40120acaf7c;
    tmp_dict_key_179 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_36, tmp_dict_key_179, tmp_dict_value_179 );
    tmp_dict_value_180 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_plain_None_str_plain_None_list );
    tmp_dict_key_180 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_36, tmp_dict_key_180, tmp_dict_value_180 );
    Py_DECREF( tmp_dict_value_180 );
    frame_module->f_lineno = 563;
    tmp_assign_source_302 = CALL_FUNCTION( tmp_called_name_328, tmp_args_name_36, tmp_kw_name_36 );
    Py_DECREF( tmp_called_name_328 );
    Py_DECREF( tmp_kw_name_36 );
    if ( tmp_assign_source_302 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 563;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglAllocateMemoryNV, tmp_assign_source_302 );
    tmp_source_name_285 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_285 == NULL ))
    {
        tmp_source_name_285 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_285 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 566;
        goto frame_exception_exit_1;
    }

    tmp_called_name_330 = LOOKUP_ATTRIBUTE( tmp_source_name_285, const_str_plain_createBaseFunction );
    if ( tmp_called_name_330 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 566;
        goto frame_exception_exit_1;
    }
    tmp_args_name_37 = const_tuple_str_plain_wglFreeMemoryNV_tuple;
    tmp_kw_name_37 = _PyDict_NewPresized( 5 );
    tmp_source_name_286 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_286 == NULL ))
    {
        tmp_source_name_286 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_286 == NULL )
    {
        Py_DECREF( tmp_called_name_330 );
        Py_DECREF( tmp_kw_name_37 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 567;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_181 = LOOKUP_ATTRIBUTE( tmp_source_name_286, const_str_plain_GL );
    if ( tmp_dict_value_181 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_330 );
        Py_DECREF( tmp_kw_name_37 );

        exception_lineno = 567;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_181 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_37, tmp_dict_key_181, tmp_dict_value_181 );
    Py_DECREF( tmp_dict_value_181 );
    tmp_dict_value_182 = Py_None;
    tmp_dict_key_182 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_37, tmp_dict_key_182, tmp_dict_value_182 );
    tmp_dict_value_183 = PyList_New( 1 );
    tmp_called_name_331 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_331 == NULL ))
    {
        tmp_called_name_331 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_331 == NULL )
    {
        Py_DECREF( tmp_called_name_330 );
        Py_DECREF( tmp_kw_name_37 );
        Py_DECREF( tmp_dict_value_183 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 568;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 568;
    tmp_list_element_33 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_331, &PyTuple_GET_ITEM( const_tuple_none_tuple, 0 ) );

    if ( tmp_list_element_33 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_330 );
        Py_DECREF( tmp_kw_name_37 );
        Py_DECREF( tmp_dict_value_183 );

        exception_lineno = 568;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_183, 0, tmp_list_element_33 );
    tmp_dict_key_183 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_37, tmp_dict_key_183, tmp_dict_value_183 );
    Py_DECREF( tmp_dict_value_183 );
    tmp_dict_value_184 = const_str_digest_dc3fd7ed3b18a23122072bd198c7c93b;
    tmp_dict_key_184 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_37, tmp_dict_key_184, tmp_dict_value_184 );
    tmp_dict_value_185 = LIST_COPY( const_list_str_empty_list );
    tmp_dict_key_185 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_37, tmp_dict_key_185, tmp_dict_value_185 );
    Py_DECREF( tmp_dict_value_185 );
    frame_module->f_lineno = 570;
    tmp_assign_source_303 = CALL_FUNCTION( tmp_called_name_330, tmp_args_name_37, tmp_kw_name_37 );
    Py_DECREF( tmp_called_name_330 );
    Py_DECREF( tmp_kw_name_37 );
    if ( tmp_assign_source_303 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 570;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglFreeMemoryNV, tmp_assign_source_303 );
    tmp_called_name_332 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_332 == NULL ))
    {
        tmp_called_name_332 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_332 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 573;
        goto frame_exception_exit_1;
    }

    tmp_called_name_333 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_333 == NULL ))
    {
        tmp_called_name_333 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_333 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 573;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_177 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_void );

    if (unlikely( tmp_args_element_name_177 == NULL ))
    {
        tmp_args_element_name_177 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_void );
    }

    if ( tmp_args_element_name_177 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_void" );
        exception_tb = NULL;

        exception_lineno = 573;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 573;
    {
        PyObject *call_args[] = { tmp_args_element_name_177 };
        tmp_args_element_name_176 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_333, call_args );
    }

    if ( tmp_args_element_name_176 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 573;
        goto frame_exception_exit_1;
    }
    tmp_args_element_name_178 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLsizei );

    if (unlikely( tmp_args_element_name_178 == NULL ))
    {
        tmp_args_element_name_178 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLsizei );
    }

    if ( tmp_args_element_name_178 == NULL )
    {
        Py_DECREF( tmp_args_element_name_176 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLsizei" );
        exception_tb = NULL;

        exception_lineno = 573;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_179 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLfloat );

    if (unlikely( tmp_args_element_name_179 == NULL ))
    {
        tmp_args_element_name_179 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLfloat );
    }

    if ( tmp_args_element_name_179 == NULL )
    {
        Py_DECREF( tmp_args_element_name_176 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLfloat" );
        exception_tb = NULL;

        exception_lineno = 573;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_180 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLfloat );

    if (unlikely( tmp_args_element_name_180 == NULL ))
    {
        tmp_args_element_name_180 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLfloat );
    }

    if ( tmp_args_element_name_180 == NULL )
    {
        Py_DECREF( tmp_args_element_name_176 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLfloat" );
        exception_tb = NULL;

        exception_lineno = 573;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_181 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_GLfloat );

    if (unlikely( tmp_args_element_name_181 == NULL ))
    {
        tmp_args_element_name_181 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_GLfloat );
    }

    if ( tmp_args_element_name_181 == NULL )
    {
        Py_DECREF( tmp_args_element_name_176 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "GLfloat" );
        exception_tb = NULL;

        exception_lineno = 573;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 573;
    {
        PyObject *call_args[] = { tmp_args_element_name_176, tmp_args_element_name_178, tmp_args_element_name_179, tmp_args_element_name_180, tmp_args_element_name_181 };
        tmp_assign_source_304 = CALL_FUNCTION_WITH_ARGS5( tmp_called_name_332, call_args );
    }

    Py_DECREF( tmp_args_element_name_176 );
    if ( tmp_assign_source_304 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 573;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLALLOCATEMEMORYNVPROC, tmp_assign_source_304 );
    tmp_called_name_334 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_334 == NULL ))
    {
        tmp_called_name_334 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_334 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 574;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_182 = Py_None;
    tmp_called_name_335 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_335 == NULL ))
    {
        tmp_called_name_335 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_335 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 574;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 574;
    tmp_args_element_name_183 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_335, &PyTuple_GET_ITEM( const_tuple_none_tuple, 0 ) );

    if ( tmp_args_element_name_183 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 574;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 574;
    {
        PyObject *call_args[] = { tmp_args_element_name_182, tmp_args_element_name_183 };
        tmp_assign_source_305 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_334, call_args );
    }

    Py_DECREF( tmp_args_element_name_183 );
    if ( tmp_assign_source_305 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 574;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLFREEMEMORYNVPROC, tmp_assign_source_305 );
    tmp_source_name_287 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_287 == NULL ))
    {
        tmp_source_name_287 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_287 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 576;
        goto frame_exception_exit_1;
    }

    tmp_called_name_336 = LOOKUP_ATTRIBUTE( tmp_source_name_287, const_str_plain_Constant );
    if ( tmp_called_name_336 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 576;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 576;
    tmp_assign_source_306 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_336, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_3DFX_multisample_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_336 );
    if ( tmp_assign_source_306 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 576;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_3DFX_multisample, tmp_assign_source_306 );
    tmp_source_name_288 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_288 == NULL ))
    {
        tmp_source_name_288 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_288 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 578;
        goto frame_exception_exit_1;
    }

    tmp_called_name_337 = LOOKUP_ATTRIBUTE( tmp_source_name_288, const_str_plain_Constant );
    if ( tmp_called_name_337 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 578;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 578;
    tmp_assign_source_307 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_337, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_EXT_multisample_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_337 );
    if ( tmp_assign_source_307 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 578;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_EXT_multisample, tmp_assign_source_307 );
    tmp_source_name_289 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_289 == NULL ))
    {
        tmp_source_name_289 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_289 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 580;
        goto frame_exception_exit_1;
    }

    tmp_called_name_338 = LOOKUP_ATTRIBUTE( tmp_source_name_289, const_str_plain_Constant );
    if ( tmp_called_name_338 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 580;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 580;
    tmp_assign_source_308 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_338, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_OML_sync_control_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_338 );
    if ( tmp_assign_source_308 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 580;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_OML_sync_control, tmp_assign_source_308 );
    tmp_assign_source_309 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_longlong );

    if (unlikely( tmp_assign_source_309 == NULL ))
    {
        tmp_assign_source_309 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_longlong );
    }

    if ( tmp_assign_source_309 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_longlong" );
        exception_tb = NULL;

        exception_lineno = 581;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64, tmp_assign_source_309 );
    tmp_source_name_290 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_290 == NULL ))
    {
        tmp_source_name_290 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_290 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 582;
        goto frame_exception_exit_1;
    }

    tmp_called_name_339 = LOOKUP_ATTRIBUTE( tmp_source_name_290, const_str_plain_createBaseFunction );
    if ( tmp_called_name_339 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 582;
        goto frame_exception_exit_1;
    }
    tmp_args_name_38 = const_tuple_str_plain_wglGetSyncValuesOML_tuple;
    tmp_kw_name_38 = _PyDict_NewPresized( 5 );
    tmp_source_name_291 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_291 == NULL ))
    {
        tmp_source_name_291 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_291 == NULL )
    {
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 583;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_186 = LOOKUP_ATTRIBUTE( tmp_source_name_291, const_str_plain_GL );
    if ( tmp_dict_value_186 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );

        exception_lineno = 583;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_186 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_38, tmp_dict_key_186, tmp_dict_value_186 );
    Py_DECREF( tmp_dict_value_186 );
    tmp_dict_value_187 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_187 == NULL ))
    {
        tmp_dict_value_187 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_187 == NULL )
    {
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 583;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_187 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_38, tmp_dict_key_187, tmp_dict_value_187 );
    tmp_dict_value_188 = PyList_New( 4 );
    tmp_list_element_34 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_34 == NULL ))
    {
        tmp_list_element_34 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_34 == NULL )
    {
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_34 );
    PyList_SET_ITEM( tmp_dict_value_188, 0, tmp_list_element_34 );
    tmp_called_name_340 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_340 == NULL ))
    {
        tmp_called_name_340 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_340 == NULL )
    {
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_184 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_184 == NULL ))
    {
        tmp_args_element_name_184 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_184 == NULL )
    {
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 584;
    {
        PyObject *call_args[] = { tmp_args_element_name_184 };
        tmp_list_element_34 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_340, call_args );
    }

    if ( tmp_list_element_34 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_188, 1, tmp_list_element_34 );
    tmp_called_name_341 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_341 == NULL ))
    {
        tmp_called_name_341 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_341 == NULL )
    {
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_185 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_185 == NULL ))
    {
        tmp_args_element_name_185 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_185 == NULL )
    {
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 584;
    {
        PyObject *call_args[] = { tmp_args_element_name_185 };
        tmp_list_element_34 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_341, call_args );
    }

    if ( tmp_list_element_34 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_188, 2, tmp_list_element_34 );
    tmp_called_name_342 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_342 == NULL ))
    {
        tmp_called_name_342 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_342 == NULL )
    {
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_186 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_186 == NULL ))
    {
        tmp_args_element_name_186 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_186 == NULL )
    {
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 584;
    {
        PyObject *call_args[] = { tmp_args_element_name_186 };
        tmp_list_element_34 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_342, call_args );
    }

    if ( tmp_list_element_34 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_339 );
        Py_DECREF( tmp_kw_name_38 );
        Py_DECREF( tmp_dict_value_188 );

        exception_lineno = 584;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_188, 3, tmp_list_element_34 );
    tmp_dict_key_188 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_38, tmp_dict_key_188, tmp_dict_value_188 );
    Py_DECREF( tmp_dict_value_188 );
    tmp_dict_value_189 = const_str_digest_f28c51a73c7e8b93a01de57cca19fd5f;
    tmp_dict_key_189 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_38, tmp_dict_key_189, tmp_dict_value_189 );
    tmp_dict_value_190 = LIST_COPY( const_list_str_plain_None_str_empty_str_empty_str_empty_list );
    tmp_dict_key_190 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_38, tmp_dict_key_190, tmp_dict_value_190 );
    Py_DECREF( tmp_dict_value_190 );
    frame_module->f_lineno = 586;
    tmp_assign_source_310 = CALL_FUNCTION( tmp_called_name_339, tmp_args_name_38, tmp_kw_name_38 );
    Py_DECREF( tmp_called_name_339 );
    Py_DECREF( tmp_kw_name_38 );
    if ( tmp_assign_source_310 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 586;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetSyncValuesOML, tmp_assign_source_310 );
    tmp_assign_source_311 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_assign_source_311 == NULL ))
    {
        tmp_assign_source_311 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_assign_source_311 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 589;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT32, tmp_assign_source_311 );
    tmp_source_name_292 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_292 == NULL ))
    {
        tmp_source_name_292 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_292 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 590;
        goto frame_exception_exit_1;
    }

    tmp_called_name_343 = LOOKUP_ATTRIBUTE( tmp_source_name_292, const_str_plain_createBaseFunction );
    if ( tmp_called_name_343 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 590;
        goto frame_exception_exit_1;
    }
    tmp_args_name_39 = const_tuple_str_plain_wglGetMscRateOML_tuple;
    tmp_kw_name_39 = _PyDict_NewPresized( 5 );
    tmp_source_name_293 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_293 == NULL ))
    {
        tmp_source_name_293 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_293 == NULL )
    {
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 591;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_191 = LOOKUP_ATTRIBUTE( tmp_source_name_293, const_str_plain_GL );
    if ( tmp_dict_value_191 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );

        exception_lineno = 591;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_191 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_39, tmp_dict_key_191, tmp_dict_value_191 );
    Py_DECREF( tmp_dict_value_191 );
    tmp_dict_value_192 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_192 == NULL ))
    {
        tmp_dict_value_192 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_192 == NULL )
    {
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 591;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_192 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_39, tmp_dict_key_192, tmp_dict_value_192 );
    tmp_dict_value_193 = PyList_New( 3 );
    tmp_list_element_35 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_35 == NULL ))
    {
        tmp_list_element_35 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_35 == NULL )
    {
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );
        Py_DECREF( tmp_dict_value_193 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 592;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_35 );
    PyList_SET_ITEM( tmp_dict_value_193, 0, tmp_list_element_35 );
    tmp_called_name_344 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_344 == NULL ))
    {
        tmp_called_name_344 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_344 == NULL )
    {
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );
        Py_DECREF( tmp_dict_value_193 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 592;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_187 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT32 );

    if (unlikely( tmp_args_element_name_187 == NULL ))
    {
        tmp_args_element_name_187 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT32 );
    }

    if ( tmp_args_element_name_187 == NULL )
    {
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );
        Py_DECREF( tmp_dict_value_193 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT32" );
        exception_tb = NULL;

        exception_lineno = 592;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 592;
    {
        PyObject *call_args[] = { tmp_args_element_name_187 };
        tmp_list_element_35 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_344, call_args );
    }

    if ( tmp_list_element_35 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );
        Py_DECREF( tmp_dict_value_193 );

        exception_lineno = 592;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_193, 1, tmp_list_element_35 );
    tmp_called_name_345 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_345 == NULL ))
    {
        tmp_called_name_345 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_345 == NULL )
    {
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );
        Py_DECREF( tmp_dict_value_193 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 592;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_188 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT32 );

    if (unlikely( tmp_args_element_name_188 == NULL ))
    {
        tmp_args_element_name_188 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT32 );
    }

    if ( tmp_args_element_name_188 == NULL )
    {
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );
        Py_DECREF( tmp_dict_value_193 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT32" );
        exception_tb = NULL;

        exception_lineno = 592;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 592;
    {
        PyObject *call_args[] = { tmp_args_element_name_188 };
        tmp_list_element_35 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_345, call_args );
    }

    if ( tmp_list_element_35 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_343 );
        Py_DECREF( tmp_kw_name_39 );
        Py_DECREF( tmp_dict_value_193 );

        exception_lineno = 592;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_193, 2, tmp_list_element_35 );
    tmp_dict_key_193 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_39, tmp_dict_key_193, tmp_dict_value_193 );
    Py_DECREF( tmp_dict_value_193 );
    tmp_dict_value_194 = const_str_digest_a9691bd88ff051a659ae20c74f9ded69;
    tmp_dict_key_194 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_39, tmp_dict_key_194, tmp_dict_value_194 );
    tmp_dict_value_195 = LIST_COPY( const_list_str_plain_None_str_empty_str_empty_list );
    tmp_dict_key_195 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_39, tmp_dict_key_195, tmp_dict_value_195 );
    Py_DECREF( tmp_dict_value_195 );
    frame_module->f_lineno = 594;
    tmp_assign_source_312 = CALL_FUNCTION( tmp_called_name_343, tmp_args_name_39, tmp_kw_name_39 );
    Py_DECREF( tmp_called_name_343 );
    Py_DECREF( tmp_kw_name_39 );
    if ( tmp_assign_source_312 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 594;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetMscRateOML, tmp_assign_source_312 );
    tmp_source_name_294 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_294 == NULL ))
    {
        tmp_source_name_294 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_294 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 597;
        goto frame_exception_exit_1;
    }

    tmp_called_name_346 = LOOKUP_ATTRIBUTE( tmp_source_name_294, const_str_plain_createBaseFunction );
    if ( tmp_called_name_346 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 597;
        goto frame_exception_exit_1;
    }
    tmp_args_name_40 = const_tuple_str_plain_wglSwapBuffersMscOML_tuple;
    tmp_kw_name_40 = _PyDict_NewPresized( 5 );
    tmp_source_name_295 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_295 == NULL ))
    {
        tmp_source_name_295 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_295 == NULL )
    {
        Py_DECREF( tmp_called_name_346 );
        Py_DECREF( tmp_kw_name_40 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 598;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_196 = LOOKUP_ATTRIBUTE( tmp_source_name_295, const_str_plain_GL );
    if ( tmp_dict_value_196 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_346 );
        Py_DECREF( tmp_kw_name_40 );

        exception_lineno = 598;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_196 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_40, tmp_dict_key_196, tmp_dict_value_196 );
    Py_DECREF( tmp_dict_value_196 );
    tmp_dict_value_197 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_dict_value_197 == NULL ))
    {
        tmp_dict_value_197 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_dict_value_197 == NULL )
    {
        Py_DECREF( tmp_called_name_346 );
        Py_DECREF( tmp_kw_name_40 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 598;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_197 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_40, tmp_dict_key_197, tmp_dict_value_197 );
    tmp_dict_value_198 = PyList_New( 4 );
    tmp_list_element_36 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_36 == NULL ))
    {
        tmp_list_element_36 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_36 == NULL )
    {
        Py_DECREF( tmp_called_name_346 );
        Py_DECREF( tmp_kw_name_40 );
        Py_DECREF( tmp_dict_value_198 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 599;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_36 );
    PyList_SET_ITEM( tmp_dict_value_198, 0, tmp_list_element_36 );
    tmp_list_element_36 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_36 == NULL ))
    {
        tmp_list_element_36 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_36 == NULL )
    {
        Py_DECREF( tmp_called_name_346 );
        Py_DECREF( tmp_kw_name_40 );
        Py_DECREF( tmp_dict_value_198 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 599;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_36 );
    PyList_SET_ITEM( tmp_dict_value_198, 1, tmp_list_element_36 );
    tmp_list_element_36 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_36 == NULL ))
    {
        tmp_list_element_36 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_36 == NULL )
    {
        Py_DECREF( tmp_called_name_346 );
        Py_DECREF( tmp_kw_name_40 );
        Py_DECREF( tmp_dict_value_198 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 599;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_36 );
    PyList_SET_ITEM( tmp_dict_value_198, 2, tmp_list_element_36 );
    tmp_list_element_36 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_36 == NULL ))
    {
        tmp_list_element_36 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_36 == NULL )
    {
        Py_DECREF( tmp_called_name_346 );
        Py_DECREF( tmp_kw_name_40 );
        Py_DECREF( tmp_dict_value_198 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 599;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_36 );
    PyList_SET_ITEM( tmp_dict_value_198, 3, tmp_list_element_36 );
    tmp_dict_key_198 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_40, tmp_dict_key_198, tmp_dict_value_198 );
    Py_DECREF( tmp_dict_value_198 );
    tmp_dict_value_199 = const_str_digest_98e23d8e13999d149b91ab1746cbd2c3;
    tmp_dict_key_199 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_40, tmp_dict_key_199, tmp_dict_value_199 );
    tmp_dict_value_200 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_plain_None_str_plain_None_list );
    tmp_dict_key_200 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_40, tmp_dict_key_200, tmp_dict_value_200 );
    Py_DECREF( tmp_dict_value_200 );
    frame_module->f_lineno = 601;
    tmp_assign_source_313 = CALL_FUNCTION( tmp_called_name_346, tmp_args_name_40, tmp_kw_name_40 );
    Py_DECREF( tmp_called_name_346 );
    Py_DECREF( tmp_kw_name_40 );
    if ( tmp_assign_source_313 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 601;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglSwapBuffersMscOML, tmp_assign_source_313 );
    tmp_source_name_296 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_296 == NULL ))
    {
        tmp_source_name_296 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_296 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 604;
        goto frame_exception_exit_1;
    }

    tmp_called_name_347 = LOOKUP_ATTRIBUTE( tmp_source_name_296, const_str_plain_createBaseFunction );
    if ( tmp_called_name_347 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 604;
        goto frame_exception_exit_1;
    }
    tmp_args_name_41 = const_tuple_str_plain_wglSwapLayerBuffersMscOML_tuple;
    tmp_kw_name_41 = _PyDict_NewPresized( 5 );
    tmp_source_name_297 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_297 == NULL ))
    {
        tmp_source_name_297 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_297 == NULL )
    {
        Py_DECREF( tmp_called_name_347 );
        Py_DECREF( tmp_kw_name_41 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 605;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_201 = LOOKUP_ATTRIBUTE( tmp_source_name_297, const_str_plain_GL );
    if ( tmp_dict_value_201 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_347 );
        Py_DECREF( tmp_kw_name_41 );

        exception_lineno = 605;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_201 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_41, tmp_dict_key_201, tmp_dict_value_201 );
    Py_DECREF( tmp_dict_value_201 );
    tmp_dict_value_202 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_dict_value_202 == NULL ))
    {
        tmp_dict_value_202 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_dict_value_202 == NULL )
    {
        Py_DECREF( tmp_called_name_347 );
        Py_DECREF( tmp_kw_name_41 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 605;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_202 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_41, tmp_dict_key_202, tmp_dict_value_202 );
    tmp_dict_value_203 = PyList_New( 5 );
    tmp_list_element_37 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_37 == NULL ))
    {
        tmp_list_element_37 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_37 == NULL )
    {
        Py_DECREF( tmp_called_name_347 );
        Py_DECREF( tmp_kw_name_41 );
        Py_DECREF( tmp_dict_value_203 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 606;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_37 );
    PyList_SET_ITEM( tmp_dict_value_203, 0, tmp_list_element_37 );
    tmp_list_element_37 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_37 == NULL ))
    {
        tmp_list_element_37 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_37 == NULL )
    {
        Py_DECREF( tmp_called_name_347 );
        Py_DECREF( tmp_kw_name_41 );
        Py_DECREF( tmp_dict_value_203 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 606;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_37 );
    PyList_SET_ITEM( tmp_dict_value_203, 1, tmp_list_element_37 );
    tmp_list_element_37 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_37 == NULL ))
    {
        tmp_list_element_37 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_37 == NULL )
    {
        Py_DECREF( tmp_called_name_347 );
        Py_DECREF( tmp_kw_name_41 );
        Py_DECREF( tmp_dict_value_203 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 606;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_37 );
    PyList_SET_ITEM( tmp_dict_value_203, 2, tmp_list_element_37 );
    tmp_list_element_37 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_37 == NULL ))
    {
        tmp_list_element_37 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_37 == NULL )
    {
        Py_DECREF( tmp_called_name_347 );
        Py_DECREF( tmp_kw_name_41 );
        Py_DECREF( tmp_dict_value_203 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 606;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_37 );
    PyList_SET_ITEM( tmp_dict_value_203, 3, tmp_list_element_37 );
    tmp_list_element_37 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_37 == NULL ))
    {
        tmp_list_element_37 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_37 == NULL )
    {
        Py_DECREF( tmp_called_name_347 );
        Py_DECREF( tmp_kw_name_41 );
        Py_DECREF( tmp_dict_value_203 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 606;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_37 );
    PyList_SET_ITEM( tmp_dict_value_203, 4, tmp_list_element_37 );
    tmp_dict_key_203 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_41, tmp_dict_key_203, tmp_dict_value_203 );
    Py_DECREF( tmp_dict_value_203 );
    tmp_dict_value_204 = const_str_digest_b6f5c191c5bbafc6849d65a12c19e5a8;
    tmp_dict_key_204 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_41, tmp_dict_key_204, tmp_dict_value_204 );
    tmp_dict_value_205 = LIST_COPY( const_list_ff8e1460aff9a2a091ff1bd4618c4db3_list );
    tmp_dict_key_205 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_41, tmp_dict_key_205, tmp_dict_value_205 );
    Py_DECREF( tmp_dict_value_205 );
    frame_module->f_lineno = 608;
    tmp_assign_source_314 = CALL_FUNCTION( tmp_called_name_347, tmp_args_name_41, tmp_kw_name_41 );
    Py_DECREF( tmp_called_name_347 );
    Py_DECREF( tmp_kw_name_41 );
    if ( tmp_assign_source_314 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 608;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglSwapLayerBuffersMscOML, tmp_assign_source_314 );
    tmp_source_name_298 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_298 == NULL ))
    {
        tmp_source_name_298 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_298 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 611;
        goto frame_exception_exit_1;
    }

    tmp_called_name_348 = LOOKUP_ATTRIBUTE( tmp_source_name_298, const_str_plain_createBaseFunction );
    if ( tmp_called_name_348 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 611;
        goto frame_exception_exit_1;
    }
    tmp_args_name_42 = const_tuple_str_plain_wglWaitForMscOML_tuple;
    tmp_kw_name_42 = _PyDict_NewPresized( 5 );
    tmp_source_name_299 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_299 == NULL ))
    {
        tmp_source_name_299 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_299 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 612;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_206 = LOOKUP_ATTRIBUTE( tmp_source_name_299, const_str_plain_GL );
    if ( tmp_dict_value_206 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );

        exception_lineno = 612;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_206 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_42, tmp_dict_key_206, tmp_dict_value_206 );
    Py_DECREF( tmp_dict_value_206 );
    tmp_dict_value_207 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_207 == NULL ))
    {
        tmp_dict_value_207 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_207 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 612;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_207 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_42, tmp_dict_key_207, tmp_dict_value_207 );
    tmp_dict_value_208 = PyList_New( 7 );
    tmp_list_element_38 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_38 == NULL ))
    {
        tmp_list_element_38 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_38 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_38 );
    PyList_SET_ITEM( tmp_dict_value_208, 0, tmp_list_element_38 );
    tmp_list_element_38 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_38 == NULL ))
    {
        tmp_list_element_38 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_38 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_38 );
    PyList_SET_ITEM( tmp_dict_value_208, 1, tmp_list_element_38 );
    tmp_list_element_38 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_38 == NULL ))
    {
        tmp_list_element_38 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_38 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_38 );
    PyList_SET_ITEM( tmp_dict_value_208, 2, tmp_list_element_38 );
    tmp_list_element_38 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_38 == NULL ))
    {
        tmp_list_element_38 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_38 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_38 );
    PyList_SET_ITEM( tmp_dict_value_208, 3, tmp_list_element_38 );
    tmp_called_name_349 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_349 == NULL ))
    {
        tmp_called_name_349 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_349 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_189 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_189 == NULL ))
    {
        tmp_args_element_name_189 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_189 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 613;
    {
        PyObject *call_args[] = { tmp_args_element_name_189 };
        tmp_list_element_38 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_349, call_args );
    }

    if ( tmp_list_element_38 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_208, 4, tmp_list_element_38 );
    tmp_called_name_350 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_350 == NULL ))
    {
        tmp_called_name_350 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_350 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_190 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_190 == NULL ))
    {
        tmp_args_element_name_190 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_190 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 613;
    {
        PyObject *call_args[] = { tmp_args_element_name_190 };
        tmp_list_element_38 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_350, call_args );
    }

    if ( tmp_list_element_38 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_208, 5, tmp_list_element_38 );
    tmp_called_name_351 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_351 == NULL ))
    {
        tmp_called_name_351 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_351 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_191 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_191 == NULL ))
    {
        tmp_args_element_name_191 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_191 == NULL )
    {
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 613;
    {
        PyObject *call_args[] = { tmp_args_element_name_191 };
        tmp_list_element_38 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_351, call_args );
    }

    if ( tmp_list_element_38 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_348 );
        Py_DECREF( tmp_kw_name_42 );
        Py_DECREF( tmp_dict_value_208 );

        exception_lineno = 613;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_208, 6, tmp_list_element_38 );
    tmp_dict_key_208 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_42, tmp_dict_key_208, tmp_dict_value_208 );
    Py_DECREF( tmp_dict_value_208 );
    tmp_dict_value_209 = const_str_digest_3d02eaa31fc0b35def39b0021d5de279;
    tmp_dict_key_209 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_42, tmp_dict_key_209, tmp_dict_value_209 );
    tmp_dict_value_210 = LIST_COPY( const_list_3044af3252a87779e3d9d7fbce1e073b_list );
    tmp_dict_key_210 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_42, tmp_dict_key_210, tmp_dict_value_210 );
    Py_DECREF( tmp_dict_value_210 );
    frame_module->f_lineno = 615;
    tmp_assign_source_315 = CALL_FUNCTION( tmp_called_name_348, tmp_args_name_42, tmp_kw_name_42 );
    Py_DECREF( tmp_called_name_348 );
    Py_DECREF( tmp_kw_name_42 );
    if ( tmp_assign_source_315 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 615;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglWaitForMscOML, tmp_assign_source_315 );
    tmp_source_name_300 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_300 == NULL ))
    {
        tmp_source_name_300 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_300 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 618;
        goto frame_exception_exit_1;
    }

    tmp_called_name_352 = LOOKUP_ATTRIBUTE( tmp_source_name_300, const_str_plain_createBaseFunction );
    if ( tmp_called_name_352 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 618;
        goto frame_exception_exit_1;
    }
    tmp_args_name_43 = const_tuple_str_plain_wglWaitForSbcOML_tuple;
    tmp_kw_name_43 = _PyDict_NewPresized( 5 );
    tmp_source_name_301 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_301 == NULL ))
    {
        tmp_source_name_301 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_301 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 619;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_211 = LOOKUP_ATTRIBUTE( tmp_source_name_301, const_str_plain_GL );
    if ( tmp_dict_value_211 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );

        exception_lineno = 619;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_211 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_43, tmp_dict_key_211, tmp_dict_value_211 );
    Py_DECREF( tmp_dict_value_211 );
    tmp_dict_value_212 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_212 == NULL ))
    {
        tmp_dict_value_212 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_212 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 619;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_212 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_43, tmp_dict_key_212, tmp_dict_value_212 );
    tmp_dict_value_213 = PyList_New( 5 );
    tmp_list_element_39 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_39 == NULL ))
    {
        tmp_list_element_39 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_39 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_39 );
    PyList_SET_ITEM( tmp_dict_value_213, 0, tmp_list_element_39 );
    tmp_list_element_39 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_list_element_39 == NULL ))
    {
        tmp_list_element_39 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_list_element_39 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_39 );
    PyList_SET_ITEM( tmp_dict_value_213, 1, tmp_list_element_39 );
    tmp_called_name_353 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_353 == NULL ))
    {
        tmp_called_name_353 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_353 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_192 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_192 == NULL ))
    {
        tmp_args_element_name_192 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_192 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 620;
    {
        PyObject *call_args[] = { tmp_args_element_name_192 };
        tmp_list_element_39 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_353, call_args );
    }

    if ( tmp_list_element_39 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_213, 2, tmp_list_element_39 );
    tmp_called_name_354 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_354 == NULL ))
    {
        tmp_called_name_354 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_354 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_193 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_193 == NULL ))
    {
        tmp_args_element_name_193 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_193 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 620;
    {
        PyObject *call_args[] = { tmp_args_element_name_193 };
        tmp_list_element_39 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_354, call_args );
    }

    if ( tmp_list_element_39 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_213, 3, tmp_list_element_39 );
    tmp_called_name_355 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_355 == NULL ))
    {
        tmp_called_name_355 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_355 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_194 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_194 == NULL ))
    {
        tmp_args_element_name_194 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_194 == NULL )
    {
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 620;
    {
        PyObject *call_args[] = { tmp_args_element_name_194 };
        tmp_list_element_39 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_355, call_args );
    }

    if ( tmp_list_element_39 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_352 );
        Py_DECREF( tmp_kw_name_43 );
        Py_DECREF( tmp_dict_value_213 );

        exception_lineno = 620;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_213, 4, tmp_list_element_39 );
    tmp_dict_key_213 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_43, tmp_dict_key_213, tmp_dict_value_213 );
    Py_DECREF( tmp_dict_value_213 );
    tmp_dict_value_214 = const_str_digest_31980cbe9d14ac108582cc7ea19b870d;
    tmp_dict_key_214 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_43, tmp_dict_key_214, tmp_dict_value_214 );
    tmp_dict_value_215 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_empty_str_empty_str_empty_list );
    tmp_dict_key_215 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_43, tmp_dict_key_215, tmp_dict_value_215 );
    Py_DECREF( tmp_dict_value_215 );
    frame_module->f_lineno = 622;
    tmp_assign_source_316 = CALL_FUNCTION( tmp_called_name_352, tmp_args_name_43, tmp_kw_name_43 );
    Py_DECREF( tmp_called_name_352 );
    Py_DECREF( tmp_kw_name_43 );
    if ( tmp_assign_source_316 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 622;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglWaitForSbcOML, tmp_assign_source_316 );
    tmp_called_name_356 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_356 == NULL ))
    {
        tmp_called_name_356 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_356 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_195 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_195 == NULL ))
    {
        tmp_args_element_name_195 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_195 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_196 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_196 == NULL ))
    {
        tmp_args_element_name_196 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_196 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }

    tmp_called_name_357 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_357 == NULL ))
    {
        tmp_called_name_357 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_357 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_198 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_198 == NULL ))
    {
        tmp_args_element_name_198 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_198 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 625;
    {
        PyObject *call_args[] = { tmp_args_element_name_198 };
        tmp_args_element_name_197 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_357, call_args );
    }

    if ( tmp_args_element_name_197 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 625;
        goto frame_exception_exit_1;
    }
    tmp_called_name_358 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_358 == NULL ))
    {
        tmp_called_name_358 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_358 == NULL )
    {
        Py_DECREF( tmp_args_element_name_197 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_200 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_200 == NULL ))
    {
        tmp_args_element_name_200 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_200 == NULL )
    {
        Py_DECREF( tmp_args_element_name_197 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 625;
    {
        PyObject *call_args[] = { tmp_args_element_name_200 };
        tmp_args_element_name_199 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_358, call_args );
    }

    if ( tmp_args_element_name_199 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_197 );

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }
    tmp_called_name_359 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_359 == NULL ))
    {
        tmp_called_name_359 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_359 == NULL )
    {
        Py_DECREF( tmp_args_element_name_197 );
        Py_DECREF( tmp_args_element_name_199 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_202 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_202 == NULL ))
    {
        tmp_args_element_name_202 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_202 == NULL )
    {
        Py_DECREF( tmp_args_element_name_197 );
        Py_DECREF( tmp_args_element_name_199 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 625;
    {
        PyObject *call_args[] = { tmp_args_element_name_202 };
        tmp_args_element_name_201 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_359, call_args );
    }

    if ( tmp_args_element_name_201 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_197 );
        Py_DECREF( tmp_args_element_name_199 );

        exception_lineno = 625;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 625;
    {
        PyObject *call_args[] = { tmp_args_element_name_195, tmp_args_element_name_196, tmp_args_element_name_197, tmp_args_element_name_199, tmp_args_element_name_201 };
        tmp_assign_source_317 = CALL_FUNCTION_WITH_ARGS5( tmp_called_name_356, call_args );
    }

    Py_DECREF( tmp_args_element_name_197 );
    Py_DECREF( tmp_args_element_name_199 );
    Py_DECREF( tmp_args_element_name_201 );
    if ( tmp_assign_source_317 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 625;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETSYNCVALUESOMLPROC, tmp_assign_source_317 );
    tmp_called_name_360 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_360 == NULL ))
    {
        tmp_called_name_360 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_360 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 626;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_203 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_203 == NULL ))
    {
        tmp_args_element_name_203 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_203 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 626;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_204 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_204 == NULL ))
    {
        tmp_args_element_name_204 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_204 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 626;
        goto frame_exception_exit_1;
    }

    tmp_called_name_361 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_361 == NULL ))
    {
        tmp_called_name_361 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_361 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 626;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_206 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT32 );

    if (unlikely( tmp_args_element_name_206 == NULL ))
    {
        tmp_args_element_name_206 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT32 );
    }

    if ( tmp_args_element_name_206 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT32" );
        exception_tb = NULL;

        exception_lineno = 626;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 626;
    {
        PyObject *call_args[] = { tmp_args_element_name_206 };
        tmp_args_element_name_205 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_361, call_args );
    }

    if ( tmp_args_element_name_205 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 626;
        goto frame_exception_exit_1;
    }
    tmp_called_name_362 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_362 == NULL ))
    {
        tmp_called_name_362 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_362 == NULL )
    {
        Py_DECREF( tmp_args_element_name_205 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 626;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_208 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT32 );

    if (unlikely( tmp_args_element_name_208 == NULL ))
    {
        tmp_args_element_name_208 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT32 );
    }

    if ( tmp_args_element_name_208 == NULL )
    {
        Py_DECREF( tmp_args_element_name_205 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT32" );
        exception_tb = NULL;

        exception_lineno = 626;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 626;
    {
        PyObject *call_args[] = { tmp_args_element_name_208 };
        tmp_args_element_name_207 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_362, call_args );
    }

    if ( tmp_args_element_name_207 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_205 );

        exception_lineno = 626;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 626;
    {
        PyObject *call_args[] = { tmp_args_element_name_203, tmp_args_element_name_204, tmp_args_element_name_205, tmp_args_element_name_207 };
        tmp_assign_source_318 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_360, call_args );
    }

    Py_DECREF( tmp_args_element_name_205 );
    Py_DECREF( tmp_args_element_name_207 );
    if ( tmp_assign_source_318 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 626;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETMSCRATEOMLPROC, tmp_assign_source_318 );
    tmp_called_name_363 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_363 == NULL ))
    {
        tmp_called_name_363 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_363 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 627;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_209 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_209 == NULL ))
    {
        tmp_args_element_name_209 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_209 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 627;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_210 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_210 == NULL ))
    {
        tmp_args_element_name_210 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_210 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 627;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_211 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_211 == NULL ))
    {
        tmp_args_element_name_211 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_211 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 627;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_212 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_212 == NULL ))
    {
        tmp_args_element_name_212 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_212 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 627;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_213 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_213 == NULL ))
    {
        tmp_args_element_name_213 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_213 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 627;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 627;
    {
        PyObject *call_args[] = { tmp_args_element_name_209, tmp_args_element_name_210, tmp_args_element_name_211, tmp_args_element_name_212, tmp_args_element_name_213 };
        tmp_assign_source_319 = CALL_FUNCTION_WITH_ARGS5( tmp_called_name_363, call_args );
    }

    if ( tmp_assign_source_319 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 627;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLSWAPBUFFERSMSCOMLPROC, tmp_assign_source_319 );
    tmp_called_name_364 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_364 == NULL ))
    {
        tmp_called_name_364 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_364 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 628;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_214 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_214 == NULL ))
    {
        tmp_args_element_name_214 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_214 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 628;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_215 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_215 == NULL ))
    {
        tmp_args_element_name_215 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_215 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 628;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_216 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_216 == NULL ))
    {
        tmp_args_element_name_216 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_216 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 628;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_217 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_217 == NULL ))
    {
        tmp_args_element_name_217 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_217 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 628;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_218 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_218 == NULL ))
    {
        tmp_args_element_name_218 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_218 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 628;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_219 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_219 == NULL ))
    {
        tmp_args_element_name_219 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_219 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 628;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 628;
    {
        PyObject *call_args[] = { tmp_args_element_name_214, tmp_args_element_name_215, tmp_args_element_name_216, tmp_args_element_name_217, tmp_args_element_name_218, tmp_args_element_name_219 };
        tmp_assign_source_320 = CALL_FUNCTION_WITH_ARGS6( tmp_called_name_364, call_args );
    }

    if ( tmp_assign_source_320 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 628;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLSWAPLAYERBUFFERSMSCOMLPROC, tmp_assign_source_320 );
    tmp_called_name_365 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_365 == NULL ))
    {
        tmp_called_name_365 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_365 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_220 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_220 == NULL ))
    {
        tmp_args_element_name_220 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_220 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_221 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_221 == NULL ))
    {
        tmp_args_element_name_221 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_221 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_222 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_222 == NULL ))
    {
        tmp_args_element_name_222 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_222 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_223 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_223 == NULL ))
    {
        tmp_args_element_name_223 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_223 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_224 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_224 == NULL ))
    {
        tmp_args_element_name_224 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_224 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    tmp_called_name_366 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_366 == NULL ))
    {
        tmp_called_name_366 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_366 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_226 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_226 == NULL ))
    {
        tmp_args_element_name_226 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_226 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 629;
    {
        PyObject *call_args[] = { tmp_args_element_name_226 };
        tmp_args_element_name_225 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_366, call_args );
    }

    if ( tmp_args_element_name_225 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 629;
        goto frame_exception_exit_1;
    }
    tmp_called_name_367 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_367 == NULL ))
    {
        tmp_called_name_367 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_367 == NULL )
    {
        Py_DECREF( tmp_args_element_name_225 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_228 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_228 == NULL ))
    {
        tmp_args_element_name_228 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_228 == NULL )
    {
        Py_DECREF( tmp_args_element_name_225 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 629;
    {
        PyObject *call_args[] = { tmp_args_element_name_228 };
        tmp_args_element_name_227 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_367, call_args );
    }

    if ( tmp_args_element_name_227 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_225 );

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }
    tmp_called_name_368 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_368 == NULL ))
    {
        tmp_called_name_368 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_368 == NULL )
    {
        Py_DECREF( tmp_args_element_name_225 );
        Py_DECREF( tmp_args_element_name_227 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_230 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_230 == NULL ))
    {
        tmp_args_element_name_230 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_230 == NULL )
    {
        Py_DECREF( tmp_args_element_name_225 );
        Py_DECREF( tmp_args_element_name_227 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 629;
    {
        PyObject *call_args[] = { tmp_args_element_name_230 };
        tmp_args_element_name_229 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_368, call_args );
    }

    if ( tmp_args_element_name_229 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_225 );
        Py_DECREF( tmp_args_element_name_227 );

        exception_lineno = 629;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 629;
    {
        PyObject *call_args[] = { tmp_args_element_name_220, tmp_args_element_name_221, tmp_args_element_name_222, tmp_args_element_name_223, tmp_args_element_name_224, tmp_args_element_name_225, tmp_args_element_name_227, tmp_args_element_name_229 };
        tmp_assign_source_321 = CALL_FUNCTION_WITH_ARGS8( tmp_called_name_365, call_args );
    }

    Py_DECREF( tmp_args_element_name_225 );
    Py_DECREF( tmp_args_element_name_227 );
    Py_DECREF( tmp_args_element_name_229 );
    if ( tmp_assign_source_321 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 629;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLWAITFORMSCOMLPROC, tmp_assign_source_321 );
    tmp_called_name_369 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_369 == NULL ))
    {
        tmp_called_name_369 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_369 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_231 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_231 == NULL ))
    {
        tmp_args_element_name_231 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_231 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_232 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_232 == NULL ))
    {
        tmp_args_element_name_232 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_232 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_233 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_233 == NULL ))
    {
        tmp_args_element_name_233 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_233 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    tmp_called_name_370 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_370 == NULL ))
    {
        tmp_called_name_370 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_370 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_235 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_235 == NULL ))
    {
        tmp_args_element_name_235 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_235 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 630;
    {
        PyObject *call_args[] = { tmp_args_element_name_235 };
        tmp_args_element_name_234 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_370, call_args );
    }

    if ( tmp_args_element_name_234 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 630;
        goto frame_exception_exit_1;
    }
    tmp_called_name_371 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_371 == NULL ))
    {
        tmp_called_name_371 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_371 == NULL )
    {
        Py_DECREF( tmp_args_element_name_234 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_237 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_237 == NULL ))
    {
        tmp_args_element_name_237 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_237 == NULL )
    {
        Py_DECREF( tmp_args_element_name_234 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 630;
    {
        PyObject *call_args[] = { tmp_args_element_name_237 };
        tmp_args_element_name_236 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_371, call_args );
    }

    if ( tmp_args_element_name_236 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_234 );

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }
    tmp_called_name_372 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_372 == NULL ))
    {
        tmp_called_name_372 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_372 == NULL )
    {
        Py_DECREF( tmp_args_element_name_234 );
        Py_DECREF( tmp_args_element_name_236 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_239 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_INT64 );

    if (unlikely( tmp_args_element_name_239 == NULL ))
    {
        tmp_args_element_name_239 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_INT64 );
    }

    if ( tmp_args_element_name_239 == NULL )
    {
        Py_DECREF( tmp_args_element_name_234 );
        Py_DECREF( tmp_args_element_name_236 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "INT64" );
        exception_tb = NULL;

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 630;
    {
        PyObject *call_args[] = { tmp_args_element_name_239 };
        tmp_args_element_name_238 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_372, call_args );
    }

    if ( tmp_args_element_name_238 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_234 );
        Py_DECREF( tmp_args_element_name_236 );

        exception_lineno = 630;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 630;
    {
        PyObject *call_args[] = { tmp_args_element_name_231, tmp_args_element_name_232, tmp_args_element_name_233, tmp_args_element_name_234, tmp_args_element_name_236, tmp_args_element_name_238 };
        tmp_assign_source_322 = CALL_FUNCTION_WITH_ARGS6( tmp_called_name_369, call_args );
    }

    Py_DECREF( tmp_args_element_name_234 );
    Py_DECREF( tmp_args_element_name_236 );
    Py_DECREF( tmp_args_element_name_238 );
    if ( tmp_assign_source_322 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 630;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLWAITFORSBCOMLPROC, tmp_assign_source_322 );
    tmp_source_name_302 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_302 == NULL ))
    {
        tmp_source_name_302 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_302 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 632;
        goto frame_exception_exit_1;
    }

    tmp_called_name_373 = LOOKUP_ATTRIBUTE( tmp_source_name_302, const_str_plain_Constant );
    if ( tmp_called_name_373 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 632;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 632;
    tmp_assign_source_323 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_373, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_I3D_digital_video_control_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_373 );
    if ( tmp_assign_source_323 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 632;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_I3D_digital_video_control, tmp_assign_source_323 );
    tmp_source_name_303 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_303 == NULL ))
    {
        tmp_source_name_303 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_303 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 633;
        goto frame_exception_exit_1;
    }

    tmp_called_name_374 = LOOKUP_ATTRIBUTE( tmp_source_name_303, const_str_plain_createBaseFunction );
    if ( tmp_called_name_374 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 633;
        goto frame_exception_exit_1;
    }
    tmp_args_name_44 = const_tuple_str_plain_wglGetDigitalVideoParametersI3D_tuple;
    tmp_kw_name_44 = _PyDict_NewPresized( 5 );
    tmp_source_name_304 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_304 == NULL ))
    {
        tmp_source_name_304 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_304 == NULL )
    {
        Py_DECREF( tmp_called_name_374 );
        Py_DECREF( tmp_kw_name_44 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 634;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_216 = LOOKUP_ATTRIBUTE( tmp_source_name_304, const_str_plain_GL );
    if ( tmp_dict_value_216 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_374 );
        Py_DECREF( tmp_kw_name_44 );

        exception_lineno = 634;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_216 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_44, tmp_dict_key_216, tmp_dict_value_216 );
    Py_DECREF( tmp_dict_value_216 );
    tmp_dict_value_217 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_217 == NULL ))
    {
        tmp_dict_value_217 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_217 == NULL )
    {
        Py_DECREF( tmp_called_name_374 );
        Py_DECREF( tmp_kw_name_44 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 634;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_217 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_44, tmp_dict_key_217, tmp_dict_value_217 );
    tmp_dict_value_218 = PyList_New( 3 );
    tmp_list_element_40 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_40 == NULL ))
    {
        tmp_list_element_40 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_40 == NULL )
    {
        Py_DECREF( tmp_called_name_374 );
        Py_DECREF( tmp_kw_name_44 );
        Py_DECREF( tmp_dict_value_218 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 635;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_40 );
    PyList_SET_ITEM( tmp_dict_value_218, 0, tmp_list_element_40 );
    tmp_list_element_40 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_40 == NULL ))
    {
        tmp_list_element_40 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_40 == NULL )
    {
        Py_DECREF( tmp_called_name_374 );
        Py_DECREF( tmp_kw_name_44 );
        Py_DECREF( tmp_dict_value_218 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 635;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_40 );
    PyList_SET_ITEM( tmp_dict_value_218, 1, tmp_list_element_40 );
    tmp_called_name_375 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_375 == NULL ))
    {
        tmp_called_name_375 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_375 == NULL )
    {
        Py_DECREF( tmp_called_name_374 );
        Py_DECREF( tmp_kw_name_44 );
        Py_DECREF( tmp_dict_value_218 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 635;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_240 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_240 == NULL ))
    {
        tmp_args_element_name_240 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_240 == NULL )
    {
        Py_DECREF( tmp_called_name_374 );
        Py_DECREF( tmp_kw_name_44 );
        Py_DECREF( tmp_dict_value_218 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 635;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 635;
    {
        PyObject *call_args[] = { tmp_args_element_name_240 };
        tmp_list_element_40 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_375, call_args );
    }

    if ( tmp_list_element_40 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_374 );
        Py_DECREF( tmp_kw_name_44 );
        Py_DECREF( tmp_dict_value_218 );

        exception_lineno = 635;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_218, 2, tmp_list_element_40 );
    tmp_dict_key_218 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_44, tmp_dict_key_218, tmp_dict_value_218 );
    Py_DECREF( tmp_dict_value_218 );
    tmp_dict_value_219 = const_str_digest_738947e2943ba1b41f0001f2126cad64;
    tmp_dict_key_219 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_44, tmp_dict_key_219, tmp_dict_value_219 );
    tmp_dict_value_220 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_empty_list );
    tmp_dict_key_220 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_44, tmp_dict_key_220, tmp_dict_value_220 );
    Py_DECREF( tmp_dict_value_220 );
    frame_module->f_lineno = 637;
    tmp_assign_source_324 = CALL_FUNCTION( tmp_called_name_374, tmp_args_name_44, tmp_kw_name_44 );
    Py_DECREF( tmp_called_name_374 );
    Py_DECREF( tmp_kw_name_44 );
    if ( tmp_assign_source_324 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 637;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetDigitalVideoParametersI3D, tmp_assign_source_324 );
    tmp_source_name_305 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_305 == NULL ))
    {
        tmp_source_name_305 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_305 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 640;
        goto frame_exception_exit_1;
    }

    tmp_called_name_376 = LOOKUP_ATTRIBUTE( tmp_source_name_305, const_str_plain_createBaseFunction );
    if ( tmp_called_name_376 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 640;
        goto frame_exception_exit_1;
    }
    tmp_args_name_45 = const_tuple_str_plain_wglSetDigitalVideoParametersI3D_tuple;
    tmp_kw_name_45 = _PyDict_NewPresized( 5 );
    tmp_source_name_306 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_306 == NULL ))
    {
        tmp_source_name_306 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_306 == NULL )
    {
        Py_DECREF( tmp_called_name_376 );
        Py_DECREF( tmp_kw_name_45 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 641;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_221 = LOOKUP_ATTRIBUTE( tmp_source_name_306, const_str_plain_GL );
    if ( tmp_dict_value_221 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_376 );
        Py_DECREF( tmp_kw_name_45 );

        exception_lineno = 641;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_221 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_45, tmp_dict_key_221, tmp_dict_value_221 );
    Py_DECREF( tmp_dict_value_221 );
    tmp_dict_value_222 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_222 == NULL ))
    {
        tmp_dict_value_222 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_222 == NULL )
    {
        Py_DECREF( tmp_called_name_376 );
        Py_DECREF( tmp_kw_name_45 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 641;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_222 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_45, tmp_dict_key_222, tmp_dict_value_222 );
    tmp_dict_value_223 = PyList_New( 3 );
    tmp_list_element_41 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_41 == NULL ))
    {
        tmp_list_element_41 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_41 == NULL )
    {
        Py_DECREF( tmp_called_name_376 );
        Py_DECREF( tmp_kw_name_45 );
        Py_DECREF( tmp_dict_value_223 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 642;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_41 );
    PyList_SET_ITEM( tmp_dict_value_223, 0, tmp_list_element_41 );
    tmp_list_element_41 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_41 == NULL ))
    {
        tmp_list_element_41 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_41 == NULL )
    {
        Py_DECREF( tmp_called_name_376 );
        Py_DECREF( tmp_kw_name_45 );
        Py_DECREF( tmp_dict_value_223 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 642;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_41 );
    PyList_SET_ITEM( tmp_dict_value_223, 1, tmp_list_element_41 );
    tmp_called_name_377 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_377 == NULL ))
    {
        tmp_called_name_377 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_377 == NULL )
    {
        Py_DECREF( tmp_called_name_376 );
        Py_DECREF( tmp_kw_name_45 );
        Py_DECREF( tmp_dict_value_223 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 642;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_241 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_241 == NULL ))
    {
        tmp_args_element_name_241 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_241 == NULL )
    {
        Py_DECREF( tmp_called_name_376 );
        Py_DECREF( tmp_kw_name_45 );
        Py_DECREF( tmp_dict_value_223 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 642;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 642;
    {
        PyObject *call_args[] = { tmp_args_element_name_241 };
        tmp_list_element_41 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_377, call_args );
    }

    if ( tmp_list_element_41 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_376 );
        Py_DECREF( tmp_kw_name_45 );
        Py_DECREF( tmp_dict_value_223 );

        exception_lineno = 642;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_223, 2, tmp_list_element_41 );
    tmp_dict_key_223 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_45, tmp_dict_key_223, tmp_dict_value_223 );
    Py_DECREF( tmp_dict_value_223 );
    tmp_dict_value_224 = const_str_digest_3f5c079e1cfa650332befe7263e74a49;
    tmp_dict_key_224 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_45, tmp_dict_key_224, tmp_dict_value_224 );
    tmp_dict_value_225 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_empty_list );
    tmp_dict_key_225 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_45, tmp_dict_key_225, tmp_dict_value_225 );
    Py_DECREF( tmp_dict_value_225 );
    frame_module->f_lineno = 644;
    tmp_assign_source_325 = CALL_FUNCTION( tmp_called_name_376, tmp_args_name_45, tmp_kw_name_45 );
    Py_DECREF( tmp_called_name_376 );
    Py_DECREF( tmp_kw_name_45 );
    if ( tmp_assign_source_325 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 644;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglSetDigitalVideoParametersI3D, tmp_assign_source_325 );
    tmp_called_name_378 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_378 == NULL ))
    {
        tmp_called_name_378 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_378 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 647;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_242 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_242 == NULL ))
    {
        tmp_args_element_name_242 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_242 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 647;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_243 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_243 == NULL ))
    {
        tmp_args_element_name_243 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_243 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 647;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_244 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_244 == NULL ))
    {
        tmp_args_element_name_244 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_244 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 647;
        goto frame_exception_exit_1;
    }

    tmp_called_name_379 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_379 == NULL ))
    {
        tmp_called_name_379 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_379 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 647;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_246 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_246 == NULL ))
    {
        tmp_args_element_name_246 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_246 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 647;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 647;
    {
        PyObject *call_args[] = { tmp_args_element_name_246 };
        tmp_args_element_name_245 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_379, call_args );
    }

    if ( tmp_args_element_name_245 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 647;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 647;
    {
        PyObject *call_args[] = { tmp_args_element_name_242, tmp_args_element_name_243, tmp_args_element_name_244, tmp_args_element_name_245 };
        tmp_assign_source_326 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_378, call_args );
    }

    Py_DECREF( tmp_args_element_name_245 );
    if ( tmp_assign_source_326 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 647;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC, tmp_assign_source_326 );
    tmp_called_name_380 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_380 == NULL ))
    {
        tmp_called_name_380 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_380 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 648;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_247 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_247 == NULL ))
    {
        tmp_args_element_name_247 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_247 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 648;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_248 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_248 == NULL ))
    {
        tmp_args_element_name_248 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_248 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 648;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_249 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_249 == NULL ))
    {
        tmp_args_element_name_249 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_249 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 648;
        goto frame_exception_exit_1;
    }

    tmp_called_name_381 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_381 == NULL ))
    {
        tmp_called_name_381 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_381 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 648;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_251 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_251 == NULL ))
    {
        tmp_args_element_name_251 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_251 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 648;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 648;
    {
        PyObject *call_args[] = { tmp_args_element_name_251 };
        tmp_args_element_name_250 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_381, call_args );
    }

    if ( tmp_args_element_name_250 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 648;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 648;
    {
        PyObject *call_args[] = { tmp_args_element_name_247, tmp_args_element_name_248, tmp_args_element_name_249, tmp_args_element_name_250 };
        tmp_assign_source_327 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_380, call_args );
    }

    Py_DECREF( tmp_args_element_name_250 );
    if ( tmp_assign_source_327 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 648;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC, tmp_assign_source_327 );
    tmp_source_name_307 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_307 == NULL ))
    {
        tmp_source_name_307 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_307 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 650;
        goto frame_exception_exit_1;
    }

    tmp_called_name_382 = LOOKUP_ATTRIBUTE( tmp_source_name_307, const_str_plain_Constant );
    if ( tmp_called_name_382 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 650;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 650;
    tmp_assign_source_328 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_382, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_I3D_gamma_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_382 );
    if ( tmp_assign_source_328 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 650;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_I3D_gamma, tmp_assign_source_328 );
    tmp_source_name_308 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_308 == NULL ))
    {
        tmp_source_name_308 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_308 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 651;
        goto frame_exception_exit_1;
    }

    tmp_called_name_383 = LOOKUP_ATTRIBUTE( tmp_source_name_308, const_str_plain_createBaseFunction );
    if ( tmp_called_name_383 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 651;
        goto frame_exception_exit_1;
    }
    tmp_args_name_46 = const_tuple_str_plain_wglGetGammaTableParametersI3D_tuple;
    tmp_kw_name_46 = _PyDict_NewPresized( 5 );
    tmp_source_name_309 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_309 == NULL ))
    {
        tmp_source_name_309 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_309 == NULL )
    {
        Py_DECREF( tmp_called_name_383 );
        Py_DECREF( tmp_kw_name_46 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 652;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_226 = LOOKUP_ATTRIBUTE( tmp_source_name_309, const_str_plain_GL );
    if ( tmp_dict_value_226 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_383 );
        Py_DECREF( tmp_kw_name_46 );

        exception_lineno = 652;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_226 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_46, tmp_dict_key_226, tmp_dict_value_226 );
    Py_DECREF( tmp_dict_value_226 );
    tmp_dict_value_227 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_227 == NULL ))
    {
        tmp_dict_value_227 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_227 == NULL )
    {
        Py_DECREF( tmp_called_name_383 );
        Py_DECREF( tmp_kw_name_46 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 652;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_227 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_46, tmp_dict_key_227, tmp_dict_value_227 );
    tmp_dict_value_228 = PyList_New( 3 );
    tmp_list_element_42 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_42 == NULL ))
    {
        tmp_list_element_42 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_42 == NULL )
    {
        Py_DECREF( tmp_called_name_383 );
        Py_DECREF( tmp_kw_name_46 );
        Py_DECREF( tmp_dict_value_228 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 653;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_42 );
    PyList_SET_ITEM( tmp_dict_value_228, 0, tmp_list_element_42 );
    tmp_list_element_42 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_42 == NULL ))
    {
        tmp_list_element_42 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_42 == NULL )
    {
        Py_DECREF( tmp_called_name_383 );
        Py_DECREF( tmp_kw_name_46 );
        Py_DECREF( tmp_dict_value_228 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 653;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_42 );
    PyList_SET_ITEM( tmp_dict_value_228, 1, tmp_list_element_42 );
    tmp_called_name_384 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_384 == NULL ))
    {
        tmp_called_name_384 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_384 == NULL )
    {
        Py_DECREF( tmp_called_name_383 );
        Py_DECREF( tmp_kw_name_46 );
        Py_DECREF( tmp_dict_value_228 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 653;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_252 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_252 == NULL ))
    {
        tmp_args_element_name_252 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_252 == NULL )
    {
        Py_DECREF( tmp_called_name_383 );
        Py_DECREF( tmp_kw_name_46 );
        Py_DECREF( tmp_dict_value_228 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 653;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 653;
    {
        PyObject *call_args[] = { tmp_args_element_name_252 };
        tmp_list_element_42 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_384, call_args );
    }

    if ( tmp_list_element_42 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_383 );
        Py_DECREF( tmp_kw_name_46 );
        Py_DECREF( tmp_dict_value_228 );

        exception_lineno = 653;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_228, 2, tmp_list_element_42 );
    tmp_dict_key_228 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_46, tmp_dict_key_228, tmp_dict_value_228 );
    Py_DECREF( tmp_dict_value_228 );
    tmp_dict_value_229 = const_str_digest_6b956dd3df480220bcf8ee2ae4fdaa68;
    tmp_dict_key_229 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_46, tmp_dict_key_229, tmp_dict_value_229 );
    tmp_dict_value_230 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_empty_list );
    tmp_dict_key_230 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_46, tmp_dict_key_230, tmp_dict_value_230 );
    Py_DECREF( tmp_dict_value_230 );
    frame_module->f_lineno = 655;
    tmp_assign_source_329 = CALL_FUNCTION( tmp_called_name_383, tmp_args_name_46, tmp_kw_name_46 );
    Py_DECREF( tmp_called_name_383 );
    Py_DECREF( tmp_kw_name_46 );
    if ( tmp_assign_source_329 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 655;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetGammaTableParametersI3D, tmp_assign_source_329 );
    tmp_source_name_310 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_310 == NULL ))
    {
        tmp_source_name_310 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_310 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 658;
        goto frame_exception_exit_1;
    }

    tmp_called_name_385 = LOOKUP_ATTRIBUTE( tmp_source_name_310, const_str_plain_createBaseFunction );
    if ( tmp_called_name_385 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 658;
        goto frame_exception_exit_1;
    }
    tmp_args_name_47 = const_tuple_str_plain_wglSetGammaTableParametersI3D_tuple;
    tmp_kw_name_47 = _PyDict_NewPresized( 5 );
    tmp_source_name_311 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_311 == NULL ))
    {
        tmp_source_name_311 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_311 == NULL )
    {
        Py_DECREF( tmp_called_name_385 );
        Py_DECREF( tmp_kw_name_47 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 659;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_231 = LOOKUP_ATTRIBUTE( tmp_source_name_311, const_str_plain_GL );
    if ( tmp_dict_value_231 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_385 );
        Py_DECREF( tmp_kw_name_47 );

        exception_lineno = 659;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_231 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_47, tmp_dict_key_231, tmp_dict_value_231 );
    Py_DECREF( tmp_dict_value_231 );
    tmp_dict_value_232 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_232 == NULL ))
    {
        tmp_dict_value_232 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_232 == NULL )
    {
        Py_DECREF( tmp_called_name_385 );
        Py_DECREF( tmp_kw_name_47 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 659;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_232 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_47, tmp_dict_key_232, tmp_dict_value_232 );
    tmp_dict_value_233 = PyList_New( 3 );
    tmp_list_element_43 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_43 == NULL ))
    {
        tmp_list_element_43 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_43 == NULL )
    {
        Py_DECREF( tmp_called_name_385 );
        Py_DECREF( tmp_kw_name_47 );
        Py_DECREF( tmp_dict_value_233 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 660;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_43 );
    PyList_SET_ITEM( tmp_dict_value_233, 0, tmp_list_element_43 );
    tmp_list_element_43 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_43 == NULL ))
    {
        tmp_list_element_43 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_43 == NULL )
    {
        Py_DECREF( tmp_called_name_385 );
        Py_DECREF( tmp_kw_name_47 );
        Py_DECREF( tmp_dict_value_233 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 660;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_43 );
    PyList_SET_ITEM( tmp_dict_value_233, 1, tmp_list_element_43 );
    tmp_called_name_386 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_386 == NULL ))
    {
        tmp_called_name_386 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_386 == NULL )
    {
        Py_DECREF( tmp_called_name_385 );
        Py_DECREF( tmp_kw_name_47 );
        Py_DECREF( tmp_dict_value_233 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 660;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_253 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_253 == NULL ))
    {
        tmp_args_element_name_253 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_253 == NULL )
    {
        Py_DECREF( tmp_called_name_385 );
        Py_DECREF( tmp_kw_name_47 );
        Py_DECREF( tmp_dict_value_233 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 660;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 660;
    {
        PyObject *call_args[] = { tmp_args_element_name_253 };
        tmp_list_element_43 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_386, call_args );
    }

    if ( tmp_list_element_43 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_385 );
        Py_DECREF( tmp_kw_name_47 );
        Py_DECREF( tmp_dict_value_233 );

        exception_lineno = 660;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_233, 2, tmp_list_element_43 );
    tmp_dict_key_233 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_47, tmp_dict_key_233, tmp_dict_value_233 );
    Py_DECREF( tmp_dict_value_233 );
    tmp_dict_value_234 = const_str_digest_0e0a6e889f304be9faaaf4c9c58e53e6;
    tmp_dict_key_234 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_47, tmp_dict_key_234, tmp_dict_value_234 );
    tmp_dict_value_235 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_empty_list );
    tmp_dict_key_235 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_47, tmp_dict_key_235, tmp_dict_value_235 );
    Py_DECREF( tmp_dict_value_235 );
    frame_module->f_lineno = 662;
    tmp_assign_source_330 = CALL_FUNCTION( tmp_called_name_385, tmp_args_name_47, tmp_kw_name_47 );
    Py_DECREF( tmp_called_name_385 );
    Py_DECREF( tmp_kw_name_47 );
    if ( tmp_assign_source_330 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 662;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglSetGammaTableParametersI3D, tmp_assign_source_330 );
    tmp_assign_source_331 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_ushort );

    if (unlikely( tmp_assign_source_331 == NULL ))
    {
        tmp_assign_source_331 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_ushort );
    }

    if ( tmp_assign_source_331 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_ushort" );
        exception_tb = NULL;

        exception_lineno = 665;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT, tmp_assign_source_331 );
    tmp_source_name_312 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_312 == NULL ))
    {
        tmp_source_name_312 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_312 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 666;
        goto frame_exception_exit_1;
    }

    tmp_called_name_387 = LOOKUP_ATTRIBUTE( tmp_source_name_312, const_str_plain_createBaseFunction );
    if ( tmp_called_name_387 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 666;
        goto frame_exception_exit_1;
    }
    tmp_args_name_48 = const_tuple_str_plain_wglGetGammaTableI3D_tuple;
    tmp_kw_name_48 = _PyDict_NewPresized( 5 );
    tmp_source_name_313 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_313 == NULL ))
    {
        tmp_source_name_313 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_313 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 667;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_236 = LOOKUP_ATTRIBUTE( tmp_source_name_313, const_str_plain_GL );
    if ( tmp_dict_value_236 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );

        exception_lineno = 667;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_236 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_48, tmp_dict_key_236, tmp_dict_value_236 );
    Py_DECREF( tmp_dict_value_236 );
    tmp_dict_value_237 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_237 == NULL ))
    {
        tmp_dict_value_237 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_237 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 667;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_237 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_48, tmp_dict_key_237, tmp_dict_value_237 );
    tmp_dict_value_238 = PyList_New( 5 );
    tmp_list_element_44 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_44 == NULL ))
    {
        tmp_list_element_44 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_44 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_44 );
    PyList_SET_ITEM( tmp_dict_value_238, 0, tmp_list_element_44 );
    tmp_list_element_44 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_44 == NULL ))
    {
        tmp_list_element_44 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_44 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_44 );
    PyList_SET_ITEM( tmp_dict_value_238, 1, tmp_list_element_44 );
    tmp_called_name_388 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_388 == NULL ))
    {
        tmp_called_name_388 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_388 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_254 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_254 == NULL ))
    {
        tmp_args_element_name_254 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_254 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 668;
    {
        PyObject *call_args[] = { tmp_args_element_name_254 };
        tmp_list_element_44 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_388, call_args );
    }

    if ( tmp_list_element_44 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_238, 2, tmp_list_element_44 );
    tmp_called_name_389 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_389 == NULL ))
    {
        tmp_called_name_389 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_389 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_255 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_255 == NULL ))
    {
        tmp_args_element_name_255 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_255 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 668;
    {
        PyObject *call_args[] = { tmp_args_element_name_255 };
        tmp_list_element_44 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_389, call_args );
    }

    if ( tmp_list_element_44 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_238, 3, tmp_list_element_44 );
    tmp_called_name_390 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_390 == NULL ))
    {
        tmp_called_name_390 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_390 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_256 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_256 == NULL ))
    {
        tmp_args_element_name_256 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_256 == NULL )
    {
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 668;
    {
        PyObject *call_args[] = { tmp_args_element_name_256 };
        tmp_list_element_44 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_390, call_args );
    }

    if ( tmp_list_element_44 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_387 );
        Py_DECREF( tmp_kw_name_48 );
        Py_DECREF( tmp_dict_value_238 );

        exception_lineno = 668;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_238, 4, tmp_list_element_44 );
    tmp_dict_key_238 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_48, tmp_dict_key_238, tmp_dict_value_238 );
    Py_DECREF( tmp_dict_value_238 );
    tmp_dict_value_239 = const_str_digest_135f509eb5212c158ec600e2a4ff13b0;
    tmp_dict_key_239 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_48, tmp_dict_key_239, tmp_dict_value_239 );
    tmp_dict_value_240 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_empty_str_empty_str_empty_list );
    tmp_dict_key_240 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_48, tmp_dict_key_240, tmp_dict_value_240 );
    Py_DECREF( tmp_dict_value_240 );
    frame_module->f_lineno = 670;
    tmp_assign_source_332 = CALL_FUNCTION( tmp_called_name_387, tmp_args_name_48, tmp_kw_name_48 );
    Py_DECREF( tmp_called_name_387 );
    Py_DECREF( tmp_kw_name_48 );
    if ( tmp_assign_source_332 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 670;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetGammaTableI3D, tmp_assign_source_332 );
    tmp_source_name_314 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_314 == NULL ))
    {
        tmp_source_name_314 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_314 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 673;
        goto frame_exception_exit_1;
    }

    tmp_called_name_391 = LOOKUP_ATTRIBUTE( tmp_source_name_314, const_str_plain_createBaseFunction );
    if ( tmp_called_name_391 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 673;
        goto frame_exception_exit_1;
    }
    tmp_args_name_49 = const_tuple_str_plain_wglSetGammaTableI3D_tuple;
    tmp_kw_name_49 = _PyDict_NewPresized( 5 );
    tmp_source_name_315 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_315 == NULL ))
    {
        tmp_source_name_315 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_315 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 674;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_241 = LOOKUP_ATTRIBUTE( tmp_source_name_315, const_str_plain_GL );
    if ( tmp_dict_value_241 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );

        exception_lineno = 674;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_241 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_49, tmp_dict_key_241, tmp_dict_value_241 );
    Py_DECREF( tmp_dict_value_241 );
    tmp_dict_value_242 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_242 == NULL ))
    {
        tmp_dict_value_242 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_242 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 674;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_242 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_49, tmp_dict_key_242, tmp_dict_value_242 );
    tmp_dict_value_243 = PyList_New( 5 );
    tmp_list_element_45 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_45 == NULL ))
    {
        tmp_list_element_45 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_45 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_45 );
    PyList_SET_ITEM( tmp_dict_value_243, 0, tmp_list_element_45 );
    tmp_list_element_45 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_list_element_45 == NULL ))
    {
        tmp_list_element_45 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_list_element_45 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_45 );
    PyList_SET_ITEM( tmp_dict_value_243, 1, tmp_list_element_45 );
    tmp_called_name_392 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_392 == NULL ))
    {
        tmp_called_name_392 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_392 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_257 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_257 == NULL ))
    {
        tmp_args_element_name_257 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_257 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 675;
    {
        PyObject *call_args[] = { tmp_args_element_name_257 };
        tmp_list_element_45 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_392, call_args );
    }

    if ( tmp_list_element_45 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_243, 2, tmp_list_element_45 );
    tmp_called_name_393 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_393 == NULL ))
    {
        tmp_called_name_393 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_393 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_258 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_258 == NULL ))
    {
        tmp_args_element_name_258 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_258 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 675;
    {
        PyObject *call_args[] = { tmp_args_element_name_258 };
        tmp_list_element_45 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_393, call_args );
    }

    if ( tmp_list_element_45 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_243, 3, tmp_list_element_45 );
    tmp_called_name_394 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_394 == NULL ))
    {
        tmp_called_name_394 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_394 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_259 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_259 == NULL ))
    {
        tmp_args_element_name_259 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_259 == NULL )
    {
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 675;
    {
        PyObject *call_args[] = { tmp_args_element_name_259 };
        tmp_list_element_45 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_394, call_args );
    }

    if ( tmp_list_element_45 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_391 );
        Py_DECREF( tmp_kw_name_49 );
        Py_DECREF( tmp_dict_value_243 );

        exception_lineno = 675;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_243, 4, tmp_list_element_45 );
    tmp_dict_key_243 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_49, tmp_dict_key_243, tmp_dict_value_243 );
    Py_DECREF( tmp_dict_value_243 );
    tmp_dict_value_244 = const_str_digest_57a4dac7a81a37d797657617390058fb;
    tmp_dict_key_244 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_49, tmp_dict_key_244, tmp_dict_value_244 );
    tmp_dict_value_245 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_empty_str_empty_str_empty_list );
    tmp_dict_key_245 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_49, tmp_dict_key_245, tmp_dict_value_245 );
    Py_DECREF( tmp_dict_value_245 );
    frame_module->f_lineno = 677;
    tmp_assign_source_333 = CALL_FUNCTION( tmp_called_name_391, tmp_args_name_49, tmp_kw_name_49 );
    Py_DECREF( tmp_called_name_391 );
    Py_DECREF( tmp_kw_name_49 );
    if ( tmp_assign_source_333 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 677;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglSetGammaTableI3D, tmp_assign_source_333 );
    tmp_called_name_395 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_395 == NULL ))
    {
        tmp_called_name_395 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_395 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 680;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_260 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_260 == NULL ))
    {
        tmp_args_element_name_260 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_260 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 680;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_261 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_261 == NULL ))
    {
        tmp_args_element_name_261 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_261 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 680;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_262 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_262 == NULL ))
    {
        tmp_args_element_name_262 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_262 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 680;
        goto frame_exception_exit_1;
    }

    tmp_called_name_396 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_396 == NULL ))
    {
        tmp_called_name_396 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_396 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 680;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_264 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_264 == NULL ))
    {
        tmp_args_element_name_264 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_264 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 680;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 680;
    {
        PyObject *call_args[] = { tmp_args_element_name_264 };
        tmp_args_element_name_263 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_396, call_args );
    }

    if ( tmp_args_element_name_263 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 680;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 680;
    {
        PyObject *call_args[] = { tmp_args_element_name_260, tmp_args_element_name_261, tmp_args_element_name_262, tmp_args_element_name_263 };
        tmp_assign_source_334 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_395, call_args );
    }

    Py_DECREF( tmp_args_element_name_263 );
    if ( tmp_assign_source_334 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 680;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETGAMMATABLEPARAMETERSI3DPROC, tmp_assign_source_334 );
    tmp_called_name_397 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_397 == NULL ))
    {
        tmp_called_name_397 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_397 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 681;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_265 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_265 == NULL ))
    {
        tmp_args_element_name_265 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_265 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 681;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_266 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_266 == NULL ))
    {
        tmp_args_element_name_266 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_266 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 681;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_267 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_267 == NULL ))
    {
        tmp_args_element_name_267 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_267 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 681;
        goto frame_exception_exit_1;
    }

    tmp_called_name_398 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_398 == NULL ))
    {
        tmp_called_name_398 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_398 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 681;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_269 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_269 == NULL ))
    {
        tmp_args_element_name_269 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_269 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 681;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 681;
    {
        PyObject *call_args[] = { tmp_args_element_name_269 };
        tmp_args_element_name_268 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_398, call_args );
    }

    if ( tmp_args_element_name_268 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 681;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 681;
    {
        PyObject *call_args[] = { tmp_args_element_name_265, tmp_args_element_name_266, tmp_args_element_name_267, tmp_args_element_name_268 };
        tmp_assign_source_335 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_397, call_args );
    }

    Py_DECREF( tmp_args_element_name_268 );
    if ( tmp_assign_source_335 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 681;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLSETGAMMATABLEPARAMETERSI3DPROC, tmp_assign_source_335 );
    tmp_called_name_399 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_399 == NULL ))
    {
        tmp_called_name_399 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_399 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_270 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_270 == NULL ))
    {
        tmp_args_element_name_270 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_270 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_271 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_271 == NULL ))
    {
        tmp_args_element_name_271 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_271 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_272 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_272 == NULL ))
    {
        tmp_args_element_name_272 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_272 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    tmp_called_name_400 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_400 == NULL ))
    {
        tmp_called_name_400 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_400 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_274 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_274 == NULL ))
    {
        tmp_args_element_name_274 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_274 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 682;
    {
        PyObject *call_args[] = { tmp_args_element_name_274 };
        tmp_args_element_name_273 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_400, call_args );
    }

    if ( tmp_args_element_name_273 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 682;
        goto frame_exception_exit_1;
    }
    tmp_called_name_401 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_401 == NULL ))
    {
        tmp_called_name_401 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_401 == NULL )
    {
        Py_DECREF( tmp_args_element_name_273 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_276 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_276 == NULL ))
    {
        tmp_args_element_name_276 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_276 == NULL )
    {
        Py_DECREF( tmp_args_element_name_273 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 682;
    {
        PyObject *call_args[] = { tmp_args_element_name_276 };
        tmp_args_element_name_275 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_401, call_args );
    }

    if ( tmp_args_element_name_275 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_273 );

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }
    tmp_called_name_402 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_402 == NULL ))
    {
        tmp_called_name_402 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_402 == NULL )
    {
        Py_DECREF( tmp_args_element_name_273 );
        Py_DECREF( tmp_args_element_name_275 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_278 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_278 == NULL ))
    {
        tmp_args_element_name_278 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_278 == NULL )
    {
        Py_DECREF( tmp_args_element_name_273 );
        Py_DECREF( tmp_args_element_name_275 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 682;
    {
        PyObject *call_args[] = { tmp_args_element_name_278 };
        tmp_args_element_name_277 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_402, call_args );
    }

    if ( tmp_args_element_name_277 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_273 );
        Py_DECREF( tmp_args_element_name_275 );

        exception_lineno = 682;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 682;
    {
        PyObject *call_args[] = { tmp_args_element_name_270, tmp_args_element_name_271, tmp_args_element_name_272, tmp_args_element_name_273, tmp_args_element_name_275, tmp_args_element_name_277 };
        tmp_assign_source_336 = CALL_FUNCTION_WITH_ARGS6( tmp_called_name_399, call_args );
    }

    Py_DECREF( tmp_args_element_name_273 );
    Py_DECREF( tmp_args_element_name_275 );
    Py_DECREF( tmp_args_element_name_277 );
    if ( tmp_assign_source_336 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 682;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETGAMMATABLEI3DPROC, tmp_assign_source_336 );
    tmp_called_name_403 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_403 == NULL ))
    {
        tmp_called_name_403 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_403 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_279 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_279 == NULL ))
    {
        tmp_args_element_name_279 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_279 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_280 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_280 == NULL ))
    {
        tmp_args_element_name_280 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_280 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_281 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_int );

    if (unlikely( tmp_args_element_name_281 == NULL ))
    {
        tmp_args_element_name_281 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_int );
    }

    if ( tmp_args_element_name_281 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_int" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    tmp_called_name_404 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_404 == NULL ))
    {
        tmp_called_name_404 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_404 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_283 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_283 == NULL ))
    {
        tmp_args_element_name_283 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_283 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 683;
    {
        PyObject *call_args[] = { tmp_args_element_name_283 };
        tmp_args_element_name_282 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_404, call_args );
    }

    if ( tmp_args_element_name_282 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 683;
        goto frame_exception_exit_1;
    }
    tmp_called_name_405 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_405 == NULL ))
    {
        tmp_called_name_405 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_405 == NULL )
    {
        Py_DECREF( tmp_args_element_name_282 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_285 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_285 == NULL ))
    {
        tmp_args_element_name_285 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_285 == NULL )
    {
        Py_DECREF( tmp_args_element_name_282 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 683;
    {
        PyObject *call_args[] = { tmp_args_element_name_285 };
        tmp_args_element_name_284 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_405, call_args );
    }

    if ( tmp_args_element_name_284 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_282 );

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }
    tmp_called_name_406 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_406 == NULL ))
    {
        tmp_called_name_406 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_406 == NULL )
    {
        Py_DECREF( tmp_args_element_name_282 );
        Py_DECREF( tmp_args_element_name_284 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_287 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_USHORT );

    if (unlikely( tmp_args_element_name_287 == NULL ))
    {
        tmp_args_element_name_287 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_USHORT );
    }

    if ( tmp_args_element_name_287 == NULL )
    {
        Py_DECREF( tmp_args_element_name_282 );
        Py_DECREF( tmp_args_element_name_284 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "USHORT" );
        exception_tb = NULL;

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 683;
    {
        PyObject *call_args[] = { tmp_args_element_name_287 };
        tmp_args_element_name_286 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_406, call_args );
    }

    if ( tmp_args_element_name_286 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_282 );
        Py_DECREF( tmp_args_element_name_284 );

        exception_lineno = 683;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 683;
    {
        PyObject *call_args[] = { tmp_args_element_name_279, tmp_args_element_name_280, tmp_args_element_name_281, tmp_args_element_name_282, tmp_args_element_name_284, tmp_args_element_name_286 };
        tmp_assign_source_337 = CALL_FUNCTION_WITH_ARGS6( tmp_called_name_403, call_args );
    }

    Py_DECREF( tmp_args_element_name_282 );
    Py_DECREF( tmp_args_element_name_284 );
    Py_DECREF( tmp_args_element_name_286 );
    if ( tmp_assign_source_337 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 683;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLSETGAMMATABLEI3DPROC, tmp_assign_source_337 );
    tmp_source_name_316 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_316 == NULL ))
    {
        tmp_source_name_316 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_316 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 685;
        goto frame_exception_exit_1;
    }

    tmp_called_name_407 = LOOKUP_ATTRIBUTE( tmp_source_name_316, const_str_plain_Constant );
    if ( tmp_called_name_407 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 685;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 685;
    tmp_assign_source_338 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_407, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_I3D_genlock_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_407 );
    if ( tmp_assign_source_338 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 685;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_I3D_genlock, tmp_assign_source_338 );
    tmp_source_name_317 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_317 == NULL ))
    {
        tmp_source_name_317 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_317 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 686;
        goto frame_exception_exit_1;
    }

    tmp_called_name_408 = LOOKUP_ATTRIBUTE( tmp_source_name_317, const_str_plain_createBaseFunction );
    if ( tmp_called_name_408 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 686;
        goto frame_exception_exit_1;
    }
    tmp_args_name_50 = const_tuple_str_plain_wglEnableGenlockI3D_tuple;
    tmp_kw_name_50 = _PyDict_NewPresized( 5 );
    tmp_source_name_318 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_318 == NULL ))
    {
        tmp_source_name_318 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_318 == NULL )
    {
        Py_DECREF( tmp_called_name_408 );
        Py_DECREF( tmp_kw_name_50 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 687;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_246 = LOOKUP_ATTRIBUTE( tmp_source_name_318, const_str_plain_GL );
    if ( tmp_dict_value_246 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_408 );
        Py_DECREF( tmp_kw_name_50 );

        exception_lineno = 687;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_246 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_50, tmp_dict_key_246, tmp_dict_value_246 );
    Py_DECREF( tmp_dict_value_246 );
    tmp_dict_value_247 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_247 == NULL ))
    {
        tmp_dict_value_247 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_247 == NULL )
    {
        Py_DECREF( tmp_called_name_408 );
        Py_DECREF( tmp_kw_name_50 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 687;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_247 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_50, tmp_dict_key_247, tmp_dict_value_247 );
    tmp_dict_value_248 = PyList_New( 1 );
    tmp_list_element_46 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_46 == NULL ))
    {
        tmp_list_element_46 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_46 == NULL )
    {
        Py_DECREF( tmp_called_name_408 );
        Py_DECREF( tmp_kw_name_50 );
        Py_DECREF( tmp_dict_value_248 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 688;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_46 );
    PyList_SET_ITEM( tmp_dict_value_248, 0, tmp_list_element_46 );
    tmp_dict_key_248 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_50, tmp_dict_key_248, tmp_dict_value_248 );
    Py_DECREF( tmp_dict_value_248 );
    tmp_dict_value_249 = const_str_digest_6b6ebd8fd99913bd76f45252271f4694;
    tmp_dict_key_249 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_50, tmp_dict_key_249, tmp_dict_value_249 );
    tmp_dict_value_250 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_250 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_50, tmp_dict_key_250, tmp_dict_value_250 );
    Py_DECREF( tmp_dict_value_250 );
    frame_module->f_lineno = 690;
    tmp_assign_source_339 = CALL_FUNCTION( tmp_called_name_408, tmp_args_name_50, tmp_kw_name_50 );
    Py_DECREF( tmp_called_name_408 );
    Py_DECREF( tmp_kw_name_50 );
    if ( tmp_assign_source_339 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 690;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglEnableGenlockI3D, tmp_assign_source_339 );
    tmp_source_name_319 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_319 == NULL ))
    {
        tmp_source_name_319 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_319 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 693;
        goto frame_exception_exit_1;
    }

    tmp_called_name_409 = LOOKUP_ATTRIBUTE( tmp_source_name_319, const_str_plain_createBaseFunction );
    if ( tmp_called_name_409 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 693;
        goto frame_exception_exit_1;
    }
    tmp_args_name_51 = const_tuple_str_plain_wglDisableGenlockI3D_tuple;
    tmp_kw_name_51 = _PyDict_NewPresized( 5 );
    tmp_source_name_320 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_320 == NULL ))
    {
        tmp_source_name_320 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_320 == NULL )
    {
        Py_DECREF( tmp_called_name_409 );
        Py_DECREF( tmp_kw_name_51 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 694;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_251 = LOOKUP_ATTRIBUTE( tmp_source_name_320, const_str_plain_GL );
    if ( tmp_dict_value_251 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_409 );
        Py_DECREF( tmp_kw_name_51 );

        exception_lineno = 694;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_251 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_51, tmp_dict_key_251, tmp_dict_value_251 );
    Py_DECREF( tmp_dict_value_251 );
    tmp_dict_value_252 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_252 == NULL ))
    {
        tmp_dict_value_252 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_252 == NULL )
    {
        Py_DECREF( tmp_called_name_409 );
        Py_DECREF( tmp_kw_name_51 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 694;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_252 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_51, tmp_dict_key_252, tmp_dict_value_252 );
    tmp_dict_value_253 = PyList_New( 1 );
    tmp_list_element_47 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_47 == NULL ))
    {
        tmp_list_element_47 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_47 == NULL )
    {
        Py_DECREF( tmp_called_name_409 );
        Py_DECREF( tmp_kw_name_51 );
        Py_DECREF( tmp_dict_value_253 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 695;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_47 );
    PyList_SET_ITEM( tmp_dict_value_253, 0, tmp_list_element_47 );
    tmp_dict_key_253 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_51, tmp_dict_key_253, tmp_dict_value_253 );
    Py_DECREF( tmp_dict_value_253 );
    tmp_dict_value_254 = const_str_digest_910d441ded1723734fe2a6311f3ac35c;
    tmp_dict_key_254 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_51, tmp_dict_key_254, tmp_dict_value_254 );
    tmp_dict_value_255 = LIST_COPY( const_list_str_plain_None_list );
    tmp_dict_key_255 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_51, tmp_dict_key_255, tmp_dict_value_255 );
    Py_DECREF( tmp_dict_value_255 );
    frame_module->f_lineno = 697;
    tmp_assign_source_340 = CALL_FUNCTION( tmp_called_name_409, tmp_args_name_51, tmp_kw_name_51 );
    Py_DECREF( tmp_called_name_409 );
    Py_DECREF( tmp_kw_name_51 );
    if ( tmp_assign_source_340 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 697;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglDisableGenlockI3D, tmp_assign_source_340 );
    tmp_source_name_321 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_321 == NULL ))
    {
        tmp_source_name_321 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_321 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 700;
        goto frame_exception_exit_1;
    }

    tmp_called_name_410 = LOOKUP_ATTRIBUTE( tmp_source_name_321, const_str_plain_createBaseFunction );
    if ( tmp_called_name_410 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 700;
        goto frame_exception_exit_1;
    }
    tmp_args_name_52 = const_tuple_str_plain_wglIsEnabledGenlockI3D_tuple;
    tmp_kw_name_52 = _PyDict_NewPresized( 5 );
    tmp_source_name_322 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_322 == NULL ))
    {
        tmp_source_name_322 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_322 == NULL )
    {
        Py_DECREF( tmp_called_name_410 );
        Py_DECREF( tmp_kw_name_52 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 701;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_256 = LOOKUP_ATTRIBUTE( tmp_source_name_322, const_str_plain_GL );
    if ( tmp_dict_value_256 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_410 );
        Py_DECREF( tmp_kw_name_52 );

        exception_lineno = 701;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_256 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_52, tmp_dict_key_256, tmp_dict_value_256 );
    Py_DECREF( tmp_dict_value_256 );
    tmp_dict_value_257 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_257 == NULL ))
    {
        tmp_dict_value_257 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_257 == NULL )
    {
        Py_DECREF( tmp_called_name_410 );
        Py_DECREF( tmp_kw_name_52 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 701;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_257 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_52, tmp_dict_key_257, tmp_dict_value_257 );
    tmp_dict_value_258 = PyList_New( 2 );
    tmp_list_element_48 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_48 == NULL ))
    {
        tmp_list_element_48 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_48 == NULL )
    {
        Py_DECREF( tmp_called_name_410 );
        Py_DECREF( tmp_kw_name_52 );
        Py_DECREF( tmp_dict_value_258 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 702;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_48 );
    PyList_SET_ITEM( tmp_dict_value_258, 0, tmp_list_element_48 );
    tmp_called_name_411 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_411 == NULL ))
    {
        tmp_called_name_411 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_411 == NULL )
    {
        Py_DECREF( tmp_called_name_410 );
        Py_DECREF( tmp_kw_name_52 );
        Py_DECREF( tmp_dict_value_258 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 702;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_288 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_288 == NULL ))
    {
        tmp_args_element_name_288 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_288 == NULL )
    {
        Py_DECREF( tmp_called_name_410 );
        Py_DECREF( tmp_kw_name_52 );
        Py_DECREF( tmp_dict_value_258 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 702;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 702;
    {
        PyObject *call_args[] = { tmp_args_element_name_288 };
        tmp_list_element_48 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_411, call_args );
    }

    if ( tmp_list_element_48 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_410 );
        Py_DECREF( tmp_kw_name_52 );
        Py_DECREF( tmp_dict_value_258 );

        exception_lineno = 702;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_258, 1, tmp_list_element_48 );
    tmp_dict_key_258 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_52, tmp_dict_key_258, tmp_dict_value_258 );
    Py_DECREF( tmp_dict_value_258 );
    tmp_dict_value_259 = const_str_digest_67702bb336b9da66d71c400c912f5922;
    tmp_dict_key_259 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_52, tmp_dict_key_259, tmp_dict_value_259 );
    tmp_dict_value_260 = LIST_COPY( const_list_str_plain_None_str_empty_list );
    tmp_dict_key_260 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_52, tmp_dict_key_260, tmp_dict_value_260 );
    Py_DECREF( tmp_dict_value_260 );
    frame_module->f_lineno = 704;
    tmp_assign_source_341 = CALL_FUNCTION( tmp_called_name_410, tmp_args_name_52, tmp_kw_name_52 );
    Py_DECREF( tmp_called_name_410 );
    Py_DECREF( tmp_kw_name_52 );
    if ( tmp_assign_source_341 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 704;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglIsEnabledGenlockI3D, tmp_assign_source_341 );
    tmp_source_name_323 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_323 == NULL ))
    {
        tmp_source_name_323 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_323 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 707;
        goto frame_exception_exit_1;
    }

    tmp_called_name_412 = LOOKUP_ATTRIBUTE( tmp_source_name_323, const_str_plain_createBaseFunction );
    if ( tmp_called_name_412 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 707;
        goto frame_exception_exit_1;
    }
    tmp_args_name_53 = const_tuple_str_plain_wglGenlockSourceI3D_tuple;
    tmp_kw_name_53 = _PyDict_NewPresized( 5 );
    tmp_source_name_324 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_324 == NULL ))
    {
        tmp_source_name_324 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_324 == NULL )
    {
        Py_DECREF( tmp_called_name_412 );
        Py_DECREF( tmp_kw_name_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 708;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_261 = LOOKUP_ATTRIBUTE( tmp_source_name_324, const_str_plain_GL );
    if ( tmp_dict_value_261 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_412 );
        Py_DECREF( tmp_kw_name_53 );

        exception_lineno = 708;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_261 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_53, tmp_dict_key_261, tmp_dict_value_261 );
    Py_DECREF( tmp_dict_value_261 );
    tmp_dict_value_262 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_262 == NULL ))
    {
        tmp_dict_value_262 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_262 == NULL )
    {
        Py_DECREF( tmp_called_name_412 );
        Py_DECREF( tmp_kw_name_53 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 708;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_262 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_53, tmp_dict_key_262, tmp_dict_value_262 );
    tmp_dict_value_263 = PyList_New( 2 );
    tmp_list_element_49 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_49 == NULL ))
    {
        tmp_list_element_49 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_49 == NULL )
    {
        Py_DECREF( tmp_called_name_412 );
        Py_DECREF( tmp_kw_name_53 );
        Py_DECREF( tmp_dict_value_263 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 709;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_49 );
    PyList_SET_ITEM( tmp_dict_value_263, 0, tmp_list_element_49 );
    tmp_list_element_49 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_49 == NULL ))
    {
        tmp_list_element_49 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_49 == NULL )
    {
        Py_DECREF( tmp_called_name_412 );
        Py_DECREF( tmp_kw_name_53 );
        Py_DECREF( tmp_dict_value_263 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 709;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_49 );
    PyList_SET_ITEM( tmp_dict_value_263, 1, tmp_list_element_49 );
    tmp_dict_key_263 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_53, tmp_dict_key_263, tmp_dict_value_263 );
    Py_DECREF( tmp_dict_value_263 );
    tmp_dict_value_264 = const_str_digest_62f10c8ecf2475a2f7641cffcfafbff5;
    tmp_dict_key_264 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_53, tmp_dict_key_264, tmp_dict_value_264 );
    tmp_dict_value_265 = LIST_COPY( const_list_str_plain_None_str_plain_None_list );
    tmp_dict_key_265 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_53, tmp_dict_key_265, tmp_dict_value_265 );
    Py_DECREF( tmp_dict_value_265 );
    frame_module->f_lineno = 711;
    tmp_assign_source_342 = CALL_FUNCTION( tmp_called_name_412, tmp_args_name_53, tmp_kw_name_53 );
    Py_DECREF( tmp_called_name_412 );
    Py_DECREF( tmp_kw_name_53 );
    if ( tmp_assign_source_342 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 711;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGenlockSourceI3D, tmp_assign_source_342 );
    tmp_source_name_325 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_325 == NULL ))
    {
        tmp_source_name_325 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_325 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 714;
        goto frame_exception_exit_1;
    }

    tmp_called_name_413 = LOOKUP_ATTRIBUTE( tmp_source_name_325, const_str_plain_createBaseFunction );
    if ( tmp_called_name_413 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 714;
        goto frame_exception_exit_1;
    }
    tmp_args_name_54 = const_tuple_str_plain_wglGetGenlockSourceI3D_tuple;
    tmp_kw_name_54 = _PyDict_NewPresized( 5 );
    tmp_source_name_326 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_326 == NULL ))
    {
        tmp_source_name_326 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_326 == NULL )
    {
        Py_DECREF( tmp_called_name_413 );
        Py_DECREF( tmp_kw_name_54 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 715;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_266 = LOOKUP_ATTRIBUTE( tmp_source_name_326, const_str_plain_GL );
    if ( tmp_dict_value_266 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_413 );
        Py_DECREF( tmp_kw_name_54 );

        exception_lineno = 715;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_266 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_54, tmp_dict_key_266, tmp_dict_value_266 );
    Py_DECREF( tmp_dict_value_266 );
    tmp_dict_value_267 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_267 == NULL ))
    {
        tmp_dict_value_267 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_267 == NULL )
    {
        Py_DECREF( tmp_called_name_413 );
        Py_DECREF( tmp_kw_name_54 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 715;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_267 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_54, tmp_dict_key_267, tmp_dict_value_267 );
    tmp_dict_value_268 = PyList_New( 2 );
    tmp_list_element_50 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_50 == NULL ))
    {
        tmp_list_element_50 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_50 == NULL )
    {
        Py_DECREF( tmp_called_name_413 );
        Py_DECREF( tmp_kw_name_54 );
        Py_DECREF( tmp_dict_value_268 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 716;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_50 );
    PyList_SET_ITEM( tmp_dict_value_268, 0, tmp_list_element_50 );
    tmp_called_name_414 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_414 == NULL ))
    {
        tmp_called_name_414 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_414 == NULL )
    {
        Py_DECREF( tmp_called_name_413 );
        Py_DECREF( tmp_kw_name_54 );
        Py_DECREF( tmp_dict_value_268 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 716;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_289 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_289 == NULL ))
    {
        tmp_args_element_name_289 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_289 == NULL )
    {
        Py_DECREF( tmp_called_name_413 );
        Py_DECREF( tmp_kw_name_54 );
        Py_DECREF( tmp_dict_value_268 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 716;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 716;
    {
        PyObject *call_args[] = { tmp_args_element_name_289 };
        tmp_list_element_50 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_414, call_args );
    }

    if ( tmp_list_element_50 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_413 );
        Py_DECREF( tmp_kw_name_54 );
        Py_DECREF( tmp_dict_value_268 );

        exception_lineno = 716;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_268, 1, tmp_list_element_50 );
    tmp_dict_key_268 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_54, tmp_dict_key_268, tmp_dict_value_268 );
    Py_DECREF( tmp_dict_value_268 );
    tmp_dict_value_269 = const_str_digest_a7288785cad162ee066e757eb0fb8231;
    tmp_dict_key_269 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_54, tmp_dict_key_269, tmp_dict_value_269 );
    tmp_dict_value_270 = LIST_COPY( const_list_str_plain_None_str_empty_list );
    tmp_dict_key_270 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_54, tmp_dict_key_270, tmp_dict_value_270 );
    Py_DECREF( tmp_dict_value_270 );
    frame_module->f_lineno = 718;
    tmp_assign_source_343 = CALL_FUNCTION( tmp_called_name_413, tmp_args_name_54, tmp_kw_name_54 );
    Py_DECREF( tmp_called_name_413 );
    Py_DECREF( tmp_kw_name_54 );
    if ( tmp_assign_source_343 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 718;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetGenlockSourceI3D, tmp_assign_source_343 );
    tmp_source_name_327 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_327 == NULL ))
    {
        tmp_source_name_327 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_327 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 721;
        goto frame_exception_exit_1;
    }

    tmp_called_name_415 = LOOKUP_ATTRIBUTE( tmp_source_name_327, const_str_plain_createBaseFunction );
    if ( tmp_called_name_415 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 721;
        goto frame_exception_exit_1;
    }
    tmp_args_name_55 = const_tuple_str_plain_wglGenlockSourceEdgeI3D_tuple;
    tmp_kw_name_55 = _PyDict_NewPresized( 5 );
    tmp_source_name_328 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_328 == NULL ))
    {
        tmp_source_name_328 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_328 == NULL )
    {
        Py_DECREF( tmp_called_name_415 );
        Py_DECREF( tmp_kw_name_55 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 722;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_271 = LOOKUP_ATTRIBUTE( tmp_source_name_328, const_str_plain_GL );
    if ( tmp_dict_value_271 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_415 );
        Py_DECREF( tmp_kw_name_55 );

        exception_lineno = 722;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_271 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_55, tmp_dict_key_271, tmp_dict_value_271 );
    Py_DECREF( tmp_dict_value_271 );
    tmp_dict_value_272 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_272 == NULL ))
    {
        tmp_dict_value_272 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_272 == NULL )
    {
        Py_DECREF( tmp_called_name_415 );
        Py_DECREF( tmp_kw_name_55 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 722;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_272 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_55, tmp_dict_key_272, tmp_dict_value_272 );
    tmp_dict_value_273 = PyList_New( 2 );
    tmp_list_element_51 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_51 == NULL ))
    {
        tmp_list_element_51 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_51 == NULL )
    {
        Py_DECREF( tmp_called_name_415 );
        Py_DECREF( tmp_kw_name_55 );
        Py_DECREF( tmp_dict_value_273 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 723;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_51 );
    PyList_SET_ITEM( tmp_dict_value_273, 0, tmp_list_element_51 );
    tmp_list_element_51 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_51 == NULL ))
    {
        tmp_list_element_51 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_51 == NULL )
    {
        Py_DECREF( tmp_called_name_415 );
        Py_DECREF( tmp_kw_name_55 );
        Py_DECREF( tmp_dict_value_273 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 723;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_51 );
    PyList_SET_ITEM( tmp_dict_value_273, 1, tmp_list_element_51 );
    tmp_dict_key_273 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_55, tmp_dict_key_273, tmp_dict_value_273 );
    Py_DECREF( tmp_dict_value_273 );
    tmp_dict_value_274 = const_str_digest_9218e564c09403cf3bd4116428af775b;
    tmp_dict_key_274 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_55, tmp_dict_key_274, tmp_dict_value_274 );
    tmp_dict_value_275 = LIST_COPY( const_list_str_plain_None_str_plain_None_list );
    tmp_dict_key_275 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_55, tmp_dict_key_275, tmp_dict_value_275 );
    Py_DECREF( tmp_dict_value_275 );
    frame_module->f_lineno = 725;
    tmp_assign_source_344 = CALL_FUNCTION( tmp_called_name_415, tmp_args_name_55, tmp_kw_name_55 );
    Py_DECREF( tmp_called_name_415 );
    Py_DECREF( tmp_kw_name_55 );
    if ( tmp_assign_source_344 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 725;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGenlockSourceEdgeI3D, tmp_assign_source_344 );
    tmp_source_name_329 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_329 == NULL ))
    {
        tmp_source_name_329 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_329 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 728;
        goto frame_exception_exit_1;
    }

    tmp_called_name_416 = LOOKUP_ATTRIBUTE( tmp_source_name_329, const_str_plain_createBaseFunction );
    if ( tmp_called_name_416 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 728;
        goto frame_exception_exit_1;
    }
    tmp_args_name_56 = const_tuple_str_plain_wglGetGenlockSourceEdgeI3D_tuple;
    tmp_kw_name_56 = _PyDict_NewPresized( 5 );
    tmp_source_name_330 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_330 == NULL ))
    {
        tmp_source_name_330 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_330 == NULL )
    {
        Py_DECREF( tmp_called_name_416 );
        Py_DECREF( tmp_kw_name_56 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 729;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_276 = LOOKUP_ATTRIBUTE( tmp_source_name_330, const_str_plain_GL );
    if ( tmp_dict_value_276 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_416 );
        Py_DECREF( tmp_kw_name_56 );

        exception_lineno = 729;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_276 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_56, tmp_dict_key_276, tmp_dict_value_276 );
    Py_DECREF( tmp_dict_value_276 );
    tmp_dict_value_277 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_277 == NULL ))
    {
        tmp_dict_value_277 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_277 == NULL )
    {
        Py_DECREF( tmp_called_name_416 );
        Py_DECREF( tmp_kw_name_56 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 729;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_277 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_56, tmp_dict_key_277, tmp_dict_value_277 );
    tmp_dict_value_278 = PyList_New( 2 );
    tmp_list_element_52 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_52 == NULL ))
    {
        tmp_list_element_52 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_52 == NULL )
    {
        Py_DECREF( tmp_called_name_416 );
        Py_DECREF( tmp_kw_name_56 );
        Py_DECREF( tmp_dict_value_278 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 730;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_52 );
    PyList_SET_ITEM( tmp_dict_value_278, 0, tmp_list_element_52 );
    tmp_called_name_417 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_417 == NULL ))
    {
        tmp_called_name_417 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_417 == NULL )
    {
        Py_DECREF( tmp_called_name_416 );
        Py_DECREF( tmp_kw_name_56 );
        Py_DECREF( tmp_dict_value_278 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 730;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_290 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_290 == NULL ))
    {
        tmp_args_element_name_290 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_290 == NULL )
    {
        Py_DECREF( tmp_called_name_416 );
        Py_DECREF( tmp_kw_name_56 );
        Py_DECREF( tmp_dict_value_278 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 730;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 730;
    {
        PyObject *call_args[] = { tmp_args_element_name_290 };
        tmp_list_element_52 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_417, call_args );
    }

    if ( tmp_list_element_52 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_416 );
        Py_DECREF( tmp_kw_name_56 );
        Py_DECREF( tmp_dict_value_278 );

        exception_lineno = 730;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_278, 1, tmp_list_element_52 );
    tmp_dict_key_278 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_56, tmp_dict_key_278, tmp_dict_value_278 );
    Py_DECREF( tmp_dict_value_278 );
    tmp_dict_value_279 = const_str_digest_71367b36dac5210f05e4a2df92679eca;
    tmp_dict_key_279 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_56, tmp_dict_key_279, tmp_dict_value_279 );
    tmp_dict_value_280 = LIST_COPY( const_list_str_plain_None_str_empty_list );
    tmp_dict_key_280 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_56, tmp_dict_key_280, tmp_dict_value_280 );
    Py_DECREF( tmp_dict_value_280 );
    frame_module->f_lineno = 732;
    tmp_assign_source_345 = CALL_FUNCTION( tmp_called_name_416, tmp_args_name_56, tmp_kw_name_56 );
    Py_DECREF( tmp_called_name_416 );
    Py_DECREF( tmp_kw_name_56 );
    if ( tmp_assign_source_345 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 732;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetGenlockSourceEdgeI3D, tmp_assign_source_345 );
    tmp_source_name_331 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_331 == NULL ))
    {
        tmp_source_name_331 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_331 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 735;
        goto frame_exception_exit_1;
    }

    tmp_called_name_418 = LOOKUP_ATTRIBUTE( tmp_source_name_331, const_str_plain_createBaseFunction );
    if ( tmp_called_name_418 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 735;
        goto frame_exception_exit_1;
    }
    tmp_args_name_57 = const_tuple_str_plain_wglGenlockSampleRateI3D_tuple;
    tmp_kw_name_57 = _PyDict_NewPresized( 5 );
    tmp_source_name_332 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_332 == NULL ))
    {
        tmp_source_name_332 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_332 == NULL )
    {
        Py_DECREF( tmp_called_name_418 );
        Py_DECREF( tmp_kw_name_57 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 736;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_281 = LOOKUP_ATTRIBUTE( tmp_source_name_332, const_str_plain_GL );
    if ( tmp_dict_value_281 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_418 );
        Py_DECREF( tmp_kw_name_57 );

        exception_lineno = 736;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_281 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_57, tmp_dict_key_281, tmp_dict_value_281 );
    Py_DECREF( tmp_dict_value_281 );
    tmp_dict_value_282 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_282 == NULL ))
    {
        tmp_dict_value_282 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_282 == NULL )
    {
        Py_DECREF( tmp_called_name_418 );
        Py_DECREF( tmp_kw_name_57 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 736;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_282 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_57, tmp_dict_key_282, tmp_dict_value_282 );
    tmp_dict_value_283 = PyList_New( 2 );
    tmp_list_element_53 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_53 == NULL ))
    {
        tmp_list_element_53 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_53 == NULL )
    {
        Py_DECREF( tmp_called_name_418 );
        Py_DECREF( tmp_kw_name_57 );
        Py_DECREF( tmp_dict_value_283 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 737;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_53 );
    PyList_SET_ITEM( tmp_dict_value_283, 0, tmp_list_element_53 );
    tmp_list_element_53 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_53 == NULL ))
    {
        tmp_list_element_53 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_53 == NULL )
    {
        Py_DECREF( tmp_called_name_418 );
        Py_DECREF( tmp_kw_name_57 );
        Py_DECREF( tmp_dict_value_283 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 737;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_53 );
    PyList_SET_ITEM( tmp_dict_value_283, 1, tmp_list_element_53 );
    tmp_dict_key_283 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_57, tmp_dict_key_283, tmp_dict_value_283 );
    Py_DECREF( tmp_dict_value_283 );
    tmp_dict_value_284 = const_str_digest_93c3b4ad7f5f415025ca921a3868e336;
    tmp_dict_key_284 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_57, tmp_dict_key_284, tmp_dict_value_284 );
    tmp_dict_value_285 = LIST_COPY( const_list_str_plain_None_str_plain_None_list );
    tmp_dict_key_285 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_57, tmp_dict_key_285, tmp_dict_value_285 );
    Py_DECREF( tmp_dict_value_285 );
    frame_module->f_lineno = 739;
    tmp_assign_source_346 = CALL_FUNCTION( tmp_called_name_418, tmp_args_name_57, tmp_kw_name_57 );
    Py_DECREF( tmp_called_name_418 );
    Py_DECREF( tmp_kw_name_57 );
    if ( tmp_assign_source_346 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 739;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGenlockSampleRateI3D, tmp_assign_source_346 );
    tmp_source_name_333 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_333 == NULL ))
    {
        tmp_source_name_333 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_333 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 742;
        goto frame_exception_exit_1;
    }

    tmp_called_name_419 = LOOKUP_ATTRIBUTE( tmp_source_name_333, const_str_plain_createBaseFunction );
    if ( tmp_called_name_419 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 742;
        goto frame_exception_exit_1;
    }
    tmp_args_name_58 = const_tuple_str_plain_wglGetGenlockSampleRateI3D_tuple;
    tmp_kw_name_58 = _PyDict_NewPresized( 5 );
    tmp_source_name_334 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_334 == NULL ))
    {
        tmp_source_name_334 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_334 == NULL )
    {
        Py_DECREF( tmp_called_name_419 );
        Py_DECREF( tmp_kw_name_58 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 743;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_286 = LOOKUP_ATTRIBUTE( tmp_source_name_334, const_str_plain_GL );
    if ( tmp_dict_value_286 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_419 );
        Py_DECREF( tmp_kw_name_58 );

        exception_lineno = 743;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_286 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_58, tmp_dict_key_286, tmp_dict_value_286 );
    Py_DECREF( tmp_dict_value_286 );
    tmp_dict_value_287 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_287 == NULL ))
    {
        tmp_dict_value_287 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_287 == NULL )
    {
        Py_DECREF( tmp_called_name_419 );
        Py_DECREF( tmp_kw_name_58 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 743;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_287 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_58, tmp_dict_key_287, tmp_dict_value_287 );
    tmp_dict_value_288 = PyList_New( 2 );
    tmp_list_element_54 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_54 == NULL ))
    {
        tmp_list_element_54 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_54 == NULL )
    {
        Py_DECREF( tmp_called_name_419 );
        Py_DECREF( tmp_kw_name_58 );
        Py_DECREF( tmp_dict_value_288 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 744;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_54 );
    PyList_SET_ITEM( tmp_dict_value_288, 0, tmp_list_element_54 );
    tmp_called_name_420 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_420 == NULL ))
    {
        tmp_called_name_420 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_420 == NULL )
    {
        Py_DECREF( tmp_called_name_419 );
        Py_DECREF( tmp_kw_name_58 );
        Py_DECREF( tmp_dict_value_288 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 744;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_291 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_291 == NULL ))
    {
        tmp_args_element_name_291 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_291 == NULL )
    {
        Py_DECREF( tmp_called_name_419 );
        Py_DECREF( tmp_kw_name_58 );
        Py_DECREF( tmp_dict_value_288 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 744;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 744;
    {
        PyObject *call_args[] = { tmp_args_element_name_291 };
        tmp_list_element_54 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_420, call_args );
    }

    if ( tmp_list_element_54 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_419 );
        Py_DECREF( tmp_kw_name_58 );
        Py_DECREF( tmp_dict_value_288 );

        exception_lineno = 744;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_288, 1, tmp_list_element_54 );
    tmp_dict_key_288 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_58, tmp_dict_key_288, tmp_dict_value_288 );
    Py_DECREF( tmp_dict_value_288 );
    tmp_dict_value_289 = const_str_digest_9eca954cc82dac3f9b07200e94e97ef6;
    tmp_dict_key_289 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_58, tmp_dict_key_289, tmp_dict_value_289 );
    tmp_dict_value_290 = LIST_COPY( const_list_str_plain_None_str_empty_list );
    tmp_dict_key_290 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_58, tmp_dict_key_290, tmp_dict_value_290 );
    Py_DECREF( tmp_dict_value_290 );
    frame_module->f_lineno = 746;
    tmp_assign_source_347 = CALL_FUNCTION( tmp_called_name_419, tmp_args_name_58, tmp_kw_name_58 );
    Py_DECREF( tmp_called_name_419 );
    Py_DECREF( tmp_kw_name_58 );
    if ( tmp_assign_source_347 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 746;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetGenlockSampleRateI3D, tmp_assign_source_347 );
    tmp_source_name_335 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_335 == NULL ))
    {
        tmp_source_name_335 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_335 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 749;
        goto frame_exception_exit_1;
    }

    tmp_called_name_421 = LOOKUP_ATTRIBUTE( tmp_source_name_335, const_str_plain_createBaseFunction );
    if ( tmp_called_name_421 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 749;
        goto frame_exception_exit_1;
    }
    tmp_args_name_59 = const_tuple_str_plain_wglGenlockSourceDelayI3D_tuple;
    tmp_kw_name_59 = _PyDict_NewPresized( 5 );
    tmp_source_name_336 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_336 == NULL ))
    {
        tmp_source_name_336 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_336 == NULL )
    {
        Py_DECREF( tmp_called_name_421 );
        Py_DECREF( tmp_kw_name_59 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 750;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_291 = LOOKUP_ATTRIBUTE( tmp_source_name_336, const_str_plain_GL );
    if ( tmp_dict_value_291 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_421 );
        Py_DECREF( tmp_kw_name_59 );

        exception_lineno = 750;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_291 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_59, tmp_dict_key_291, tmp_dict_value_291 );
    Py_DECREF( tmp_dict_value_291 );
    tmp_dict_value_292 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_292 == NULL ))
    {
        tmp_dict_value_292 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_292 == NULL )
    {
        Py_DECREF( tmp_called_name_421 );
        Py_DECREF( tmp_kw_name_59 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 750;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_292 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_59, tmp_dict_key_292, tmp_dict_value_292 );
    tmp_dict_value_293 = PyList_New( 2 );
    tmp_list_element_55 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_55 == NULL ))
    {
        tmp_list_element_55 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_55 == NULL )
    {
        Py_DECREF( tmp_called_name_421 );
        Py_DECREF( tmp_kw_name_59 );
        Py_DECREF( tmp_dict_value_293 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 751;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_55 );
    PyList_SET_ITEM( tmp_dict_value_293, 0, tmp_list_element_55 );
    tmp_list_element_55 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_55 == NULL ))
    {
        tmp_list_element_55 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_55 == NULL )
    {
        Py_DECREF( tmp_called_name_421 );
        Py_DECREF( tmp_kw_name_59 );
        Py_DECREF( tmp_dict_value_293 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 751;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_55 );
    PyList_SET_ITEM( tmp_dict_value_293, 1, tmp_list_element_55 );
    tmp_dict_key_293 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_59, tmp_dict_key_293, tmp_dict_value_293 );
    Py_DECREF( tmp_dict_value_293 );
    tmp_dict_value_294 = const_str_digest_1f5e2488f0453511dc4ee04440decf00;
    tmp_dict_key_294 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_59, tmp_dict_key_294, tmp_dict_value_294 );
    tmp_dict_value_295 = LIST_COPY( const_list_str_plain_None_str_plain_None_list );
    tmp_dict_key_295 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_59, tmp_dict_key_295, tmp_dict_value_295 );
    Py_DECREF( tmp_dict_value_295 );
    frame_module->f_lineno = 753;
    tmp_assign_source_348 = CALL_FUNCTION( tmp_called_name_421, tmp_args_name_59, tmp_kw_name_59 );
    Py_DECREF( tmp_called_name_421 );
    Py_DECREF( tmp_kw_name_59 );
    if ( tmp_assign_source_348 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 753;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGenlockSourceDelayI3D, tmp_assign_source_348 );
    tmp_source_name_337 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_337 == NULL ))
    {
        tmp_source_name_337 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_337 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 756;
        goto frame_exception_exit_1;
    }

    tmp_called_name_422 = LOOKUP_ATTRIBUTE( tmp_source_name_337, const_str_plain_createBaseFunction );
    if ( tmp_called_name_422 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 756;
        goto frame_exception_exit_1;
    }
    tmp_args_name_60 = const_tuple_str_plain_wglGetGenlockSourceDelayI3D_tuple;
    tmp_kw_name_60 = _PyDict_NewPresized( 5 );
    tmp_source_name_338 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_338 == NULL ))
    {
        tmp_source_name_338 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_338 == NULL )
    {
        Py_DECREF( tmp_called_name_422 );
        Py_DECREF( tmp_kw_name_60 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 757;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_296 = LOOKUP_ATTRIBUTE( tmp_source_name_338, const_str_plain_GL );
    if ( tmp_dict_value_296 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_422 );
        Py_DECREF( tmp_kw_name_60 );

        exception_lineno = 757;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_296 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_60, tmp_dict_key_296, tmp_dict_value_296 );
    Py_DECREF( tmp_dict_value_296 );
    tmp_dict_value_297 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_297 == NULL ))
    {
        tmp_dict_value_297 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_297 == NULL )
    {
        Py_DECREF( tmp_called_name_422 );
        Py_DECREF( tmp_kw_name_60 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 757;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_297 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_60, tmp_dict_key_297, tmp_dict_value_297 );
    tmp_dict_value_298 = PyList_New( 2 );
    tmp_list_element_56 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_56 == NULL ))
    {
        tmp_list_element_56 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_56 == NULL )
    {
        Py_DECREF( tmp_called_name_422 );
        Py_DECREF( tmp_kw_name_60 );
        Py_DECREF( tmp_dict_value_298 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 758;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_56 );
    PyList_SET_ITEM( tmp_dict_value_298, 0, tmp_list_element_56 );
    tmp_called_name_423 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_423 == NULL ))
    {
        tmp_called_name_423 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_423 == NULL )
    {
        Py_DECREF( tmp_called_name_422 );
        Py_DECREF( tmp_kw_name_60 );
        Py_DECREF( tmp_dict_value_298 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 758;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_292 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_292 == NULL ))
    {
        tmp_args_element_name_292 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_292 == NULL )
    {
        Py_DECREF( tmp_called_name_422 );
        Py_DECREF( tmp_kw_name_60 );
        Py_DECREF( tmp_dict_value_298 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 758;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 758;
    {
        PyObject *call_args[] = { tmp_args_element_name_292 };
        tmp_list_element_56 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_423, call_args );
    }

    if ( tmp_list_element_56 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_422 );
        Py_DECREF( tmp_kw_name_60 );
        Py_DECREF( tmp_dict_value_298 );

        exception_lineno = 758;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_298, 1, tmp_list_element_56 );
    tmp_dict_key_298 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_60, tmp_dict_key_298, tmp_dict_value_298 );
    Py_DECREF( tmp_dict_value_298 );
    tmp_dict_value_299 = const_str_digest_2602a38ebd0a1bbfd146859406841520;
    tmp_dict_key_299 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_60, tmp_dict_key_299, tmp_dict_value_299 );
    tmp_dict_value_300 = LIST_COPY( const_list_str_plain_None_str_empty_list );
    tmp_dict_key_300 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_60, tmp_dict_key_300, tmp_dict_value_300 );
    Py_DECREF( tmp_dict_value_300 );
    frame_module->f_lineno = 760;
    tmp_assign_source_349 = CALL_FUNCTION( tmp_called_name_422, tmp_args_name_60, tmp_kw_name_60 );
    Py_DECREF( tmp_called_name_422 );
    Py_DECREF( tmp_kw_name_60 );
    if ( tmp_assign_source_349 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 760;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetGenlockSourceDelayI3D, tmp_assign_source_349 );
    tmp_source_name_339 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_339 == NULL ))
    {
        tmp_source_name_339 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_339 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 763;
        goto frame_exception_exit_1;
    }

    tmp_called_name_424 = LOOKUP_ATTRIBUTE( tmp_source_name_339, const_str_plain_createBaseFunction );
    if ( tmp_called_name_424 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 763;
        goto frame_exception_exit_1;
    }
    tmp_args_name_61 = const_tuple_str_plain_wglQueryGenlockMaxSourceDelayI3D_tuple;
    tmp_kw_name_61 = _PyDict_NewPresized( 5 );
    tmp_source_name_340 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_340 == NULL ))
    {
        tmp_source_name_340 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_340 == NULL )
    {
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 764;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_301 = LOOKUP_ATTRIBUTE( tmp_source_name_340, const_str_plain_GL );
    if ( tmp_dict_value_301 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );

        exception_lineno = 764;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_301 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_61, tmp_dict_key_301, tmp_dict_value_301 );
    Py_DECREF( tmp_dict_value_301 );
    tmp_dict_value_302 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_302 == NULL ))
    {
        tmp_dict_value_302 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_302 == NULL )
    {
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 764;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_302 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_61, tmp_dict_key_302, tmp_dict_value_302 );
    tmp_dict_value_303 = PyList_New( 3 );
    tmp_list_element_57 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_57 == NULL ))
    {
        tmp_list_element_57 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_57 == NULL )
    {
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );
        Py_DECREF( tmp_dict_value_303 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 765;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_57 );
    PyList_SET_ITEM( tmp_dict_value_303, 0, tmp_list_element_57 );
    tmp_called_name_425 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_425 == NULL ))
    {
        tmp_called_name_425 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_425 == NULL )
    {
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );
        Py_DECREF( tmp_dict_value_303 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 765;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_293 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_293 == NULL ))
    {
        tmp_args_element_name_293 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_293 == NULL )
    {
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );
        Py_DECREF( tmp_dict_value_303 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 765;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 765;
    {
        PyObject *call_args[] = { tmp_args_element_name_293 };
        tmp_list_element_57 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_425, call_args );
    }

    if ( tmp_list_element_57 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );
        Py_DECREF( tmp_dict_value_303 );

        exception_lineno = 765;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_303, 1, tmp_list_element_57 );
    tmp_called_name_426 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_426 == NULL ))
    {
        tmp_called_name_426 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_426 == NULL )
    {
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );
        Py_DECREF( tmp_dict_value_303 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 765;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_294 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_294 == NULL ))
    {
        tmp_args_element_name_294 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_294 == NULL )
    {
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );
        Py_DECREF( tmp_dict_value_303 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 765;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 765;
    {
        PyObject *call_args[] = { tmp_args_element_name_294 };
        tmp_list_element_57 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_426, call_args );
    }

    if ( tmp_list_element_57 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_424 );
        Py_DECREF( tmp_kw_name_61 );
        Py_DECREF( tmp_dict_value_303 );

        exception_lineno = 765;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_303, 2, tmp_list_element_57 );
    tmp_dict_key_303 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_61, tmp_dict_key_303, tmp_dict_value_303 );
    Py_DECREF( tmp_dict_value_303 );
    tmp_dict_value_304 = const_str_digest_4eb319abd39deea1349f0c8bd70f2489;
    tmp_dict_key_304 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_61, tmp_dict_key_304, tmp_dict_value_304 );
    tmp_dict_value_305 = LIST_COPY( const_list_str_plain_None_str_empty_str_empty_list );
    tmp_dict_key_305 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_61, tmp_dict_key_305, tmp_dict_value_305 );
    Py_DECREF( tmp_dict_value_305 );
    frame_module->f_lineno = 767;
    tmp_assign_source_350 = CALL_FUNCTION( tmp_called_name_424, tmp_args_name_61, tmp_kw_name_61 );
    Py_DECREF( tmp_called_name_424 );
    Py_DECREF( tmp_kw_name_61 );
    if ( tmp_assign_source_350 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 767;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglQueryGenlockMaxSourceDelayI3D, tmp_assign_source_350 );
    tmp_called_name_427 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_427 == NULL ))
    {
        tmp_called_name_427 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_427 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 770;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_295 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_295 == NULL ))
    {
        tmp_args_element_name_295 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_295 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 770;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_296 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_296 == NULL ))
    {
        tmp_args_element_name_296 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_296 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 770;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 770;
    {
        PyObject *call_args[] = { tmp_args_element_name_295, tmp_args_element_name_296 };
        tmp_assign_source_351 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_427, call_args );
    }

    if ( tmp_assign_source_351 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 770;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLENABLEGENLOCKI3DPROC, tmp_assign_source_351 );
    tmp_called_name_428 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_428 == NULL ))
    {
        tmp_called_name_428 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_428 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 771;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_297 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_297 == NULL ))
    {
        tmp_args_element_name_297 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_297 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 771;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_298 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_298 == NULL ))
    {
        tmp_args_element_name_298 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_298 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 771;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 771;
    {
        PyObject *call_args[] = { tmp_args_element_name_297, tmp_args_element_name_298 };
        tmp_assign_source_352 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_428, call_args );
    }

    if ( tmp_assign_source_352 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 771;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLDISABLEGENLOCKI3DPROC, tmp_assign_source_352 );
    tmp_called_name_429 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_429 == NULL ))
    {
        tmp_called_name_429 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_429 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 772;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_299 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_299 == NULL ))
    {
        tmp_args_element_name_299 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_299 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 772;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_300 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_300 == NULL ))
    {
        tmp_args_element_name_300 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_300 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 772;
        goto frame_exception_exit_1;
    }

    tmp_called_name_430 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_430 == NULL ))
    {
        tmp_called_name_430 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_430 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 772;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_302 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_302 == NULL ))
    {
        tmp_args_element_name_302 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_302 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 772;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 772;
    {
        PyObject *call_args[] = { tmp_args_element_name_302 };
        tmp_args_element_name_301 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_430, call_args );
    }

    if ( tmp_args_element_name_301 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 772;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 772;
    {
        PyObject *call_args[] = { tmp_args_element_name_299, tmp_args_element_name_300, tmp_args_element_name_301 };
        tmp_assign_source_353 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_429, call_args );
    }

    Py_DECREF( tmp_args_element_name_301 );
    if ( tmp_assign_source_353 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 772;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLISENABLEDGENLOCKI3DPROC, tmp_assign_source_353 );
    tmp_called_name_431 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_431 == NULL ))
    {
        tmp_called_name_431 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_431 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 773;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_303 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_303 == NULL ))
    {
        tmp_args_element_name_303 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_303 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 773;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_304 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_304 == NULL ))
    {
        tmp_args_element_name_304 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_304 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 773;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_305 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_305 == NULL ))
    {
        tmp_args_element_name_305 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_305 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 773;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 773;
    {
        PyObject *call_args[] = { tmp_args_element_name_303, tmp_args_element_name_304, tmp_args_element_name_305 };
        tmp_assign_source_354 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_431, call_args );
    }

    if ( tmp_assign_source_354 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 773;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGENLOCKSOURCEI3DPROC, tmp_assign_source_354 );
    tmp_called_name_432 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_432 == NULL ))
    {
        tmp_called_name_432 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_432 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 774;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_306 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_306 == NULL ))
    {
        tmp_args_element_name_306 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_306 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 774;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_307 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_307 == NULL ))
    {
        tmp_args_element_name_307 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_307 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 774;
        goto frame_exception_exit_1;
    }

    tmp_called_name_433 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_433 == NULL ))
    {
        tmp_called_name_433 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_433 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 774;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_309 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_309 == NULL ))
    {
        tmp_args_element_name_309 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_309 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 774;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 774;
    {
        PyObject *call_args[] = { tmp_args_element_name_309 };
        tmp_args_element_name_308 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_433, call_args );
    }

    if ( tmp_args_element_name_308 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 774;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 774;
    {
        PyObject *call_args[] = { tmp_args_element_name_306, tmp_args_element_name_307, tmp_args_element_name_308 };
        tmp_assign_source_355 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_432, call_args );
    }

    Py_DECREF( tmp_args_element_name_308 );
    if ( tmp_assign_source_355 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 774;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETGENLOCKSOURCEI3DPROC, tmp_assign_source_355 );
    tmp_called_name_434 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_434 == NULL ))
    {
        tmp_called_name_434 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_434 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 775;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_310 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_310 == NULL ))
    {
        tmp_args_element_name_310 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_310 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 775;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_311 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_311 == NULL ))
    {
        tmp_args_element_name_311 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_311 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 775;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_312 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_312 == NULL ))
    {
        tmp_args_element_name_312 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_312 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 775;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 775;
    {
        PyObject *call_args[] = { tmp_args_element_name_310, tmp_args_element_name_311, tmp_args_element_name_312 };
        tmp_assign_source_356 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_434, call_args );
    }

    if ( tmp_assign_source_356 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 775;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGENLOCKSOURCEEDGEI3DPROC, tmp_assign_source_356 );
    tmp_called_name_435 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_435 == NULL ))
    {
        tmp_called_name_435 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_435 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 776;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_313 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_313 == NULL ))
    {
        tmp_args_element_name_313 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_313 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 776;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_314 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_314 == NULL ))
    {
        tmp_args_element_name_314 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_314 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 776;
        goto frame_exception_exit_1;
    }

    tmp_called_name_436 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_436 == NULL ))
    {
        tmp_called_name_436 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_436 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 776;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_316 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_316 == NULL ))
    {
        tmp_args_element_name_316 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_316 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 776;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 776;
    {
        PyObject *call_args[] = { tmp_args_element_name_316 };
        tmp_args_element_name_315 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_436, call_args );
    }

    if ( tmp_args_element_name_315 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 776;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 776;
    {
        PyObject *call_args[] = { tmp_args_element_name_313, tmp_args_element_name_314, tmp_args_element_name_315 };
        tmp_assign_source_357 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_435, call_args );
    }

    Py_DECREF( tmp_args_element_name_315 );
    if ( tmp_assign_source_357 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 776;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETGENLOCKSOURCEEDGEI3DPROC, tmp_assign_source_357 );
    tmp_called_name_437 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_437 == NULL ))
    {
        tmp_called_name_437 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_437 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 777;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_317 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_317 == NULL ))
    {
        tmp_args_element_name_317 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_317 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 777;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_318 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_318 == NULL ))
    {
        tmp_args_element_name_318 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_318 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 777;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_319 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_319 == NULL ))
    {
        tmp_args_element_name_319 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_319 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 777;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 777;
    {
        PyObject *call_args[] = { tmp_args_element_name_317, tmp_args_element_name_318, tmp_args_element_name_319 };
        tmp_assign_source_358 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_437, call_args );
    }

    if ( tmp_assign_source_358 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 777;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGENLOCKSAMPLERATEI3DPROC, tmp_assign_source_358 );
    tmp_called_name_438 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_438 == NULL ))
    {
        tmp_called_name_438 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_438 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 778;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_320 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_320 == NULL ))
    {
        tmp_args_element_name_320 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_320 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 778;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_321 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_321 == NULL ))
    {
        tmp_args_element_name_321 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_321 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 778;
        goto frame_exception_exit_1;
    }

    tmp_called_name_439 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_439 == NULL ))
    {
        tmp_called_name_439 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_439 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 778;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_323 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_323 == NULL ))
    {
        tmp_args_element_name_323 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_323 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 778;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 778;
    {
        PyObject *call_args[] = { tmp_args_element_name_323 };
        tmp_args_element_name_322 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_439, call_args );
    }

    if ( tmp_args_element_name_322 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 778;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 778;
    {
        PyObject *call_args[] = { tmp_args_element_name_320, tmp_args_element_name_321, tmp_args_element_name_322 };
        tmp_assign_source_359 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_438, call_args );
    }

    Py_DECREF( tmp_args_element_name_322 );
    if ( tmp_assign_source_359 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 778;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETGENLOCKSAMPLERATEI3DPROC, tmp_assign_source_359 );
    tmp_called_name_440 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_440 == NULL ))
    {
        tmp_called_name_440 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_440 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 779;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_324 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_324 == NULL ))
    {
        tmp_args_element_name_324 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_324 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 779;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_325 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_325 == NULL ))
    {
        tmp_args_element_name_325 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_325 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 779;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_326 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_326 == NULL ))
    {
        tmp_args_element_name_326 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_326 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 779;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 779;
    {
        PyObject *call_args[] = { tmp_args_element_name_324, tmp_args_element_name_325, tmp_args_element_name_326 };
        tmp_assign_source_360 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_440, call_args );
    }

    if ( tmp_assign_source_360 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 779;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGENLOCKSOURCEDELAYI3DPROC, tmp_assign_source_360 );
    tmp_called_name_441 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_441 == NULL ))
    {
        tmp_called_name_441 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_441 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 780;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_327 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_327 == NULL ))
    {
        tmp_args_element_name_327 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_327 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 780;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_328 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_328 == NULL ))
    {
        tmp_args_element_name_328 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_328 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 780;
        goto frame_exception_exit_1;
    }

    tmp_called_name_442 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_442 == NULL ))
    {
        tmp_called_name_442 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_442 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 780;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_330 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_330 == NULL ))
    {
        tmp_args_element_name_330 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_330 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 780;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 780;
    {
        PyObject *call_args[] = { tmp_args_element_name_330 };
        tmp_args_element_name_329 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_442, call_args );
    }

    if ( tmp_args_element_name_329 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 780;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 780;
    {
        PyObject *call_args[] = { tmp_args_element_name_327, tmp_args_element_name_328, tmp_args_element_name_329 };
        tmp_assign_source_361 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_441, call_args );
    }

    Py_DECREF( tmp_args_element_name_329 );
    if ( tmp_assign_source_361 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 780;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETGENLOCKSOURCEDELAYI3DPROC, tmp_assign_source_361 );
    tmp_called_name_443 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_443 == NULL ))
    {
        tmp_called_name_443 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_443 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 781;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_331 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_331 == NULL ))
    {
        tmp_args_element_name_331 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_331 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 781;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_332 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_332 == NULL ))
    {
        tmp_args_element_name_332 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_332 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 781;
        goto frame_exception_exit_1;
    }

    tmp_called_name_444 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_444 == NULL ))
    {
        tmp_called_name_444 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_444 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 781;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_334 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_334 == NULL ))
    {
        tmp_args_element_name_334 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_334 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 781;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 781;
    {
        PyObject *call_args[] = { tmp_args_element_name_334 };
        tmp_args_element_name_333 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_444, call_args );
    }

    if ( tmp_args_element_name_333 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 781;
        goto frame_exception_exit_1;
    }
    tmp_called_name_445 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_445 == NULL ))
    {
        tmp_called_name_445 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_445 == NULL )
    {
        Py_DECREF( tmp_args_element_name_333 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 781;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_336 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_336 == NULL ))
    {
        tmp_args_element_name_336 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_336 == NULL )
    {
        Py_DECREF( tmp_args_element_name_333 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 781;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 781;
    {
        PyObject *call_args[] = { tmp_args_element_name_336 };
        tmp_args_element_name_335 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_445, call_args );
    }

    if ( tmp_args_element_name_335 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_333 );

        exception_lineno = 781;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 781;
    {
        PyObject *call_args[] = { tmp_args_element_name_331, tmp_args_element_name_332, tmp_args_element_name_333, tmp_args_element_name_335 };
        tmp_assign_source_362 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_443, call_args );
    }

    Py_DECREF( tmp_args_element_name_333 );
    Py_DECREF( tmp_args_element_name_335 );
    if ( tmp_assign_source_362 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 781;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC, tmp_assign_source_362 );
    tmp_source_name_341 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_341 == NULL ))
    {
        tmp_source_name_341 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_341 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 783;
        goto frame_exception_exit_1;
    }

    tmp_called_name_446 = LOOKUP_ATTRIBUTE( tmp_source_name_341, const_str_plain_Constant );
    if ( tmp_called_name_446 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 783;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 783;
    tmp_assign_source_363 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_446, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_I3D_image_buffer_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_446 );
    if ( tmp_assign_source_363 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 783;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_I3D_image_buffer, tmp_assign_source_363 );
    tmp_called_name_447 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_447 == NULL ))
    {
        tmp_called_name_447 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_447 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 784;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 784;
    tmp_assign_source_364 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_447, &PyTuple_GET_ITEM( const_tuple_none_tuple, 0 ) );

    if ( tmp_assign_source_364 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 784;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_LPVOID, tmp_assign_source_364 );
    tmp_assign_source_365 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_ulong );

    if (unlikely( tmp_assign_source_365 == NULL ))
    {
        tmp_assign_source_365 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_ulong );
    }

    if ( tmp_assign_source_365 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_ulong" );
        exception_tb = NULL;

        exception_lineno = 785;
        goto frame_exception_exit_1;
    }

    UPDATE_STRING_DICT0( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_DWORD, tmp_assign_source_365 );
    tmp_source_name_342 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_342 == NULL ))
    {
        tmp_source_name_342 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_342 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 786;
        goto frame_exception_exit_1;
    }

    tmp_called_name_448 = LOOKUP_ATTRIBUTE( tmp_source_name_342, const_str_plain_createBaseFunction );
    if ( tmp_called_name_448 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 786;
        goto frame_exception_exit_1;
    }
    tmp_args_name_62 = const_tuple_str_plain_wglCreateImageBufferI3D_tuple;
    tmp_kw_name_62 = _PyDict_NewPresized( 5 );
    tmp_source_name_343 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_343 == NULL ))
    {
        tmp_source_name_343 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_343 == NULL )
    {
        Py_DECREF( tmp_called_name_448 );
        Py_DECREF( tmp_kw_name_62 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 787;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_306 = LOOKUP_ATTRIBUTE( tmp_source_name_343, const_str_plain_GL );
    if ( tmp_dict_value_306 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_448 );
        Py_DECREF( tmp_kw_name_62 );

        exception_lineno = 787;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_306 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_62, tmp_dict_key_306, tmp_dict_value_306 );
    Py_DECREF( tmp_dict_value_306 );
    tmp_dict_value_307 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_LPVOID );

    if (unlikely( tmp_dict_value_307 == NULL ))
    {
        tmp_dict_value_307 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_LPVOID );
    }

    if ( tmp_dict_value_307 == NULL )
    {
        Py_DECREF( tmp_called_name_448 );
        Py_DECREF( tmp_kw_name_62 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "LPVOID" );
        exception_tb = NULL;

        exception_lineno = 787;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_307 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_62, tmp_dict_key_307, tmp_dict_value_307 );
    tmp_dict_value_308 = PyList_New( 3 );
    tmp_list_element_58 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_58 == NULL ))
    {
        tmp_list_element_58 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_58 == NULL )
    {
        Py_DECREF( tmp_called_name_448 );
        Py_DECREF( tmp_kw_name_62 );
        Py_DECREF( tmp_dict_value_308 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 788;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_58 );
    PyList_SET_ITEM( tmp_dict_value_308, 0, tmp_list_element_58 );
    tmp_list_element_58 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_DWORD );

    if (unlikely( tmp_list_element_58 == NULL ))
    {
        tmp_list_element_58 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_DWORD );
    }

    if ( tmp_list_element_58 == NULL )
    {
        Py_DECREF( tmp_called_name_448 );
        Py_DECREF( tmp_kw_name_62 );
        Py_DECREF( tmp_dict_value_308 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "DWORD" );
        exception_tb = NULL;

        exception_lineno = 788;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_58 );
    PyList_SET_ITEM( tmp_dict_value_308, 1, tmp_list_element_58 );
    tmp_list_element_58 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_58 == NULL ))
    {
        tmp_list_element_58 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_58 == NULL )
    {
        Py_DECREF( tmp_called_name_448 );
        Py_DECREF( tmp_kw_name_62 );
        Py_DECREF( tmp_dict_value_308 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 788;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_58 );
    PyList_SET_ITEM( tmp_dict_value_308, 2, tmp_list_element_58 );
    tmp_dict_key_308 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_62, tmp_dict_key_308, tmp_dict_value_308 );
    Py_DECREF( tmp_dict_value_308 );
    tmp_dict_value_309 = const_str_digest_52ef08e094b17fa3f03e1d8ae595b01d;
    tmp_dict_key_309 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_62, tmp_dict_key_309, tmp_dict_value_309 );
    tmp_dict_value_310 = LIST_COPY( const_list_str_plain_None_str_plain_None_str_plain_None_list );
    tmp_dict_key_310 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_62, tmp_dict_key_310, tmp_dict_value_310 );
    Py_DECREF( tmp_dict_value_310 );
    frame_module->f_lineno = 790;
    tmp_assign_source_366 = CALL_FUNCTION( tmp_called_name_448, tmp_args_name_62, tmp_kw_name_62 );
    Py_DECREF( tmp_called_name_448 );
    Py_DECREF( tmp_kw_name_62 );
    if ( tmp_assign_source_366 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 790;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglCreateImageBufferI3D, tmp_assign_source_366 );
    tmp_source_name_344 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_344 == NULL ))
    {
        tmp_source_name_344 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_344 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 793;
        goto frame_exception_exit_1;
    }

    tmp_called_name_449 = LOOKUP_ATTRIBUTE( tmp_source_name_344, const_str_plain_createBaseFunction );
    if ( tmp_called_name_449 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 793;
        goto frame_exception_exit_1;
    }
    tmp_args_name_63 = const_tuple_str_plain_wglDestroyImageBufferI3D_tuple;
    tmp_kw_name_63 = _PyDict_NewPresized( 5 );
    tmp_source_name_345 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_345 == NULL ))
    {
        tmp_source_name_345 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_345 == NULL )
    {
        Py_DECREF( tmp_called_name_449 );
        Py_DECREF( tmp_kw_name_63 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 794;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_311 = LOOKUP_ATTRIBUTE( tmp_source_name_345, const_str_plain_GL );
    if ( tmp_dict_value_311 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_449 );
        Py_DECREF( tmp_kw_name_63 );

        exception_lineno = 794;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_311 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_63, tmp_dict_key_311, tmp_dict_value_311 );
    Py_DECREF( tmp_dict_value_311 );
    tmp_dict_value_312 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_312 == NULL ))
    {
        tmp_dict_value_312 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_312 == NULL )
    {
        Py_DECREF( tmp_called_name_449 );
        Py_DECREF( tmp_kw_name_63 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 794;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_312 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_63, tmp_dict_key_312, tmp_dict_value_312 );
    tmp_dict_value_313 = PyList_New( 2 );
    tmp_list_element_59 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_59 == NULL ))
    {
        tmp_list_element_59 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_59 == NULL )
    {
        Py_DECREF( tmp_called_name_449 );
        Py_DECREF( tmp_kw_name_63 );
        Py_DECREF( tmp_dict_value_313 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 795;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_59 );
    PyList_SET_ITEM( tmp_dict_value_313, 0, tmp_list_element_59 );
    tmp_list_element_59 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_LPVOID );

    if (unlikely( tmp_list_element_59 == NULL ))
    {
        tmp_list_element_59 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_LPVOID );
    }

    if ( tmp_list_element_59 == NULL )
    {
        Py_DECREF( tmp_called_name_449 );
        Py_DECREF( tmp_kw_name_63 );
        Py_DECREF( tmp_dict_value_313 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "LPVOID" );
        exception_tb = NULL;

        exception_lineno = 795;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_59 );
    PyList_SET_ITEM( tmp_dict_value_313, 1, tmp_list_element_59 );
    tmp_dict_key_313 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_63, tmp_dict_key_313, tmp_dict_value_313 );
    Py_DECREF( tmp_dict_value_313 );
    tmp_dict_value_314 = const_str_digest_bad1d3eb1208e57f824628a06f4ae8aa;
    tmp_dict_key_314 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_63, tmp_dict_key_314, tmp_dict_value_314 );
    tmp_dict_value_315 = LIST_COPY( const_list_str_plain_None_str_plain_None_list );
    tmp_dict_key_315 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_63, tmp_dict_key_315, tmp_dict_value_315 );
    Py_DECREF( tmp_dict_value_315 );
    frame_module->f_lineno = 797;
    tmp_assign_source_367 = CALL_FUNCTION( tmp_called_name_449, tmp_args_name_63, tmp_kw_name_63 );
    Py_DECREF( tmp_called_name_449 );
    Py_DECREF( tmp_kw_name_63 );
    if ( tmp_assign_source_367 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 797;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglDestroyImageBufferI3D, tmp_assign_source_367 );
    tmp_source_name_346 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_346 == NULL ))
    {
        tmp_source_name_346 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_346 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 800;
        goto frame_exception_exit_1;
    }

    tmp_called_name_450 = LOOKUP_ATTRIBUTE( tmp_source_name_346, const_str_plain_createBaseFunction );
    if ( tmp_called_name_450 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 800;
        goto frame_exception_exit_1;
    }
    tmp_args_name_64 = const_tuple_str_plain_wglAssociateImageBufferEventsI3D_tuple;
    tmp_kw_name_64 = _PyDict_NewPresized( 5 );
    tmp_source_name_347 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_347 == NULL ))
    {
        tmp_source_name_347 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_347 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 801;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_316 = LOOKUP_ATTRIBUTE( tmp_source_name_347, const_str_plain_GL );
    if ( tmp_dict_value_316 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );

        exception_lineno = 801;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_316 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_64, tmp_dict_key_316, tmp_dict_value_316 );
    Py_DECREF( tmp_dict_value_316 );
    tmp_dict_value_317 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_317 == NULL ))
    {
        tmp_dict_value_317 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_317 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 801;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_317 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_64, tmp_dict_key_317, tmp_dict_value_317 );
    tmp_dict_value_318 = PyList_New( 5 );
    tmp_list_element_60 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_60 == NULL ))
    {
        tmp_list_element_60 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_60 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_60 );
    PyList_SET_ITEM( tmp_dict_value_318, 0, tmp_list_element_60 );
    tmp_called_name_451 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_451 == NULL ))
    {
        tmp_called_name_451 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_451 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_337 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_args_element_name_337 == NULL ))
    {
        tmp_args_element_name_337 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_args_element_name_337 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 802;
    {
        PyObject *call_args[] = { tmp_args_element_name_337 };
        tmp_list_element_60 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_451, call_args );
    }

    if ( tmp_list_element_60 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_318, 1, tmp_list_element_60 );
    tmp_called_name_452 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_452 == NULL ))
    {
        tmp_called_name_452 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_452 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_338 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_LPVOID );

    if (unlikely( tmp_args_element_name_338 == NULL ))
    {
        tmp_args_element_name_338 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_LPVOID );
    }

    if ( tmp_args_element_name_338 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "LPVOID" );
        exception_tb = NULL;

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 802;
    {
        PyObject *call_args[] = { tmp_args_element_name_338 };
        tmp_list_element_60 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_452, call_args );
    }

    if ( tmp_list_element_60 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_318, 2, tmp_list_element_60 );
    tmp_called_name_453 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_453 == NULL ))
    {
        tmp_called_name_453 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_453 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_339 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_DWORD );

    if (unlikely( tmp_args_element_name_339 == NULL ))
    {
        tmp_args_element_name_339 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_DWORD );
    }

    if ( tmp_args_element_name_339 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "DWORD" );
        exception_tb = NULL;

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 802;
    {
        PyObject *call_args[] = { tmp_args_element_name_339 };
        tmp_list_element_60 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_453, call_args );
    }

    if ( tmp_list_element_60 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_318, 3, tmp_list_element_60 );
    tmp_list_element_60 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_60 == NULL ))
    {
        tmp_list_element_60 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_60 == NULL )
    {
        Py_DECREF( tmp_called_name_450 );
        Py_DECREF( tmp_kw_name_64 );
        Py_DECREF( tmp_dict_value_318 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 802;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_60 );
    PyList_SET_ITEM( tmp_dict_value_318, 4, tmp_list_element_60 );
    tmp_dict_key_318 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_64, tmp_dict_key_318, tmp_dict_value_318 );
    Py_DECREF( tmp_dict_value_318 );
    tmp_dict_value_319 = const_str_digest_5babe4ef3433ca50e8557f8dcaaf50b6;
    tmp_dict_key_319 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_64, tmp_dict_key_319, tmp_dict_value_319 );
    tmp_dict_value_320 = LIST_COPY( const_list_str_plain_None_str_empty_str_empty_str_empty_str_plain_None_list );
    tmp_dict_key_320 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_64, tmp_dict_key_320, tmp_dict_value_320 );
    Py_DECREF( tmp_dict_value_320 );
    frame_module->f_lineno = 804;
    tmp_assign_source_368 = CALL_FUNCTION( tmp_called_name_450, tmp_args_name_64, tmp_kw_name_64 );
    Py_DECREF( tmp_called_name_450 );
    Py_DECREF( tmp_kw_name_64 );
    if ( tmp_assign_source_368 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 804;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglAssociateImageBufferEventsI3D, tmp_assign_source_368 );
    tmp_source_name_348 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_348 == NULL ))
    {
        tmp_source_name_348 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_348 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 807;
        goto frame_exception_exit_1;
    }

    tmp_called_name_454 = LOOKUP_ATTRIBUTE( tmp_source_name_348, const_str_plain_createBaseFunction );
    if ( tmp_called_name_454 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 807;
        goto frame_exception_exit_1;
    }
    tmp_args_name_65 = const_tuple_str_plain_wglReleaseImageBufferEventsI3D_tuple;
    tmp_kw_name_65 = _PyDict_NewPresized( 5 );
    tmp_source_name_349 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_349 == NULL ))
    {
        tmp_source_name_349 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_349 == NULL )
    {
        Py_DECREF( tmp_called_name_454 );
        Py_DECREF( tmp_kw_name_65 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 808;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_321 = LOOKUP_ATTRIBUTE( tmp_source_name_349, const_str_plain_GL );
    if ( tmp_dict_value_321 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_454 );
        Py_DECREF( tmp_kw_name_65 );

        exception_lineno = 808;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_321 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_65, tmp_dict_key_321, tmp_dict_value_321 );
    Py_DECREF( tmp_dict_value_321 );
    tmp_dict_value_322 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_322 == NULL ))
    {
        tmp_dict_value_322 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_322 == NULL )
    {
        Py_DECREF( tmp_called_name_454 );
        Py_DECREF( tmp_kw_name_65 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 808;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_322 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_65, tmp_dict_key_322, tmp_dict_value_322 );
    tmp_dict_value_323 = PyList_New( 3 );
    tmp_list_element_61 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_list_element_61 == NULL ))
    {
        tmp_list_element_61 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_list_element_61 == NULL )
    {
        Py_DECREF( tmp_called_name_454 );
        Py_DECREF( tmp_kw_name_65 );
        Py_DECREF( tmp_dict_value_323 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 809;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_61 );
    PyList_SET_ITEM( tmp_dict_value_323, 0, tmp_list_element_61 );
    tmp_called_name_455 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_455 == NULL ))
    {
        tmp_called_name_455 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_455 == NULL )
    {
        Py_DECREF( tmp_called_name_454 );
        Py_DECREF( tmp_kw_name_65 );
        Py_DECREF( tmp_dict_value_323 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 809;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_340 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_LPVOID );

    if (unlikely( tmp_args_element_name_340 == NULL ))
    {
        tmp_args_element_name_340 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_LPVOID );
    }

    if ( tmp_args_element_name_340 == NULL )
    {
        Py_DECREF( tmp_called_name_454 );
        Py_DECREF( tmp_kw_name_65 );
        Py_DECREF( tmp_dict_value_323 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "LPVOID" );
        exception_tb = NULL;

        exception_lineno = 809;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 809;
    {
        PyObject *call_args[] = { tmp_args_element_name_340 };
        tmp_list_element_61 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_455, call_args );
    }

    if ( tmp_list_element_61 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_454 );
        Py_DECREF( tmp_kw_name_65 );
        Py_DECREF( tmp_dict_value_323 );

        exception_lineno = 809;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_323, 1, tmp_list_element_61 );
    tmp_list_element_61 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_list_element_61 == NULL ))
    {
        tmp_list_element_61 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_list_element_61 == NULL )
    {
        Py_DECREF( tmp_called_name_454 );
        Py_DECREF( tmp_kw_name_65 );
        Py_DECREF( tmp_dict_value_323 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 809;
        goto frame_exception_exit_1;
    }

    Py_INCREF( tmp_list_element_61 );
    PyList_SET_ITEM( tmp_dict_value_323, 2, tmp_list_element_61 );
    tmp_dict_key_323 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_65, tmp_dict_key_323, tmp_dict_value_323 );
    Py_DECREF( tmp_dict_value_323 );
    tmp_dict_value_324 = const_str_digest_eda57e0b5504ccdf89da57e718f4c91a;
    tmp_dict_key_324 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_65, tmp_dict_key_324, tmp_dict_value_324 );
    tmp_dict_value_325 = LIST_COPY( const_list_str_plain_None_str_empty_str_plain_None_list );
    tmp_dict_key_325 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_65, tmp_dict_key_325, tmp_dict_value_325 );
    Py_DECREF( tmp_dict_value_325 );
    frame_module->f_lineno = 811;
    tmp_assign_source_369 = CALL_FUNCTION( tmp_called_name_454, tmp_args_name_65, tmp_kw_name_65 );
    Py_DECREF( tmp_called_name_454 );
    Py_DECREF( tmp_kw_name_65 );
    if ( tmp_assign_source_369 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 811;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglReleaseImageBufferEventsI3D, tmp_assign_source_369 );
    tmp_called_name_456 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_456 == NULL ))
    {
        tmp_called_name_456 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_456 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 814;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_341 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_LPVOID );

    if (unlikely( tmp_args_element_name_341 == NULL ))
    {
        tmp_args_element_name_341 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_LPVOID );
    }

    if ( tmp_args_element_name_341 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "LPVOID" );
        exception_tb = NULL;

        exception_lineno = 814;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_342 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_342 == NULL ))
    {
        tmp_args_element_name_342 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_342 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 814;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_343 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_DWORD );

    if (unlikely( tmp_args_element_name_343 == NULL ))
    {
        tmp_args_element_name_343 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_DWORD );
    }

    if ( tmp_args_element_name_343 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "DWORD" );
        exception_tb = NULL;

        exception_lineno = 814;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_344 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_344 == NULL ))
    {
        tmp_args_element_name_344 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_344 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 814;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 814;
    {
        PyObject *call_args[] = { tmp_args_element_name_341, tmp_args_element_name_342, tmp_args_element_name_343, tmp_args_element_name_344 };
        tmp_assign_source_370 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_456, call_args );
    }

    if ( tmp_assign_source_370 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 814;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLCREATEIMAGEBUFFERI3DPROC, tmp_assign_source_370 );
    tmp_called_name_457 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_457 == NULL ))
    {
        tmp_called_name_457 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_457 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 815;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_345 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_345 == NULL ))
    {
        tmp_args_element_name_345 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_345 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 815;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_346 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_346 == NULL ))
    {
        tmp_args_element_name_346 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_346 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 815;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_347 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_LPVOID );

    if (unlikely( tmp_args_element_name_347 == NULL ))
    {
        tmp_args_element_name_347 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_LPVOID );
    }

    if ( tmp_args_element_name_347 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "LPVOID" );
        exception_tb = NULL;

        exception_lineno = 815;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 815;
    {
        PyObject *call_args[] = { tmp_args_element_name_345, tmp_args_element_name_346, tmp_args_element_name_347 };
        tmp_assign_source_371 = CALL_FUNCTION_WITH_ARGS3( tmp_called_name_457, call_args );
    }

    if ( tmp_assign_source_371 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 815;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLDESTROYIMAGEBUFFERI3DPROC, tmp_assign_source_371 );
    tmp_called_name_458 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_458 == NULL ))
    {
        tmp_called_name_458 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_458 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_348 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_348 == NULL ))
    {
        tmp_args_element_name_348 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_348 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_349 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_349 == NULL ))
    {
        tmp_args_element_name_349 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_349 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    tmp_called_name_459 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_459 == NULL ))
    {
        tmp_called_name_459 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_459 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_351 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HANDLE );

    if (unlikely( tmp_args_element_name_351 == NULL ))
    {
        tmp_args_element_name_351 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HANDLE );
    }

    if ( tmp_args_element_name_351 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HANDLE" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 816;
    {
        PyObject *call_args[] = { tmp_args_element_name_351 };
        tmp_args_element_name_350 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_459, call_args );
    }

    if ( tmp_args_element_name_350 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 816;
        goto frame_exception_exit_1;
    }
    tmp_called_name_460 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_460 == NULL ))
    {
        tmp_called_name_460 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_460 == NULL )
    {
        Py_DECREF( tmp_args_element_name_350 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_353 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_LPVOID );

    if (unlikely( tmp_args_element_name_353 == NULL ))
    {
        tmp_args_element_name_353 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_LPVOID );
    }

    if ( tmp_args_element_name_353 == NULL )
    {
        Py_DECREF( tmp_args_element_name_350 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "LPVOID" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 816;
    {
        PyObject *call_args[] = { tmp_args_element_name_353 };
        tmp_args_element_name_352 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_460, call_args );
    }

    if ( tmp_args_element_name_352 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_350 );

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }
    tmp_called_name_461 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_461 == NULL ))
    {
        tmp_called_name_461 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_461 == NULL )
    {
        Py_DECREF( tmp_args_element_name_350 );
        Py_DECREF( tmp_args_element_name_352 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_355 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_DWORD );

    if (unlikely( tmp_args_element_name_355 == NULL ))
    {
        tmp_args_element_name_355 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_DWORD );
    }

    if ( tmp_args_element_name_355 == NULL )
    {
        Py_DECREF( tmp_args_element_name_350 );
        Py_DECREF( tmp_args_element_name_352 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "DWORD" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 816;
    {
        PyObject *call_args[] = { tmp_args_element_name_355 };
        tmp_args_element_name_354 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_461, call_args );
    }

    if ( tmp_args_element_name_354 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_350 );
        Py_DECREF( tmp_args_element_name_352 );

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }
    tmp_args_element_name_356 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_356 == NULL ))
    {
        tmp_args_element_name_356 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_356 == NULL )
    {
        Py_DECREF( tmp_args_element_name_350 );
        Py_DECREF( tmp_args_element_name_352 );
        Py_DECREF( tmp_args_element_name_354 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 816;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 816;
    {
        PyObject *call_args[] = { tmp_args_element_name_348, tmp_args_element_name_349, tmp_args_element_name_350, tmp_args_element_name_352, tmp_args_element_name_354, tmp_args_element_name_356 };
        tmp_assign_source_372 = CALL_FUNCTION_WITH_ARGS6( tmp_called_name_458, call_args );
    }

    Py_DECREF( tmp_args_element_name_350 );
    Py_DECREF( tmp_args_element_name_352 );
    Py_DECREF( tmp_args_element_name_354 );
    if ( tmp_assign_source_372 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 816;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC, tmp_assign_source_372 );
    tmp_called_name_462 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_462 == NULL ))
    {
        tmp_called_name_462 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_462 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 817;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_357 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_357 == NULL ))
    {
        tmp_args_element_name_357 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_357 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 817;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_358 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_HDC );

    if (unlikely( tmp_args_element_name_358 == NULL ))
    {
        tmp_args_element_name_358 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_HDC );
    }

    if ( tmp_args_element_name_358 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "HDC" );
        exception_tb = NULL;

        exception_lineno = 817;
        goto frame_exception_exit_1;
    }

    tmp_called_name_463 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_463 == NULL ))
    {
        tmp_called_name_463 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_463 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 817;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_360 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_LPVOID );

    if (unlikely( tmp_args_element_name_360 == NULL ))
    {
        tmp_args_element_name_360 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_LPVOID );
    }

    if ( tmp_args_element_name_360 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "LPVOID" );
        exception_tb = NULL;

        exception_lineno = 817;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 817;
    {
        PyObject *call_args[] = { tmp_args_element_name_360 };
        tmp_args_element_name_359 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_463, call_args );
    }

    if ( tmp_args_element_name_359 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 817;
        goto frame_exception_exit_1;
    }
    tmp_args_element_name_361 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_UINT );

    if (unlikely( tmp_args_element_name_361 == NULL ))
    {
        tmp_args_element_name_361 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_UINT );
    }

    if ( tmp_args_element_name_361 == NULL )
    {
        Py_DECREF( tmp_args_element_name_359 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "UINT" );
        exception_tb = NULL;

        exception_lineno = 817;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 817;
    {
        PyObject *call_args[] = { tmp_args_element_name_357, tmp_args_element_name_358, tmp_args_element_name_359, tmp_args_element_name_361 };
        tmp_assign_source_373 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_462, call_args );
    }

    Py_DECREF( tmp_args_element_name_359 );
    if ( tmp_assign_source_373 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 817;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC, tmp_assign_source_373 );
    tmp_source_name_350 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_350 == NULL ))
    {
        tmp_source_name_350 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_350 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 819;
        goto frame_exception_exit_1;
    }

    tmp_called_name_464 = LOOKUP_ATTRIBUTE( tmp_source_name_350, const_str_plain_Constant );
    if ( tmp_called_name_464 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 819;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 819;
    tmp_assign_source_374 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_464, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_I3D_swap_frame_lock_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_464 );
    if ( tmp_assign_source_374 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 819;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_I3D_swap_frame_lock, tmp_assign_source_374 );
    tmp_source_name_351 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_351 == NULL ))
    {
        tmp_source_name_351 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_351 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 820;
        goto frame_exception_exit_1;
    }

    tmp_called_name_465 = LOOKUP_ATTRIBUTE( tmp_source_name_351, const_str_plain_createBaseFunction );
    if ( tmp_called_name_465 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 820;
        goto frame_exception_exit_1;
    }
    tmp_args_name_66 = const_tuple_str_plain_wglEnableFrameLockI3D_tuple;
    tmp_kw_name_66 = _PyDict_NewPresized( 5 );
    tmp_source_name_352 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_352 == NULL ))
    {
        tmp_source_name_352 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_352 == NULL )
    {
        Py_DECREF( tmp_called_name_465 );
        Py_DECREF( tmp_kw_name_66 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 821;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_326 = LOOKUP_ATTRIBUTE( tmp_source_name_352, const_str_plain_GL );
    if ( tmp_dict_value_326 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_465 );
        Py_DECREF( tmp_kw_name_66 );

        exception_lineno = 821;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_326 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_66, tmp_dict_key_326, tmp_dict_value_326 );
    Py_DECREF( tmp_dict_value_326 );
    tmp_dict_value_327 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_327 == NULL ))
    {
        tmp_dict_value_327 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_327 == NULL )
    {
        Py_DECREF( tmp_called_name_465 );
        Py_DECREF( tmp_kw_name_66 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 821;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_327 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_66, tmp_dict_key_327, tmp_dict_value_327 );
    tmp_dict_value_328 = PyList_New( 0 );
    tmp_dict_key_328 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_66, tmp_dict_key_328, tmp_dict_value_328 );
    Py_DECREF( tmp_dict_value_328 );
    tmp_dict_value_329 = const_str_digest_10745aeb8a92445a48f6895be439976f;
    tmp_dict_key_329 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_66, tmp_dict_key_329, tmp_dict_value_329 );
    tmp_dict_value_330 = PyList_New( 0 );
    tmp_dict_key_330 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_66, tmp_dict_key_330, tmp_dict_value_330 );
    Py_DECREF( tmp_dict_value_330 );
    frame_module->f_lineno = 824;
    tmp_assign_source_375 = CALL_FUNCTION( tmp_called_name_465, tmp_args_name_66, tmp_kw_name_66 );
    Py_DECREF( tmp_called_name_465 );
    Py_DECREF( tmp_kw_name_66 );
    if ( tmp_assign_source_375 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 824;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglEnableFrameLockI3D, tmp_assign_source_375 );
    tmp_source_name_353 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_353 == NULL ))
    {
        tmp_source_name_353 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_353 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 827;
        goto frame_exception_exit_1;
    }

    tmp_called_name_466 = LOOKUP_ATTRIBUTE( tmp_source_name_353, const_str_plain_createBaseFunction );
    if ( tmp_called_name_466 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 827;
        goto frame_exception_exit_1;
    }
    tmp_args_name_67 = const_tuple_str_plain_wglDisableFrameLockI3D_tuple;
    tmp_kw_name_67 = _PyDict_NewPresized( 5 );
    tmp_source_name_354 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_354 == NULL ))
    {
        tmp_source_name_354 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_354 == NULL )
    {
        Py_DECREF( tmp_called_name_466 );
        Py_DECREF( tmp_kw_name_67 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 828;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_331 = LOOKUP_ATTRIBUTE( tmp_source_name_354, const_str_plain_GL );
    if ( tmp_dict_value_331 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_466 );
        Py_DECREF( tmp_kw_name_67 );

        exception_lineno = 828;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_331 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_67, tmp_dict_key_331, tmp_dict_value_331 );
    Py_DECREF( tmp_dict_value_331 );
    tmp_dict_value_332 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_332 == NULL ))
    {
        tmp_dict_value_332 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_332 == NULL )
    {
        Py_DECREF( tmp_called_name_466 );
        Py_DECREF( tmp_kw_name_67 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 828;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_332 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_67, tmp_dict_key_332, tmp_dict_value_332 );
    tmp_dict_value_333 = PyList_New( 0 );
    tmp_dict_key_333 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_67, tmp_dict_key_333, tmp_dict_value_333 );
    Py_DECREF( tmp_dict_value_333 );
    tmp_dict_value_334 = const_str_digest_141f64f90b69d759fbe10ddbb51496a4;
    tmp_dict_key_334 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_67, tmp_dict_key_334, tmp_dict_value_334 );
    tmp_dict_value_335 = PyList_New( 0 );
    tmp_dict_key_335 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_67, tmp_dict_key_335, tmp_dict_value_335 );
    Py_DECREF( tmp_dict_value_335 );
    frame_module->f_lineno = 831;
    tmp_assign_source_376 = CALL_FUNCTION( tmp_called_name_466, tmp_args_name_67, tmp_kw_name_67 );
    Py_DECREF( tmp_called_name_466 );
    Py_DECREF( tmp_kw_name_67 );
    if ( tmp_assign_source_376 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 831;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglDisableFrameLockI3D, tmp_assign_source_376 );
    tmp_source_name_355 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_355 == NULL ))
    {
        tmp_source_name_355 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_355 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 834;
        goto frame_exception_exit_1;
    }

    tmp_called_name_467 = LOOKUP_ATTRIBUTE( tmp_source_name_355, const_str_plain_createBaseFunction );
    if ( tmp_called_name_467 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 834;
        goto frame_exception_exit_1;
    }
    tmp_args_name_68 = const_tuple_str_plain_wglIsEnabledFrameLockI3D_tuple;
    tmp_kw_name_68 = _PyDict_NewPresized( 5 );
    tmp_source_name_356 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_356 == NULL ))
    {
        tmp_source_name_356 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_356 == NULL )
    {
        Py_DECREF( tmp_called_name_467 );
        Py_DECREF( tmp_kw_name_68 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 835;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_336 = LOOKUP_ATTRIBUTE( tmp_source_name_356, const_str_plain_GL );
    if ( tmp_dict_value_336 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_467 );
        Py_DECREF( tmp_kw_name_68 );

        exception_lineno = 835;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_336 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_68, tmp_dict_key_336, tmp_dict_value_336 );
    Py_DECREF( tmp_dict_value_336 );
    tmp_dict_value_337 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_337 == NULL ))
    {
        tmp_dict_value_337 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_337 == NULL )
    {
        Py_DECREF( tmp_called_name_467 );
        Py_DECREF( tmp_kw_name_68 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 835;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_337 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_68, tmp_dict_key_337, tmp_dict_value_337 );
    tmp_dict_value_338 = PyList_New( 1 );
    tmp_called_name_468 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_468 == NULL ))
    {
        tmp_called_name_468 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_468 == NULL )
    {
        Py_DECREF( tmp_called_name_467 );
        Py_DECREF( tmp_kw_name_68 );
        Py_DECREF( tmp_dict_value_338 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 836;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_362 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_362 == NULL ))
    {
        tmp_args_element_name_362 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_362 == NULL )
    {
        Py_DECREF( tmp_called_name_467 );
        Py_DECREF( tmp_kw_name_68 );
        Py_DECREF( tmp_dict_value_338 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 836;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 836;
    {
        PyObject *call_args[] = { tmp_args_element_name_362 };
        tmp_list_element_62 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_468, call_args );
    }

    if ( tmp_list_element_62 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_467 );
        Py_DECREF( tmp_kw_name_68 );
        Py_DECREF( tmp_dict_value_338 );

        exception_lineno = 836;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_338, 0, tmp_list_element_62 );
    tmp_dict_key_338 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_68, tmp_dict_key_338, tmp_dict_value_338 );
    Py_DECREF( tmp_dict_value_338 );
    tmp_dict_value_339 = const_str_digest_3b95da83452663614ad2fe45a53d28f4;
    tmp_dict_key_339 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_68, tmp_dict_key_339, tmp_dict_value_339 );
    tmp_dict_value_340 = LIST_COPY( const_list_str_empty_list );
    tmp_dict_key_340 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_68, tmp_dict_key_340, tmp_dict_value_340 );
    Py_DECREF( tmp_dict_value_340 );
    frame_module->f_lineno = 838;
    tmp_assign_source_377 = CALL_FUNCTION( tmp_called_name_467, tmp_args_name_68, tmp_kw_name_68 );
    Py_DECREF( tmp_called_name_467 );
    Py_DECREF( tmp_kw_name_68 );
    if ( tmp_assign_source_377 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 838;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglIsEnabledFrameLockI3D, tmp_assign_source_377 );
    tmp_source_name_357 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_357 == NULL ))
    {
        tmp_source_name_357 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_357 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 841;
        goto frame_exception_exit_1;
    }

    tmp_called_name_469 = LOOKUP_ATTRIBUTE( tmp_source_name_357, const_str_plain_createBaseFunction );
    if ( tmp_called_name_469 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 841;
        goto frame_exception_exit_1;
    }
    tmp_args_name_69 = const_tuple_str_plain_wglQueryFrameLockMasterI3D_tuple;
    tmp_kw_name_69 = _PyDict_NewPresized( 5 );
    tmp_source_name_358 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_358 == NULL ))
    {
        tmp_source_name_358 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_358 == NULL )
    {
        Py_DECREF( tmp_called_name_469 );
        Py_DECREF( tmp_kw_name_69 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 842;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_341 = LOOKUP_ATTRIBUTE( tmp_source_name_358, const_str_plain_GL );
    if ( tmp_dict_value_341 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_469 );
        Py_DECREF( tmp_kw_name_69 );

        exception_lineno = 842;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_341 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_69, tmp_dict_key_341, tmp_dict_value_341 );
    Py_DECREF( tmp_dict_value_341 );
    tmp_dict_value_342 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_342 == NULL ))
    {
        tmp_dict_value_342 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_342 == NULL )
    {
        Py_DECREF( tmp_called_name_469 );
        Py_DECREF( tmp_kw_name_69 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 842;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_342 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_69, tmp_dict_key_342, tmp_dict_value_342 );
    tmp_dict_value_343 = PyList_New( 1 );
    tmp_called_name_470 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_470 == NULL ))
    {
        tmp_called_name_470 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_470 == NULL )
    {
        Py_DECREF( tmp_called_name_469 );
        Py_DECREF( tmp_kw_name_69 );
        Py_DECREF( tmp_dict_value_343 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 843;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_363 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_363 == NULL ))
    {
        tmp_args_element_name_363 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_363 == NULL )
    {
        Py_DECREF( tmp_called_name_469 );
        Py_DECREF( tmp_kw_name_69 );
        Py_DECREF( tmp_dict_value_343 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 843;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 843;
    {
        PyObject *call_args[] = { tmp_args_element_name_363 };
        tmp_list_element_63 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_470, call_args );
    }

    if ( tmp_list_element_63 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_469 );
        Py_DECREF( tmp_kw_name_69 );
        Py_DECREF( tmp_dict_value_343 );

        exception_lineno = 843;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_343, 0, tmp_list_element_63 );
    tmp_dict_key_343 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_69, tmp_dict_key_343, tmp_dict_value_343 );
    Py_DECREF( tmp_dict_value_343 );
    tmp_dict_value_344 = const_str_digest_de4cbd2d74eda817beda27f6c601015d;
    tmp_dict_key_344 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_69, tmp_dict_key_344, tmp_dict_value_344 );
    tmp_dict_value_345 = LIST_COPY( const_list_str_empty_list );
    tmp_dict_key_345 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_69, tmp_dict_key_345, tmp_dict_value_345 );
    Py_DECREF( tmp_dict_value_345 );
    frame_module->f_lineno = 845;
    tmp_assign_source_378 = CALL_FUNCTION( tmp_called_name_469, tmp_args_name_69, tmp_kw_name_69 );
    Py_DECREF( tmp_called_name_469 );
    Py_DECREF( tmp_kw_name_69 );
    if ( tmp_assign_source_378 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 845;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglQueryFrameLockMasterI3D, tmp_assign_source_378 );
    tmp_called_name_471 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_471 == NULL ))
    {
        tmp_called_name_471 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_471 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 848;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_364 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_364 == NULL ))
    {
        tmp_args_element_name_364 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_364 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 848;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 848;
    {
        PyObject *call_args[] = { tmp_args_element_name_364 };
        tmp_assign_source_379 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_471, call_args );
    }

    if ( tmp_assign_source_379 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 848;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLENABLEFRAMELOCKI3DPROC, tmp_assign_source_379 );
    tmp_called_name_472 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_472 == NULL ))
    {
        tmp_called_name_472 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_472 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 849;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_365 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_365 == NULL ))
    {
        tmp_args_element_name_365 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_365 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 849;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 849;
    {
        PyObject *call_args[] = { tmp_args_element_name_365 };
        tmp_assign_source_380 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_472, call_args );
    }

    if ( tmp_assign_source_380 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 849;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLDISABLEFRAMELOCKI3DPROC, tmp_assign_source_380 );
    tmp_called_name_473 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_473 == NULL ))
    {
        tmp_called_name_473 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_473 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 850;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_366 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_366 == NULL ))
    {
        tmp_args_element_name_366 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_366 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 850;
        goto frame_exception_exit_1;
    }

    tmp_called_name_474 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_474 == NULL ))
    {
        tmp_called_name_474 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_474 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 850;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_368 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_368 == NULL ))
    {
        tmp_args_element_name_368 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_368 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 850;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 850;
    {
        PyObject *call_args[] = { tmp_args_element_name_368 };
        tmp_args_element_name_367 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_474, call_args );
    }

    if ( tmp_args_element_name_367 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 850;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 850;
    {
        PyObject *call_args[] = { tmp_args_element_name_366, tmp_args_element_name_367 };
        tmp_assign_source_381 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_473, call_args );
    }

    Py_DECREF( tmp_args_element_name_367 );
    if ( tmp_assign_source_381 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 850;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLISENABLEDFRAMELOCKI3DPROC, tmp_assign_source_381 );
    tmp_called_name_475 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_475 == NULL ))
    {
        tmp_called_name_475 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_475 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 851;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_369 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_369 == NULL ))
    {
        tmp_args_element_name_369 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_369 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 851;
        goto frame_exception_exit_1;
    }

    tmp_called_name_476 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_476 == NULL ))
    {
        tmp_called_name_476 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_476 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 851;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_371 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_371 == NULL ))
    {
        tmp_args_element_name_371 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_371 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 851;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 851;
    {
        PyObject *call_args[] = { tmp_args_element_name_371 };
        tmp_args_element_name_370 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_476, call_args );
    }

    if ( tmp_args_element_name_370 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 851;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 851;
    {
        PyObject *call_args[] = { tmp_args_element_name_369, tmp_args_element_name_370 };
        tmp_assign_source_382 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_475, call_args );
    }

    Py_DECREF( tmp_args_element_name_370 );
    if ( tmp_assign_source_382 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 851;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLQUERYFRAMELOCKMASTERI3DPROC, tmp_assign_source_382 );
    tmp_source_name_359 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_359 == NULL ))
    {
        tmp_source_name_359 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_359 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 853;
        goto frame_exception_exit_1;
    }

    tmp_called_name_477 = LOOKUP_ATTRIBUTE( tmp_source_name_359, const_str_plain_Constant );
    if ( tmp_called_name_477 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 853;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 853;
    tmp_assign_source_383 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_477, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_I3D_swap_frame_usage_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_477 );
    if ( tmp_assign_source_383 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 853;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_I3D_swap_frame_usage, tmp_assign_source_383 );
    tmp_source_name_360 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_360 == NULL ))
    {
        tmp_source_name_360 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_360 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 854;
        goto frame_exception_exit_1;
    }

    tmp_called_name_478 = LOOKUP_ATTRIBUTE( tmp_source_name_360, const_str_plain_createBaseFunction );
    if ( tmp_called_name_478 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 854;
        goto frame_exception_exit_1;
    }
    tmp_args_name_70 = const_tuple_str_plain_wglGetFrameUsageI3D_tuple;
    tmp_kw_name_70 = _PyDict_NewPresized( 5 );
    tmp_source_name_361 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_361 == NULL ))
    {
        tmp_source_name_361 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_361 == NULL )
    {
        Py_DECREF( tmp_called_name_478 );
        Py_DECREF( tmp_kw_name_70 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 855;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_346 = LOOKUP_ATTRIBUTE( tmp_source_name_361, const_str_plain_GL );
    if ( tmp_dict_value_346 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_478 );
        Py_DECREF( tmp_kw_name_70 );

        exception_lineno = 855;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_346 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_70, tmp_dict_key_346, tmp_dict_value_346 );
    Py_DECREF( tmp_dict_value_346 );
    tmp_dict_value_347 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_347 == NULL ))
    {
        tmp_dict_value_347 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_347 == NULL )
    {
        Py_DECREF( tmp_called_name_478 );
        Py_DECREF( tmp_kw_name_70 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 855;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_347 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_70, tmp_dict_key_347, tmp_dict_value_347 );
    tmp_dict_value_348 = PyList_New( 1 );
    tmp_called_name_479 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_479 == NULL ))
    {
        tmp_called_name_479 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_479 == NULL )
    {
        Py_DECREF( tmp_called_name_478 );
        Py_DECREF( tmp_kw_name_70 );
        Py_DECREF( tmp_dict_value_348 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 856;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_372 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_float );

    if (unlikely( tmp_args_element_name_372 == NULL ))
    {
        tmp_args_element_name_372 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_float );
    }

    if ( tmp_args_element_name_372 == NULL )
    {
        Py_DECREF( tmp_called_name_478 );
        Py_DECREF( tmp_kw_name_70 );
        Py_DECREF( tmp_dict_value_348 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_float" );
        exception_tb = NULL;

        exception_lineno = 856;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 856;
    {
        PyObject *call_args[] = { tmp_args_element_name_372 };
        tmp_list_element_64 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_479, call_args );
    }

    if ( tmp_list_element_64 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_478 );
        Py_DECREF( tmp_kw_name_70 );
        Py_DECREF( tmp_dict_value_348 );

        exception_lineno = 856;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_348, 0, tmp_list_element_64 );
    tmp_dict_key_348 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_70, tmp_dict_key_348, tmp_dict_value_348 );
    Py_DECREF( tmp_dict_value_348 );
    tmp_dict_value_349 = const_str_digest_4339572a741c7cae882de0e8c773b25b;
    tmp_dict_key_349 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_70, tmp_dict_key_349, tmp_dict_value_349 );
    tmp_dict_value_350 = LIST_COPY( const_list_str_empty_list );
    tmp_dict_key_350 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_70, tmp_dict_key_350, tmp_dict_value_350 );
    Py_DECREF( tmp_dict_value_350 );
    frame_module->f_lineno = 858;
    tmp_assign_source_384 = CALL_FUNCTION( tmp_called_name_478, tmp_args_name_70, tmp_kw_name_70 );
    Py_DECREF( tmp_called_name_478 );
    Py_DECREF( tmp_kw_name_70 );
    if ( tmp_assign_source_384 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 858;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglGetFrameUsageI3D, tmp_assign_source_384 );
    tmp_source_name_362 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_362 == NULL ))
    {
        tmp_source_name_362 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_362 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 861;
        goto frame_exception_exit_1;
    }

    tmp_called_name_480 = LOOKUP_ATTRIBUTE( tmp_source_name_362, const_str_plain_createBaseFunction );
    if ( tmp_called_name_480 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 861;
        goto frame_exception_exit_1;
    }
    tmp_args_name_71 = const_tuple_str_plain_wglBeginFrameTrackingI3D_tuple;
    tmp_kw_name_71 = _PyDict_NewPresized( 5 );
    tmp_source_name_363 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_363 == NULL ))
    {
        tmp_source_name_363 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_363 == NULL )
    {
        Py_DECREF( tmp_called_name_480 );
        Py_DECREF( tmp_kw_name_71 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 862;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_351 = LOOKUP_ATTRIBUTE( tmp_source_name_363, const_str_plain_GL );
    if ( tmp_dict_value_351 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_480 );
        Py_DECREF( tmp_kw_name_71 );

        exception_lineno = 862;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_351 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_71, tmp_dict_key_351, tmp_dict_value_351 );
    Py_DECREF( tmp_dict_value_351 );
    tmp_dict_value_352 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_352 == NULL ))
    {
        tmp_dict_value_352 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_352 == NULL )
    {
        Py_DECREF( tmp_called_name_480 );
        Py_DECREF( tmp_kw_name_71 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 862;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_352 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_71, tmp_dict_key_352, tmp_dict_value_352 );
    tmp_dict_value_353 = PyList_New( 0 );
    tmp_dict_key_353 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_71, tmp_dict_key_353, tmp_dict_value_353 );
    Py_DECREF( tmp_dict_value_353 );
    tmp_dict_value_354 = const_str_digest_06f56d0c656db6de2d78febff909077b;
    tmp_dict_key_354 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_71, tmp_dict_key_354, tmp_dict_value_354 );
    tmp_dict_value_355 = PyList_New( 0 );
    tmp_dict_key_355 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_71, tmp_dict_key_355, tmp_dict_value_355 );
    Py_DECREF( tmp_dict_value_355 );
    frame_module->f_lineno = 865;
    tmp_assign_source_385 = CALL_FUNCTION( tmp_called_name_480, tmp_args_name_71, tmp_kw_name_71 );
    Py_DECREF( tmp_called_name_480 );
    Py_DECREF( tmp_kw_name_71 );
    if ( tmp_assign_source_385 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 865;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglBeginFrameTrackingI3D, tmp_assign_source_385 );
    tmp_source_name_364 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_364 == NULL ))
    {
        tmp_source_name_364 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_364 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 868;
        goto frame_exception_exit_1;
    }

    tmp_called_name_481 = LOOKUP_ATTRIBUTE( tmp_source_name_364, const_str_plain_createBaseFunction );
    if ( tmp_called_name_481 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 868;
        goto frame_exception_exit_1;
    }
    tmp_args_name_72 = const_tuple_str_plain_wglEndFrameTrackingI3D_tuple;
    tmp_kw_name_72 = _PyDict_NewPresized( 5 );
    tmp_source_name_365 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_365 == NULL ))
    {
        tmp_source_name_365 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_365 == NULL )
    {
        Py_DECREF( tmp_called_name_481 );
        Py_DECREF( tmp_kw_name_72 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 869;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_356 = LOOKUP_ATTRIBUTE( tmp_source_name_365, const_str_plain_GL );
    if ( tmp_dict_value_356 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_481 );
        Py_DECREF( tmp_kw_name_72 );

        exception_lineno = 869;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_356 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_72, tmp_dict_key_356, tmp_dict_value_356 );
    Py_DECREF( tmp_dict_value_356 );
    tmp_dict_value_357 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_357 == NULL ))
    {
        tmp_dict_value_357 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_357 == NULL )
    {
        Py_DECREF( tmp_called_name_481 );
        Py_DECREF( tmp_kw_name_72 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 869;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_357 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_72, tmp_dict_key_357, tmp_dict_value_357 );
    tmp_dict_value_358 = PyList_New( 0 );
    tmp_dict_key_358 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_72, tmp_dict_key_358, tmp_dict_value_358 );
    Py_DECREF( tmp_dict_value_358 );
    tmp_dict_value_359 = const_str_digest_80c000664d191c25c3e4e1e5f9ac6c28;
    tmp_dict_key_359 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_72, tmp_dict_key_359, tmp_dict_value_359 );
    tmp_dict_value_360 = PyList_New( 0 );
    tmp_dict_key_360 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_72, tmp_dict_key_360, tmp_dict_value_360 );
    Py_DECREF( tmp_dict_value_360 );
    frame_module->f_lineno = 872;
    tmp_assign_source_386 = CALL_FUNCTION( tmp_called_name_481, tmp_args_name_72, tmp_kw_name_72 );
    Py_DECREF( tmp_called_name_481 );
    Py_DECREF( tmp_kw_name_72 );
    if ( tmp_assign_source_386 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 872;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglEndFrameTrackingI3D, tmp_assign_source_386 );
    tmp_source_name_366 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_366 == NULL ))
    {
        tmp_source_name_366 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_366 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 875;
        goto frame_exception_exit_1;
    }

    tmp_called_name_482 = LOOKUP_ATTRIBUTE( tmp_source_name_366, const_str_plain_createBaseFunction );
    if ( tmp_called_name_482 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 875;
        goto frame_exception_exit_1;
    }
    tmp_args_name_73 = const_tuple_str_plain_wglQueryFrameTrackingI3D_tuple;
    tmp_kw_name_73 = _PyDict_NewPresized( 5 );
    tmp_source_name_367 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_platform );

    if (unlikely( tmp_source_name_367 == NULL ))
    {
        tmp_source_name_367 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_platform );
    }

    if ( tmp_source_name_367 == NULL )
    {
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "platform" );
        exception_tb = NULL;

        exception_lineno = 876;
        goto frame_exception_exit_1;
    }

    tmp_dict_value_361 = LOOKUP_ATTRIBUTE( tmp_source_name_367, const_str_plain_GL );
    if ( tmp_dict_value_361 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );

        exception_lineno = 876;
        goto frame_exception_exit_1;
    }
    tmp_dict_key_361 = const_str_plain_dll;
    PyDict_SetItem( tmp_kw_name_73, tmp_dict_key_361, tmp_dict_value_361 );
    Py_DECREF( tmp_dict_value_361 );
    tmp_dict_value_362 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_dict_value_362 == NULL ))
    {
        tmp_dict_value_362 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_dict_value_362 == NULL )
    {
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 876;
        goto frame_exception_exit_1;
    }

    tmp_dict_key_362 = const_str_plain_resultType;
    PyDict_SetItem( tmp_kw_name_73, tmp_dict_key_362, tmp_dict_value_362 );
    tmp_dict_value_363 = PyList_New( 3 );
    tmp_called_name_483 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_483 == NULL ))
    {
        tmp_called_name_483 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_483 == NULL )
    {
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        Py_DECREF( tmp_dict_value_363 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 877;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_373 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_DWORD );

    if (unlikely( tmp_args_element_name_373 == NULL ))
    {
        tmp_args_element_name_373 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_DWORD );
    }

    if ( tmp_args_element_name_373 == NULL )
    {
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        Py_DECREF( tmp_dict_value_363 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "DWORD" );
        exception_tb = NULL;

        exception_lineno = 877;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 877;
    {
        PyObject *call_args[] = { tmp_args_element_name_373 };
        tmp_list_element_65 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_483, call_args );
    }

    if ( tmp_list_element_65 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        Py_DECREF( tmp_dict_value_363 );

        exception_lineno = 877;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_363, 0, tmp_list_element_65 );
    tmp_called_name_484 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_484 == NULL ))
    {
        tmp_called_name_484 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_484 == NULL )
    {
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        Py_DECREF( tmp_dict_value_363 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 877;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_374 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_DWORD );

    if (unlikely( tmp_args_element_name_374 == NULL ))
    {
        tmp_args_element_name_374 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_DWORD );
    }

    if ( tmp_args_element_name_374 == NULL )
    {
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        Py_DECREF( tmp_dict_value_363 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "DWORD" );
        exception_tb = NULL;

        exception_lineno = 877;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 877;
    {
        PyObject *call_args[] = { tmp_args_element_name_374 };
        tmp_list_element_65 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_484, call_args );
    }

    if ( tmp_list_element_65 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        Py_DECREF( tmp_dict_value_363 );

        exception_lineno = 877;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_363, 1, tmp_list_element_65 );
    tmp_called_name_485 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_485 == NULL ))
    {
        tmp_called_name_485 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_485 == NULL )
    {
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        Py_DECREF( tmp_dict_value_363 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 877;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_375 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_float );

    if (unlikely( tmp_args_element_name_375 == NULL ))
    {
        tmp_args_element_name_375 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_float );
    }

    if ( tmp_args_element_name_375 == NULL )
    {
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        Py_DECREF( tmp_dict_value_363 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_float" );
        exception_tb = NULL;

        exception_lineno = 877;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 877;
    {
        PyObject *call_args[] = { tmp_args_element_name_375 };
        tmp_list_element_65 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_485, call_args );
    }

    if ( tmp_list_element_65 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_called_name_482 );
        Py_DECREF( tmp_kw_name_73 );
        Py_DECREF( tmp_dict_value_363 );

        exception_lineno = 877;
        goto frame_exception_exit_1;
    }
    PyList_SET_ITEM( tmp_dict_value_363, 2, tmp_list_element_65 );
    tmp_dict_key_363 = const_str_plain_argTypes;
    PyDict_SetItem( tmp_kw_name_73, tmp_dict_key_363, tmp_dict_value_363 );
    Py_DECREF( tmp_dict_value_363 );
    tmp_dict_value_364 = const_str_digest_35e0f985ccd66d7f81162a05c95c3832;
    tmp_dict_key_364 = const_str_plain_doc;
    PyDict_SetItem( tmp_kw_name_73, tmp_dict_key_364, tmp_dict_value_364 );
    tmp_dict_value_365 = LIST_COPY( const_list_str_empty_str_empty_str_empty_list );
    tmp_dict_key_365 = const_str_plain_argNames;
    PyDict_SetItem( tmp_kw_name_73, tmp_dict_key_365, tmp_dict_value_365 );
    Py_DECREF( tmp_dict_value_365 );
    frame_module->f_lineno = 879;
    tmp_assign_source_387 = CALL_FUNCTION( tmp_called_name_482, tmp_args_name_73, tmp_kw_name_73 );
    Py_DECREF( tmp_called_name_482 );
    Py_DECREF( tmp_kw_name_73 );
    if ( tmp_assign_source_387 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 879;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_wglQueryFrameTrackingI3D, tmp_assign_source_387 );
    tmp_called_name_486 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_486 == NULL ))
    {
        tmp_called_name_486 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_486 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 882;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_376 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_376 == NULL ))
    {
        tmp_args_element_name_376 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_376 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 882;
        goto frame_exception_exit_1;
    }

    tmp_called_name_487 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_487 == NULL ))
    {
        tmp_called_name_487 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_487 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 882;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_378 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_float );

    if (unlikely( tmp_args_element_name_378 == NULL ))
    {
        tmp_args_element_name_378 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_float );
    }

    if ( tmp_args_element_name_378 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_float" );
        exception_tb = NULL;

        exception_lineno = 882;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 882;
    {
        PyObject *call_args[] = { tmp_args_element_name_378 };
        tmp_args_element_name_377 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_487, call_args );
    }

    if ( tmp_args_element_name_377 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 882;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 882;
    {
        PyObject *call_args[] = { tmp_args_element_name_376, tmp_args_element_name_377 };
        tmp_assign_source_388 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_486, call_args );
    }

    Py_DECREF( tmp_args_element_name_377 );
    if ( tmp_assign_source_388 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 882;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLGETFRAMEUSAGEI3DPROC, tmp_assign_source_388 );
    tmp_called_name_488 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_488 == NULL ))
    {
        tmp_called_name_488 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_488 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 883;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_379 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_379 == NULL ))
    {
        tmp_args_element_name_379 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_379 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 883;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 883;
    {
        PyObject *call_args[] = { tmp_args_element_name_379 };
        tmp_assign_source_389 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_488, call_args );
    }

    if ( tmp_assign_source_389 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 883;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLBEGINFRAMETRACKINGI3DPROC, tmp_assign_source_389 );
    tmp_called_name_489 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_489 == NULL ))
    {
        tmp_called_name_489 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_489 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 884;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_380 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_380 == NULL ))
    {
        tmp_args_element_name_380 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_380 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 884;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 884;
    {
        PyObject *call_args[] = { tmp_args_element_name_380 };
        tmp_assign_source_390 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_489, call_args );
    }

    if ( tmp_assign_source_390 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 884;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLENDFRAMETRACKINGI3DPROC, tmp_assign_source_390 );
    tmp_called_name_490 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );

    if (unlikely( tmp_called_name_490 == NULL ))
    {
        tmp_called_name_490 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_CFUNCTYPE );
    }

    if ( tmp_called_name_490 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "CFUNCTYPE" );
        exception_tb = NULL;

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_381 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_BOOL );

    if (unlikely( tmp_args_element_name_381 == NULL ))
    {
        tmp_args_element_name_381 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_BOOL );
    }

    if ( tmp_args_element_name_381 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "BOOL" );
        exception_tb = NULL;

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }

    tmp_called_name_491 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_491 == NULL ))
    {
        tmp_called_name_491 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_491 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_383 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_DWORD );

    if (unlikely( tmp_args_element_name_383 == NULL ))
    {
        tmp_args_element_name_383 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_DWORD );
    }

    if ( tmp_args_element_name_383 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "DWORD" );
        exception_tb = NULL;

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 885;
    {
        PyObject *call_args[] = { tmp_args_element_name_383 };
        tmp_args_element_name_382 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_491, call_args );
    }

    if ( tmp_args_element_name_382 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 885;
        goto frame_exception_exit_1;
    }
    tmp_called_name_492 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_492 == NULL ))
    {
        tmp_called_name_492 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_492 == NULL )
    {
        Py_DECREF( tmp_args_element_name_382 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_385 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_DWORD );

    if (unlikely( tmp_args_element_name_385 == NULL ))
    {
        tmp_args_element_name_385 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_DWORD );
    }

    if ( tmp_args_element_name_385 == NULL )
    {
        Py_DECREF( tmp_args_element_name_382 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "DWORD" );
        exception_tb = NULL;

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 885;
    {
        PyObject *call_args[] = { tmp_args_element_name_385 };
        tmp_args_element_name_384 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_492, call_args );
    }

    if ( tmp_args_element_name_384 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_382 );

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }
    tmp_called_name_493 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_POINTER );

    if (unlikely( tmp_called_name_493 == NULL ))
    {
        tmp_called_name_493 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_POINTER );
    }

    if ( tmp_called_name_493 == NULL )
    {
        Py_DECREF( tmp_args_element_name_382 );
        Py_DECREF( tmp_args_element_name_384 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "POINTER" );
        exception_tb = NULL;

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }

    tmp_args_element_name_387 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_c_float );

    if (unlikely( tmp_args_element_name_387 == NULL ))
    {
        tmp_args_element_name_387 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_c_float );
    }

    if ( tmp_args_element_name_387 == NULL )
    {
        Py_DECREF( tmp_args_element_name_382 );
        Py_DECREF( tmp_args_element_name_384 );
        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "c_float" );
        exception_tb = NULL;

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }

    frame_module->f_lineno = 885;
    {
        PyObject *call_args[] = { tmp_args_element_name_387 };
        tmp_args_element_name_386 = CALL_FUNCTION_WITH_ARGS1( tmp_called_name_493, call_args );
    }

    if ( tmp_args_element_name_386 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );
        Py_DECREF( tmp_args_element_name_382 );
        Py_DECREF( tmp_args_element_name_384 );

        exception_lineno = 885;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 885;
    {
        PyObject *call_args[] = { tmp_args_element_name_381, tmp_args_element_name_382, tmp_args_element_name_384, tmp_args_element_name_386 };
        tmp_assign_source_391 = CALL_FUNCTION_WITH_ARGS4( tmp_called_name_490, call_args );
    }

    Py_DECREF( tmp_args_element_name_382 );
    Py_DECREF( tmp_args_element_name_384 );
    Py_DECREF( tmp_args_element_name_386 );
    if ( tmp_assign_source_391 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 885;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_PFNWGLQUERYFRAMETRACKINGI3DPROC, tmp_assign_source_391 );
    tmp_source_name_368 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_368 == NULL ))
    {
        tmp_source_name_368 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_368 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 887;
        goto frame_exception_exit_1;
    }

    tmp_called_name_494 = LOOKUP_ATTRIBUTE( tmp_source_name_368, const_str_plain_Constant );
    if ( tmp_called_name_494 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 887;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 887;
    tmp_assign_source_392 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_494, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_ATI_pixel_format_float_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_494 );
    if ( tmp_assign_source_392 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 887;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_ATI_pixel_format_float, tmp_assign_source_392 );
    tmp_source_name_369 = GET_STRING_DICT_VALUE( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_constant );

    if (unlikely( tmp_source_name_369 == NULL ))
    {
        tmp_source_name_369 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_constant );
    }

    if ( tmp_source_name_369 == NULL )
    {

        exception_type = PyExc_NameError;
        Py_INCREF( exception_type );
        exception_value = PyString_FromFormat( "name '%s' is not defined", "constant" );
        exception_tb = NULL;

        exception_lineno = 889;
        goto frame_exception_exit_1;
    }

    tmp_called_name_495 = LOOKUP_ATTRIBUTE( tmp_source_name_369, const_str_plain_Constant );
    if ( tmp_called_name_495 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 889;
        goto frame_exception_exit_1;
    }
    frame_module->f_lineno = 889;
    tmp_assign_source_393 = CALL_FUNCTION_WITH_ARGS2( tmp_called_name_495, &PyTuple_GET_ITEM( const_tuple_str_plain_WGL_NV_float_buffer_int_pos_1_tuple, 0 ) );

    Py_DECREF( tmp_called_name_495 );
    if ( tmp_assign_source_393 == NULL )
    {
        assert( ERROR_OCCURRED() );

        FETCH_ERROR_OCCURRED( &exception_type, &exception_value, &exception_tb );


        exception_lineno = 889;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain_WGL_NV_float_buffer, tmp_assign_source_393 );

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION( frame_module );
#endif
    popFrameStack();

    assertFrameObject( frame_module );
    Py_DECREF( frame_module );

    goto frame_no_exception_1;
    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION( frame_module );
#endif

    if ( exception_tb == NULL )
    {
        exception_tb = MAKE_TRACEBACK( frame_module, exception_lineno );
    }
    else if ( exception_tb->tb_frame != frame_module )
    {
        PyTracebackObject *traceback_new = MAKE_TRACEBACK( frame_module, exception_lineno );
        traceback_new->tb_next = exception_tb;
        exception_tb = traceback_new;
    }

    // Put the previous frame back on top.
    popFrameStack();

#if PYTHON_VERSION >= 340
    frame_module->f_executing -= 1;
#endif
    Py_DECREF( frame_module );

    // Return the error.
    goto module_exception_exit;
    frame_no_exception_1:;
    tmp_assign_source_394 = LIST_COPY( const_list_7e8083d75b3017217439ee4916f4e482_list );
    UPDATE_STRING_DICT1( moduledict_OpenGL$raw$_WGL_ARB, (Nuitka_StringObject *)const_str_plain___all__, tmp_assign_source_394 );

    return MOD_RETURN_VALUE( module_OpenGL$raw$_WGL_ARB );
    module_exception_exit:
    RESTORE_ERROR_OCCURRED( exception_type, exception_value, exception_tb );
    return MOD_RETURN_VALUE( NULL );
}
